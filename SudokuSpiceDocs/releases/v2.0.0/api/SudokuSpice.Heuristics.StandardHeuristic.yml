### YamlMime:ManagedReference
items:
- uid: SudokuSpice.Heuristics.StandardHeuristic
  commentId: T:SudokuSpice.Heuristics.StandardHeuristic
  id: StandardHeuristic
  parent: SudokuSpice.Heuristics
  children:
  - SudokuSpice.Heuristics.StandardHeuristic.#ctor(SudokuSpice.IReadOnlyBoxPuzzle,SudokuSpice.PossibleValues,SudokuSpice.Rules.IMissingRowValuesTracker,SudokuSpice.Rules.IMissingColumnValuesTracker,SudokuSpice.Rules.IMissingBoxValuesTracker)
  - SudokuSpice.Heuristics.StandardHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.PossibleValues,System.Collections.Generic.IReadOnlyList{SudokuSpice.Rules.ISudokuRule})
  - SudokuSpice.Heuristics.StandardHeuristic.UndoLastUpdate
  - SudokuSpice.Heuristics.StandardHeuristic.UpdateAll
  langs:
  - csharp
  - vb
  name: StandardHeuristic
  nameWithType: StandardHeuristic
  fullName: SudokuSpice.Heuristics.StandardHeuristic
  type: Class
  source:
    remote:
      path: SudokuSpice/Heuristics/StandardHeuristic.cs
      branch: master
      repo: https://github.com/MorganR/SudokuSpice
    id: StandardHeuristic
    path: ../SudokuSpice/Heuristics/StandardHeuristic.cs
    startLine: 9
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.Heuristics
  summary: "\nProvides the standard <code>UniqueIn*</code> heuristics.\n"
  example: []
  syntax:
    content: 'public class StandardHeuristic : ISudokuHeuristic'
    content.vb: >-
      Public Class StandardHeuristic
          Implements ISudokuHeuristic
  inheritance:
  - System.Object
  implements:
  - SudokuSpice.Heuristics.ISudokuHeuristic
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SudokuSpice.Heuristics.StandardHeuristic.#ctor(SudokuSpice.IReadOnlyBoxPuzzle,SudokuSpice.PossibleValues,SudokuSpice.Rules.IMissingRowValuesTracker,SudokuSpice.Rules.IMissingColumnValuesTracker,SudokuSpice.Rules.IMissingBoxValuesTracker)
  commentId: M:SudokuSpice.Heuristics.StandardHeuristic.#ctor(SudokuSpice.IReadOnlyBoxPuzzle,SudokuSpice.PossibleValues,SudokuSpice.Rules.IMissingRowValuesTracker,SudokuSpice.Rules.IMissingColumnValuesTracker,SudokuSpice.Rules.IMissingBoxValuesTracker)
  id: '#ctor(SudokuSpice.IReadOnlyBoxPuzzle,SudokuSpice.PossibleValues,SudokuSpice.Rules.IMissingRowValuesTracker,SudokuSpice.Rules.IMissingColumnValuesTracker,SudokuSpice.Rules.IMissingBoxValuesTracker)'
  parent: SudokuSpice.Heuristics.StandardHeuristic
  langs:
  - csharp
  - vb
  name: StandardHeuristic(IReadOnlyBoxPuzzle, PossibleValues, IMissingRowValuesTracker, IMissingColumnValuesTracker, IMissingBoxValuesTracker)
  nameWithType: StandardHeuristic.StandardHeuristic(IReadOnlyBoxPuzzle, PossibleValues, IMissingRowValuesTracker, IMissingColumnValuesTracker, IMissingBoxValuesTracker)
  fullName: SudokuSpice.Heuristics.StandardHeuristic.StandardHeuristic(SudokuSpice.IReadOnlyBoxPuzzle, SudokuSpice.PossibleValues, SudokuSpice.Rules.IMissingRowValuesTracker, SudokuSpice.Rules.IMissingColumnValuesTracker, SudokuSpice.Rules.IMissingBoxValuesTracker)
  type: Constructor
  source:
    remote:
      path: SudokuSpice/Heuristics/StandardHeuristic.cs
      branch: master
      repo: https://github.com/MorganR/SudokuSpice
    id: .ctor
    path: ../SudokuSpice/Heuristics/StandardHeuristic.cs
    startLine: 16
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.Heuristics
  syntax:
    content: public StandardHeuristic(IReadOnlyBoxPuzzle puzzle, PossibleValues possibleValues, IMissingRowValuesTracker rowRule, IMissingColumnValuesTracker columnRule, IMissingBoxValuesTracker boxRule)
    parameters:
    - id: puzzle
      type: SudokuSpice.IReadOnlyBoxPuzzle
    - id: possibleValues
      type: SudokuSpice.PossibleValues
    - id: rowRule
      type: SudokuSpice.Rules.IMissingRowValuesTracker
    - id: columnRule
      type: SudokuSpice.Rules.IMissingColumnValuesTracker
    - id: boxRule
      type: SudokuSpice.Rules.IMissingBoxValuesTracker
    content.vb: Public Sub New(puzzle As IReadOnlyBoxPuzzle, possibleValues As PossibleValues, rowRule As IMissingRowValuesTracker, columnRule As IMissingColumnValuesTracker, boxRule As IMissingBoxValuesTracker)
  overload: SudokuSpice.Heuristics.StandardHeuristic.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SudokuSpice.Heuristics.StandardHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.PossibleValues,System.Collections.Generic.IReadOnlyList{SudokuSpice.Rules.ISudokuRule})
  commentId: M:SudokuSpice.Heuristics.StandardHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.PossibleValues,System.Collections.Generic.IReadOnlyList{SudokuSpice.Rules.ISudokuRule})
  id: CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.PossibleValues,System.Collections.Generic.IReadOnlyList{SudokuSpice.Rules.ISudokuRule})
  parent: SudokuSpice.Heuristics.StandardHeuristic
  langs:
  - csharp
  - vb
  name: CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues, IReadOnlyList<ISudokuRule>)
  nameWithType: StandardHeuristic.CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues, IReadOnlyList<ISudokuRule>)
  fullName: SudokuSpice.Heuristics.StandardHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.PossibleValues, System.Collections.Generic.IReadOnlyList<SudokuSpice.Rules.ISudokuRule>)
  type: Method
  source:
    remote:
      path: SudokuSpice/Heuristics/StandardHeuristic.cs
      branch: master
      repo: https://github.com/MorganR/SudokuSpice
    id: CopyWithNewReferences
    path: ../SudokuSpice/Heuristics/StandardHeuristic.cs
    startLine: 45
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.Heuristics
  summary: "\nCreates a deep copy of this heuristic. Requires <code>rules</code> to contain an\n<xref href=\"SudokuSpice.Rules.IMissingBoxValuesTracker\" data-throw-if-not-resolved=\"false\"></xref>, an <xref href=\"SudokuSpice.Rules.IMissingColumnValuesTracker\" data-throw-if-not-resolved=\"false\"></xref>,\nand an <xref href=\"SudokuSpice.Rules.IMissingRowValuesTracker\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ISudokuHeuristic CopyWithNewReferences(IReadOnlyPuzzle puzzle, PossibleValues possibleValues, IReadOnlyList<ISudokuRule> rules)
    parameters:
    - id: puzzle
      type: SudokuSpice.IReadOnlyPuzzle
    - id: possibleValues
      type: SudokuSpice.PossibleValues
    - id: rules
      type: System.Collections.Generic.IReadOnlyList{SudokuSpice.Rules.ISudokuRule}
    return:
      type: SudokuSpice.Heuristics.ISudokuHeuristic
    content.vb: Public Function CopyWithNewReferences(puzzle As IReadOnlyPuzzle, possibleValues As PossibleValues, rules As IReadOnlyList(Of ISudokuRule)) As ISudokuHeuristic
  overload: SudokuSpice.Heuristics.StandardHeuristic.CopyWithNewReferences*
  implements:
  - SudokuSpice.Heuristics.ISudokuHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.PossibleValues,System.Collections.Generic.IReadOnlyList{SudokuSpice.Rules.ISudokuRule})
  nameWithType.vb: StandardHeuristic.CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues, IReadOnlyList(Of ISudokuRule))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SudokuSpice.Heuristics.StandardHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.PossibleValues, System.Collections.Generic.IReadOnlyList(Of SudokuSpice.Rules.ISudokuRule))
  name.vb: CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues, IReadOnlyList(Of ISudokuRule))
- uid: SudokuSpice.Heuristics.StandardHeuristic.UndoLastUpdate
  commentId: M:SudokuSpice.Heuristics.StandardHeuristic.UndoLastUpdate
  id: UndoLastUpdate
  parent: SudokuSpice.Heuristics.StandardHeuristic
  langs:
  - csharp
  - vb
  name: UndoLastUpdate()
  nameWithType: StandardHeuristic.UndoLastUpdate()
  fullName: SudokuSpice.Heuristics.StandardHeuristic.UndoLastUpdate()
  type: Method
  source:
    remote:
      path: SudokuSpice/Heuristics/StandardHeuristic.cs
      branch: master
      repo: https://github.com/MorganR/SudokuSpice
    id: UndoLastUpdate
    path: ../SudokuSpice/Heuristics/StandardHeuristic.cs
    startLine: 54
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.Heuristics
  summary: "\nUndoes the last modifications made by this heuristic.\n"
  example: []
  syntax:
    content: public void UndoLastUpdate()
    content.vb: Public Sub UndoLastUpdate
  overload: SudokuSpice.Heuristics.StandardHeuristic.UndoLastUpdate*
  implements:
  - SudokuSpice.Heuristics.ISudokuHeuristic.UndoLastUpdate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SudokuSpice.Heuristics.StandardHeuristic.UpdateAll
  commentId: M:SudokuSpice.Heuristics.StandardHeuristic.UpdateAll
  id: UpdateAll
  parent: SudokuSpice.Heuristics.StandardHeuristic
  langs:
  - csharp
  - vb
  name: UpdateAll()
  nameWithType: StandardHeuristic.UpdateAll()
  fullName: SudokuSpice.Heuristics.StandardHeuristic.UpdateAll()
  type: Method
  source:
    remote:
      path: SudokuSpice/Heuristics/StandardHeuristic.cs
      branch: master
      repo: https://github.com/MorganR/SudokuSpice
    id: UpdateAll
    path: ../SudokuSpice/Heuristics/StandardHeuristic.cs
    startLine: 69
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.Heuristics
  summary: "\nUpdates all the current possible values.\n"
  example: []
  syntax:
    content: public bool UpdateAll()
    return:
      type: System.Boolean
      description: Returns true if any modifications were made.
    content.vb: Public Function UpdateAll As Boolean
  overload: SudokuSpice.Heuristics.StandardHeuristic.UpdateAll*
  implements:
  - SudokuSpice.Heuristics.ISudokuHeuristic.UpdateAll
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SudokuSpice.Heuristics
  commentId: N:SudokuSpice.Heuristics
  name: SudokuSpice.Heuristics
  nameWithType: SudokuSpice.Heuristics
  fullName: SudokuSpice.Heuristics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SudokuSpice.Heuristics.ISudokuHeuristic
  commentId: T:SudokuSpice.Heuristics.ISudokuHeuristic
  parent: SudokuSpice.Heuristics
  name: ISudokuHeuristic
  nameWithType: ISudokuHeuristic
  fullName: SudokuSpice.Heuristics.ISudokuHeuristic
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SudokuSpice.Heuristics.StandardHeuristic.#ctor*
  commentId: Overload:SudokuSpice.Heuristics.StandardHeuristic.#ctor
  name: StandardHeuristic
  nameWithType: StandardHeuristic.StandardHeuristic
  fullName: SudokuSpice.Heuristics.StandardHeuristic.StandardHeuristic
- uid: SudokuSpice.IReadOnlyBoxPuzzle
  commentId: T:SudokuSpice.IReadOnlyBoxPuzzle
  parent: SudokuSpice
  name: IReadOnlyBoxPuzzle
  nameWithType: IReadOnlyBoxPuzzle
  fullName: SudokuSpice.IReadOnlyBoxPuzzle
- uid: SudokuSpice.PossibleValues
  commentId: T:SudokuSpice.PossibleValues
  parent: SudokuSpice
  name: PossibleValues
  nameWithType: PossibleValues
  fullName: SudokuSpice.PossibleValues
- uid: SudokuSpice.Rules.IMissingRowValuesTracker
  commentId: T:SudokuSpice.Rules.IMissingRowValuesTracker
  parent: SudokuSpice.Rules
  name: IMissingRowValuesTracker
  nameWithType: IMissingRowValuesTracker
  fullName: SudokuSpice.Rules.IMissingRowValuesTracker
- uid: SudokuSpice.Rules.IMissingColumnValuesTracker
  commentId: T:SudokuSpice.Rules.IMissingColumnValuesTracker
  parent: SudokuSpice.Rules
  name: IMissingColumnValuesTracker
  nameWithType: IMissingColumnValuesTracker
  fullName: SudokuSpice.Rules.IMissingColumnValuesTracker
- uid: SudokuSpice.Rules.IMissingBoxValuesTracker
  commentId: T:SudokuSpice.Rules.IMissingBoxValuesTracker
  parent: SudokuSpice.Rules
  name: IMissingBoxValuesTracker
  nameWithType: IMissingBoxValuesTracker
  fullName: SudokuSpice.Rules.IMissingBoxValuesTracker
- uid: SudokuSpice
  commentId: N:SudokuSpice
  name: SudokuSpice
  nameWithType: SudokuSpice
  fullName: SudokuSpice
- uid: SudokuSpice
  commentId: N:SudokuSpice
  name: SudokuSpice
  nameWithType: SudokuSpice
  fullName: SudokuSpice
- uid: SudokuSpice.Rules
  commentId: N:SudokuSpice.Rules
  name: SudokuSpice.Rules
  nameWithType: SudokuSpice.Rules
  fullName: SudokuSpice.Rules
- uid: SudokuSpice.Heuristics.StandardHeuristic.CopyWithNewReferences*
  commentId: Overload:SudokuSpice.Heuristics.StandardHeuristic.CopyWithNewReferences
  name: CopyWithNewReferences
  nameWithType: StandardHeuristic.CopyWithNewReferences
  fullName: SudokuSpice.Heuristics.StandardHeuristic.CopyWithNewReferences
- uid: SudokuSpice.Heuristics.ISudokuHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.PossibleValues,System.Collections.Generic.IReadOnlyList{SudokuSpice.Rules.ISudokuRule})
  commentId: M:SudokuSpice.Heuristics.ISudokuHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.PossibleValues,System.Collections.Generic.IReadOnlyList{SudokuSpice.Rules.ISudokuRule})
  parent: SudokuSpice.Heuristics.ISudokuHeuristic
  isExternal: true
  name: CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues, IReadOnlyList<ISudokuRule>)
  nameWithType: ISudokuHeuristic.CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues, IReadOnlyList<ISudokuRule>)
  fullName: SudokuSpice.Heuristics.ISudokuHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.PossibleValues, System.Collections.Generic.IReadOnlyList<SudokuSpice.Rules.ISudokuRule>)
  nameWithType.vb: ISudokuHeuristic.CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues, IReadOnlyList(Of ISudokuRule))
  fullName.vb: SudokuSpice.Heuristics.ISudokuHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.PossibleValues, System.Collections.Generic.IReadOnlyList(Of SudokuSpice.Rules.ISudokuRule))
  name.vb: CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues, IReadOnlyList(Of ISudokuRule))
  spec.csharp:
  - uid: SudokuSpice.Heuristics.ISudokuHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.PossibleValues,System.Collections.Generic.IReadOnlyList{SudokuSpice.Rules.ISudokuRule})
    name: CopyWithNewReferences
    nameWithType: ISudokuHeuristic.CopyWithNewReferences
    fullName: SudokuSpice.Heuristics.ISudokuHeuristic.CopyWithNewReferences
  - name: (
    nameWithType: (
    fullName: (
  - uid: SudokuSpice.IReadOnlyPuzzle
    name: IReadOnlyPuzzle
    nameWithType: IReadOnlyPuzzle
    fullName: SudokuSpice.IReadOnlyPuzzle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SudokuSpice.PossibleValues
    name: PossibleValues
    nameWithType: PossibleValues
    fullName: SudokuSpice.PossibleValues
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SudokuSpice.Rules.ISudokuRule
    name: ISudokuRule
    nameWithType: ISudokuRule
    fullName: SudokuSpice.Rules.ISudokuRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SudokuSpice.Heuristics.ISudokuHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.PossibleValues,System.Collections.Generic.IReadOnlyList{SudokuSpice.Rules.ISudokuRule})
    name: CopyWithNewReferences
    nameWithType: ISudokuHeuristic.CopyWithNewReferences
    fullName: SudokuSpice.Heuristics.ISudokuHeuristic.CopyWithNewReferences
  - name: (
    nameWithType: (
    fullName: (
  - uid: SudokuSpice.IReadOnlyPuzzle
    name: IReadOnlyPuzzle
    nameWithType: IReadOnlyPuzzle
    fullName: SudokuSpice.IReadOnlyPuzzle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SudokuSpice.PossibleValues
    name: PossibleValues
    nameWithType: PossibleValues
    fullName: SudokuSpice.PossibleValues
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SudokuSpice.Rules.ISudokuRule
    name: ISudokuRule
    nameWithType: ISudokuRule
    fullName: SudokuSpice.Rules.ISudokuRule
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SudokuSpice.IReadOnlyPuzzle
  commentId: T:SudokuSpice.IReadOnlyPuzzle
  parent: SudokuSpice
  name: IReadOnlyPuzzle
  nameWithType: IReadOnlyPuzzle
  fullName: SudokuSpice.IReadOnlyPuzzle
- uid: System.Collections.Generic.IReadOnlyList{SudokuSpice.Rules.ISudokuRule}
  commentId: T:System.Collections.Generic.IReadOnlyList{SudokuSpice.Rules.ISudokuRule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<ISudokuRule>
  nameWithType: IReadOnlyList<ISudokuRule>
  fullName: System.Collections.Generic.IReadOnlyList<SudokuSpice.Rules.ISudokuRule>
  nameWithType.vb: IReadOnlyList(Of ISudokuRule)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of SudokuSpice.Rules.ISudokuRule)
  name.vb: IReadOnlyList(Of ISudokuRule)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SudokuSpice.Rules.ISudokuRule
    name: ISudokuRule
    nameWithType: ISudokuRule
    fullName: SudokuSpice.Rules.ISudokuRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SudokuSpice.Rules.ISudokuRule
    name: ISudokuRule
    nameWithType: ISudokuRule
    fullName: SudokuSpice.Rules.ISudokuRule
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SudokuSpice.Heuristics.StandardHeuristic.UndoLastUpdate*
  commentId: Overload:SudokuSpice.Heuristics.StandardHeuristic.UndoLastUpdate
  name: UndoLastUpdate
  nameWithType: StandardHeuristic.UndoLastUpdate
  fullName: SudokuSpice.Heuristics.StandardHeuristic.UndoLastUpdate
- uid: SudokuSpice.Heuristics.ISudokuHeuristic.UndoLastUpdate
  commentId: M:SudokuSpice.Heuristics.ISudokuHeuristic.UndoLastUpdate
  parent: SudokuSpice.Heuristics.ISudokuHeuristic
  name: UndoLastUpdate()
  nameWithType: ISudokuHeuristic.UndoLastUpdate()
  fullName: SudokuSpice.Heuristics.ISudokuHeuristic.UndoLastUpdate()
  spec.csharp:
  - uid: SudokuSpice.Heuristics.ISudokuHeuristic.UndoLastUpdate
    name: UndoLastUpdate
    nameWithType: ISudokuHeuristic.UndoLastUpdate
    fullName: SudokuSpice.Heuristics.ISudokuHeuristic.UndoLastUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SudokuSpice.Heuristics.ISudokuHeuristic.UndoLastUpdate
    name: UndoLastUpdate
    nameWithType: ISudokuHeuristic.UndoLastUpdate
    fullName: SudokuSpice.Heuristics.ISudokuHeuristic.UndoLastUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SudokuSpice.Heuristics.StandardHeuristic.UpdateAll*
  commentId: Overload:SudokuSpice.Heuristics.StandardHeuristic.UpdateAll
  name: UpdateAll
  nameWithType: StandardHeuristic.UpdateAll
  fullName: SudokuSpice.Heuristics.StandardHeuristic.UpdateAll
- uid: SudokuSpice.Heuristics.ISudokuHeuristic.UpdateAll
  commentId: M:SudokuSpice.Heuristics.ISudokuHeuristic.UpdateAll
  parent: SudokuSpice.Heuristics.ISudokuHeuristic
  name: UpdateAll()
  nameWithType: ISudokuHeuristic.UpdateAll()
  fullName: SudokuSpice.Heuristics.ISudokuHeuristic.UpdateAll()
  spec.csharp:
  - uid: SudokuSpice.Heuristics.ISudokuHeuristic.UpdateAll
    name: UpdateAll
    nameWithType: ISudokuHeuristic.UpdateAll
    fullName: SudokuSpice.Heuristics.ISudokuHeuristic.UpdateAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SudokuSpice.Heuristics.ISudokuHeuristic.UpdateAll
    name: UpdateAll
    nameWithType: ISudokuHeuristic.UpdateAll
    fullName: SudokuSpice.Heuristics.ISudokuHeuristic.UpdateAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
