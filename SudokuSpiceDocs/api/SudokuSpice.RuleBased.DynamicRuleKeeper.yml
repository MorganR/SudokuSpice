### YamlMime:ManagedReference
items:
- uid: SudokuSpice.RuleBased.DynamicRuleKeeper
  commentId: T:SudokuSpice.RuleBased.DynamicRuleKeeper
  id: DynamicRuleKeeper
  parent: SudokuSpice.RuleBased
  children:
  - SudokuSpice.RuleBased.DynamicRuleKeeper.#ctor(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.RuleBased.PossibleValues,System.Collections.Generic.IReadOnlyList{SudokuSpice.RuleBased.Rules.ISudokuRule})
  - SudokuSpice.RuleBased.DynamicRuleKeeper.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.RuleBased.PossibleValues)
  - SudokuSpice.RuleBased.DynamicRuleKeeper.GetRules
  - SudokuSpice.RuleBased.DynamicRuleKeeper.TrySet(SudokuSpice.Coordinate@,System.Int32)
  - SudokuSpice.RuleBased.DynamicRuleKeeper.Unset(SudokuSpice.Coordinate@,System.Int32)
  langs:
  - csharp
  - vb
  name: DynamicRuleKeeper
  nameWithType: DynamicRuleKeeper
  fullName: SudokuSpice.RuleBased.DynamicRuleKeeper
  type: Class
  source:
    remote:
      path: SudokuSpice/RuleBased/framework/DynamicRuleKeeper.cs
      branch: master
      repo: https://github.com/MorganR/SudokuSpice
    id: DynamicRuleKeeper
    path: ../SudokuSpice/RuleBased/framework/DynamicRuleKeeper.cs
    startLine: 9
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.RuleBased
  summary: "\nEnforces an arbitrary injected set of rules.\n"
  example: []
  syntax:
    content: 'public class DynamicRuleKeeper : ISudokuRuleKeeper'
    content.vb: >-
      Public Class DynamicRuleKeeper

          Implements ISudokuRuleKeeper
  inheritance:
  - System.Object
  implements:
  - SudokuSpice.RuleBased.ISudokuRuleKeeper
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SudokuSpice.RuleBased.DynamicRuleKeeper.#ctor(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.RuleBased.PossibleValues,System.Collections.Generic.IReadOnlyList{SudokuSpice.RuleBased.Rules.ISudokuRule})
  commentId: M:SudokuSpice.RuleBased.DynamicRuleKeeper.#ctor(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.RuleBased.PossibleValues,System.Collections.Generic.IReadOnlyList{SudokuSpice.RuleBased.Rules.ISudokuRule})
  id: '#ctor(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.RuleBased.PossibleValues,System.Collections.Generic.IReadOnlyList{SudokuSpice.RuleBased.Rules.ISudokuRule})'
  parent: SudokuSpice.RuleBased.DynamicRuleKeeper
  langs:
  - csharp
  - vb
  name: DynamicRuleKeeper(IReadOnlyPuzzle, PossibleValues, IReadOnlyList<ISudokuRule>)
  nameWithType: DynamicRuleKeeper.DynamicRuleKeeper(IReadOnlyPuzzle, PossibleValues, IReadOnlyList<ISudokuRule>)
  fullName: SudokuSpice.RuleBased.DynamicRuleKeeper.DynamicRuleKeeper(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.RuleBased.PossibleValues, System.Collections.Generic.IReadOnlyList<SudokuSpice.RuleBased.Rules.ISudokuRule>)
  type: Constructor
  source:
    remote:
      path: SudokuSpice/RuleBased/framework/DynamicRuleKeeper.cs
      branch: master
      repo: https://github.com/MorganR/SudokuSpice
    id: .ctor
    path: ../SudokuSpice/RuleBased/framework/DynamicRuleKeeper.cs
    startLine: 16
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.RuleBased
  syntax:
    content: public DynamicRuleKeeper(IReadOnlyPuzzle puzzle, PossibleValues possibleValues, IReadOnlyList<ISudokuRule> rules)
    parameters:
    - id: puzzle
      type: SudokuSpice.IReadOnlyPuzzle
    - id: possibleValues
      type: SudokuSpice.RuleBased.PossibleValues
    - id: rules
      type: System.Collections.Generic.IReadOnlyList{SudokuSpice.RuleBased.Rules.ISudokuRule}
    content.vb: Public Sub New(puzzle As IReadOnlyPuzzle, possibleValues As PossibleValues, rules As IReadOnlyList(Of ISudokuRule))
  overload: SudokuSpice.RuleBased.DynamicRuleKeeper.#ctor*
  nameWithType.vb: DynamicRuleKeeper.DynamicRuleKeeper(IReadOnlyPuzzle, PossibleValues, IReadOnlyList(Of ISudokuRule))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SudokuSpice.RuleBased.DynamicRuleKeeper.DynamicRuleKeeper(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.RuleBased.PossibleValues, System.Collections.Generic.IReadOnlyList(Of SudokuSpice.RuleBased.Rules.ISudokuRule))
  name.vb: DynamicRuleKeeper(IReadOnlyPuzzle, PossibleValues, IReadOnlyList(Of ISudokuRule))
- uid: SudokuSpice.RuleBased.DynamicRuleKeeper.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.RuleBased.PossibleValues)
  commentId: M:SudokuSpice.RuleBased.DynamicRuleKeeper.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.RuleBased.PossibleValues)
  id: CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.RuleBased.PossibleValues)
  parent: SudokuSpice.RuleBased.DynamicRuleKeeper
  langs:
  - csharp
  - vb
  name: CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues)
  nameWithType: DynamicRuleKeeper.CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues)
  fullName: SudokuSpice.RuleBased.DynamicRuleKeeper.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.RuleBased.PossibleValues)
  type: Method
  source:
    remote:
      path: SudokuSpice/RuleBased/framework/DynamicRuleKeeper.cs
      branch: master
      repo: https://github.com/MorganR/SudokuSpice
    id: CopyWithNewReferences
    path: ../SudokuSpice/RuleBased/framework/DynamicRuleKeeper.cs
    startLine: 50
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.RuleBased
  example: []
  syntax:
    content: public ISudokuRuleKeeper CopyWithNewReferences(IReadOnlyPuzzle puzzle, PossibleValues possibleValues)
    parameters:
    - id: puzzle
      type: SudokuSpice.IReadOnlyPuzzle
    - id: possibleValues
      type: SudokuSpice.RuleBased.PossibleValues
    return:
      type: SudokuSpice.RuleBased.ISudokuRuleKeeper
    content.vb: Public Function CopyWithNewReferences(puzzle As IReadOnlyPuzzle, possibleValues As PossibleValues) As ISudokuRuleKeeper
  overload: SudokuSpice.RuleBased.DynamicRuleKeeper.CopyWithNewReferences*
  implements:
  - SudokuSpice.RuleBased.ISudokuRuleKeeper.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.RuleBased.PossibleValues)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SudokuSpice.RuleBased.DynamicRuleKeeper.GetRules
  commentId: M:SudokuSpice.RuleBased.DynamicRuleKeeper.GetRules
  id: GetRules
  parent: SudokuSpice.RuleBased.DynamicRuleKeeper
  langs:
  - csharp
  - vb
  name: GetRules()
  nameWithType: DynamicRuleKeeper.GetRules()
  fullName: SudokuSpice.RuleBased.DynamicRuleKeeper.GetRules()
  type: Method
  source:
    remote:
      path: SudokuSpice/RuleBased/framework/DynamicRuleKeeper.cs
      branch: master
      repo: https://github.com/MorganR/SudokuSpice
    id: GetRules
    path: ../SudokuSpice/RuleBased/framework/DynamicRuleKeeper.cs
    startLine: 53
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.RuleBased
  example: []
  syntax:
    content: public IReadOnlyList<ISudokuRule> GetRules()
    return:
      type: System.Collections.Generic.IReadOnlyList{SudokuSpice.RuleBased.Rules.ISudokuRule}
    content.vb: Public Function GetRules As IReadOnlyList(Of ISudokuRule)
  overload: SudokuSpice.RuleBased.DynamicRuleKeeper.GetRules*
  implements:
  - SudokuSpice.RuleBased.ISudokuRuleKeeper.GetRules
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SudokuSpice.RuleBased.DynamicRuleKeeper.TrySet(SudokuSpice.Coordinate@,System.Int32)
  commentId: M:SudokuSpice.RuleBased.DynamicRuleKeeper.TrySet(SudokuSpice.Coordinate@,System.Int32)
  id: TrySet(SudokuSpice.Coordinate@,System.Int32)
  parent: SudokuSpice.RuleBased.DynamicRuleKeeper
  langs:
  - csharp
  - vb
  name: TrySet(Coordinate, Int32)
  nameWithType: DynamicRuleKeeper.TrySet(Coordinate, Int32)
  fullName: SudokuSpice.RuleBased.DynamicRuleKeeper.TrySet(SudokuSpice.Coordinate, System.Int32)
  type: Method
  source:
    remote:
      path: SudokuSpice/RuleBased/framework/DynamicRuleKeeper.cs
      branch: master
      repo: https://github.com/MorganR/SudokuSpice
    id: TrySet
    path: ../SudokuSpice/RuleBased/framework/DynamicRuleKeeper.cs
    startLine: 56
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.RuleBased
  example: []
  syntax:
    content: public bool TrySet(in Coordinate c, int value)
    parameters:
    - id: c
      type: SudokuSpice.Coordinate
    - id: value
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function TrySet(ByRef c As Coordinate, value As Integer) As Boolean
  overload: SudokuSpice.RuleBased.DynamicRuleKeeper.TrySet*
  implements:
  - SudokuSpice.RuleBased.ISudokuRuleKeeper.TrySet(SudokuSpice.Coordinate@,System.Int32)
  nameWithType.vb: DynamicRuleKeeper.TrySet(ByRef Coordinate, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SudokuSpice.RuleBased.DynamicRuleKeeper.TrySet(ByRef SudokuSpice.Coordinate, System.Int32)
  name.vb: TrySet(ByRef Coordinate, Int32)
- uid: SudokuSpice.RuleBased.DynamicRuleKeeper.Unset(SudokuSpice.Coordinate@,System.Int32)
  commentId: M:SudokuSpice.RuleBased.DynamicRuleKeeper.Unset(SudokuSpice.Coordinate@,System.Int32)
  id: Unset(SudokuSpice.Coordinate@,System.Int32)
  parent: SudokuSpice.RuleBased.DynamicRuleKeeper
  langs:
  - csharp
  - vb
  name: Unset(Coordinate, Int32)
  nameWithType: DynamicRuleKeeper.Unset(Coordinate, Int32)
  fullName: SudokuSpice.RuleBased.DynamicRuleKeeper.Unset(SudokuSpice.Coordinate, System.Int32)
  type: Method
  source:
    remote:
      path: SudokuSpice/RuleBased/framework/DynamicRuleKeeper.cs
      branch: master
      repo: https://github.com/MorganR/SudokuSpice
    id: Unset
    path: ../SudokuSpice/RuleBased/framework/DynamicRuleKeeper.cs
    startLine: 97
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.RuleBased
  example: []
  syntax:
    content: public void Unset(in Coordinate c, int value)
    parameters:
    - id: c
      type: SudokuSpice.Coordinate
    - id: value
      type: System.Int32
    content.vb: Public Sub Unset(ByRef c As Coordinate, value As Integer)
  overload: SudokuSpice.RuleBased.DynamicRuleKeeper.Unset*
  implements:
  - SudokuSpice.RuleBased.ISudokuRuleKeeper.Unset(SudokuSpice.Coordinate@,System.Int32)
  nameWithType.vb: DynamicRuleKeeper.Unset(ByRef Coordinate, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SudokuSpice.RuleBased.DynamicRuleKeeper.Unset(ByRef SudokuSpice.Coordinate, System.Int32)
  name.vb: Unset(ByRef Coordinate, Int32)
references:
- uid: SudokuSpice.RuleBased
  commentId: N:SudokuSpice.RuleBased
  name: SudokuSpice.RuleBased
  nameWithType: SudokuSpice.RuleBased
  fullName: SudokuSpice.RuleBased
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SudokuSpice.RuleBased.ISudokuRuleKeeper
  commentId: T:SudokuSpice.RuleBased.ISudokuRuleKeeper
  parent: SudokuSpice.RuleBased
  name: ISudokuRuleKeeper
  nameWithType: ISudokuRuleKeeper
  fullName: SudokuSpice.RuleBased.ISudokuRuleKeeper
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SudokuSpice.RuleBased.DynamicRuleKeeper.#ctor*
  commentId: Overload:SudokuSpice.RuleBased.DynamicRuleKeeper.#ctor
  name: DynamicRuleKeeper
  nameWithType: DynamicRuleKeeper.DynamicRuleKeeper
  fullName: SudokuSpice.RuleBased.DynamicRuleKeeper.DynamicRuleKeeper
- uid: SudokuSpice.IReadOnlyPuzzle
  commentId: T:SudokuSpice.IReadOnlyPuzzle
  parent: SudokuSpice
  name: IReadOnlyPuzzle
  nameWithType: IReadOnlyPuzzle
  fullName: SudokuSpice.IReadOnlyPuzzle
- uid: SudokuSpice.RuleBased.PossibleValues
  commentId: T:SudokuSpice.RuleBased.PossibleValues
  parent: SudokuSpice.RuleBased
  name: PossibleValues
  nameWithType: PossibleValues
  fullName: SudokuSpice.RuleBased.PossibleValues
- uid: System.Collections.Generic.IReadOnlyList{SudokuSpice.RuleBased.Rules.ISudokuRule}
  commentId: T:System.Collections.Generic.IReadOnlyList{SudokuSpice.RuleBased.Rules.ISudokuRule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<ISudokuRule>
  nameWithType: IReadOnlyList<ISudokuRule>
  fullName: System.Collections.Generic.IReadOnlyList<SudokuSpice.RuleBased.Rules.ISudokuRule>
  nameWithType.vb: IReadOnlyList(Of ISudokuRule)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of SudokuSpice.RuleBased.Rules.ISudokuRule)
  name.vb: IReadOnlyList(Of ISudokuRule)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SudokuSpice.RuleBased.Rules.ISudokuRule
    name: ISudokuRule
    nameWithType: ISudokuRule
    fullName: SudokuSpice.RuleBased.Rules.ISudokuRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SudokuSpice.RuleBased.Rules.ISudokuRule
    name: ISudokuRule
    nameWithType: ISudokuRule
    fullName: SudokuSpice.RuleBased.Rules.ISudokuRule
  - name: )
    nameWithType: )
    fullName: )
- uid: SudokuSpice
  commentId: N:SudokuSpice
  name: SudokuSpice
  nameWithType: SudokuSpice
  fullName: SudokuSpice
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SudokuSpice.RuleBased.DynamicRuleKeeper.CopyWithNewReferences*
  commentId: Overload:SudokuSpice.RuleBased.DynamicRuleKeeper.CopyWithNewReferences
  name: CopyWithNewReferences
  nameWithType: DynamicRuleKeeper.CopyWithNewReferences
  fullName: SudokuSpice.RuleBased.DynamicRuleKeeper.CopyWithNewReferences
- uid: SudokuSpice.RuleBased.ISudokuRuleKeeper.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.RuleBased.PossibleValues)
  commentId: M:SudokuSpice.RuleBased.ISudokuRuleKeeper.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.RuleBased.PossibleValues)
  parent: SudokuSpice.RuleBased.ISudokuRuleKeeper
  name: CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues)
  nameWithType: ISudokuRuleKeeper.CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues)
  fullName: SudokuSpice.RuleBased.ISudokuRuleKeeper.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.RuleBased.PossibleValues)
  spec.csharp:
  - uid: SudokuSpice.RuleBased.ISudokuRuleKeeper.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.RuleBased.PossibleValues)
    name: CopyWithNewReferences
    nameWithType: ISudokuRuleKeeper.CopyWithNewReferences
    fullName: SudokuSpice.RuleBased.ISudokuRuleKeeper.CopyWithNewReferences
  - name: (
    nameWithType: (
    fullName: (
  - uid: SudokuSpice.IReadOnlyPuzzle
    name: IReadOnlyPuzzle
    nameWithType: IReadOnlyPuzzle
    fullName: SudokuSpice.IReadOnlyPuzzle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SudokuSpice.RuleBased.PossibleValues
    name: PossibleValues
    nameWithType: PossibleValues
    fullName: SudokuSpice.RuleBased.PossibleValues
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SudokuSpice.RuleBased.ISudokuRuleKeeper.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.RuleBased.PossibleValues)
    name: CopyWithNewReferences
    nameWithType: ISudokuRuleKeeper.CopyWithNewReferences
    fullName: SudokuSpice.RuleBased.ISudokuRuleKeeper.CopyWithNewReferences
  - name: (
    nameWithType: (
    fullName: (
  - uid: SudokuSpice.IReadOnlyPuzzle
    name: IReadOnlyPuzzle
    nameWithType: IReadOnlyPuzzle
    fullName: SudokuSpice.IReadOnlyPuzzle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SudokuSpice.RuleBased.PossibleValues
    name: PossibleValues
    nameWithType: PossibleValues
    fullName: SudokuSpice.RuleBased.PossibleValues
  - name: )
    nameWithType: )
    fullName: )
- uid: SudokuSpice.RuleBased.DynamicRuleKeeper.GetRules*
  commentId: Overload:SudokuSpice.RuleBased.DynamicRuleKeeper.GetRules
  name: GetRules
  nameWithType: DynamicRuleKeeper.GetRules
  fullName: SudokuSpice.RuleBased.DynamicRuleKeeper.GetRules
- uid: SudokuSpice.RuleBased.ISudokuRuleKeeper.GetRules
  commentId: M:SudokuSpice.RuleBased.ISudokuRuleKeeper.GetRules
  parent: SudokuSpice.RuleBased.ISudokuRuleKeeper
  name: GetRules()
  nameWithType: ISudokuRuleKeeper.GetRules()
  fullName: SudokuSpice.RuleBased.ISudokuRuleKeeper.GetRules()
  spec.csharp:
  - uid: SudokuSpice.RuleBased.ISudokuRuleKeeper.GetRules
    name: GetRules
    nameWithType: ISudokuRuleKeeper.GetRules
    fullName: SudokuSpice.RuleBased.ISudokuRuleKeeper.GetRules
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SudokuSpice.RuleBased.ISudokuRuleKeeper.GetRules
    name: GetRules
    nameWithType: ISudokuRuleKeeper.GetRules
    fullName: SudokuSpice.RuleBased.ISudokuRuleKeeper.GetRules
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SudokuSpice.RuleBased.DynamicRuleKeeper.TrySet*
  commentId: Overload:SudokuSpice.RuleBased.DynamicRuleKeeper.TrySet
  name: TrySet
  nameWithType: DynamicRuleKeeper.TrySet
  fullName: SudokuSpice.RuleBased.DynamicRuleKeeper.TrySet
- uid: SudokuSpice.RuleBased.ISudokuRuleKeeper.TrySet(SudokuSpice.Coordinate@,System.Int32)
  commentId: M:SudokuSpice.RuleBased.ISudokuRuleKeeper.TrySet(SudokuSpice.Coordinate@,System.Int32)
  parent: SudokuSpice.RuleBased.ISudokuRuleKeeper
  isExternal: true
  name: TrySet(Coordinate, Int32)
  nameWithType: ISudokuRuleKeeper.TrySet(Coordinate, Int32)
  fullName: SudokuSpice.RuleBased.ISudokuRuleKeeper.TrySet(SudokuSpice.Coordinate, System.Int32)
  spec.csharp:
  - uid: SudokuSpice.RuleBased.ISudokuRuleKeeper.TrySet(SudokuSpice.Coordinate@,System.Int32)
    name: TrySet
    nameWithType: ISudokuRuleKeeper.TrySet
    fullName: SudokuSpice.RuleBased.ISudokuRuleKeeper.TrySet
  - name: (
    nameWithType: (
    fullName: (
  - uid: SudokuSpice.Coordinate
    name: Coordinate
    nameWithType: Coordinate
    fullName: SudokuSpice.Coordinate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SudokuSpice.RuleBased.ISudokuRuleKeeper.TrySet(SudokuSpice.Coordinate@,System.Int32)
    name: TrySet
    nameWithType: ISudokuRuleKeeper.TrySet
    fullName: SudokuSpice.RuleBased.ISudokuRuleKeeper.TrySet
  - name: (
    nameWithType: (
    fullName: (
  - uid: SudokuSpice.Coordinate
    name: Coordinate
    nameWithType: Coordinate
    fullName: SudokuSpice.Coordinate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SudokuSpice.Coordinate
  commentId: T:SudokuSpice.Coordinate
  parent: SudokuSpice
  name: Coordinate
  nameWithType: Coordinate
  fullName: SudokuSpice.Coordinate
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SudokuSpice.RuleBased.DynamicRuleKeeper.Unset*
  commentId: Overload:SudokuSpice.RuleBased.DynamicRuleKeeper.Unset
  name: Unset
  nameWithType: DynamicRuleKeeper.Unset
  fullName: SudokuSpice.RuleBased.DynamicRuleKeeper.Unset
- uid: SudokuSpice.RuleBased.ISudokuRuleKeeper.Unset(SudokuSpice.Coordinate@,System.Int32)
  commentId: M:SudokuSpice.RuleBased.ISudokuRuleKeeper.Unset(SudokuSpice.Coordinate@,System.Int32)
  parent: SudokuSpice.RuleBased.ISudokuRuleKeeper
  isExternal: true
  name: Unset(Coordinate, Int32)
  nameWithType: ISudokuRuleKeeper.Unset(Coordinate, Int32)
  fullName: SudokuSpice.RuleBased.ISudokuRuleKeeper.Unset(SudokuSpice.Coordinate, System.Int32)
  spec.csharp:
  - uid: SudokuSpice.RuleBased.ISudokuRuleKeeper.Unset(SudokuSpice.Coordinate@,System.Int32)
    name: Unset
    nameWithType: ISudokuRuleKeeper.Unset
    fullName: SudokuSpice.RuleBased.ISudokuRuleKeeper.Unset
  - name: (
    nameWithType: (
    fullName: (
  - uid: SudokuSpice.Coordinate
    name: Coordinate
    nameWithType: Coordinate
    fullName: SudokuSpice.Coordinate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SudokuSpice.RuleBased.ISudokuRuleKeeper.Unset(SudokuSpice.Coordinate@,System.Int32)
    name: Unset
    nameWithType: ISudokuRuleKeeper.Unset
    fullName: SudokuSpice.RuleBased.ISudokuRuleKeeper.Unset
  - name: (
    nameWithType: (
    fullName: (
  - uid: SudokuSpice.Coordinate
    name: Coordinate
    nameWithType: Coordinate
    fullName: SudokuSpice.Coordinate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
