### YamlMime:ManagedReference
items:
- uid: SudokuSpice
  commentId: N:SudokuSpice
  id: SudokuSpice
  children:
  - SudokuSpice.ConstraintBasedGenerator`1
  - SudokuSpice.ConstraintBasedSolver`1
  - SudokuSpice.IPuzzle
  - SudokuSpice.IReadOnlyBoxPuzzle
  - SudokuSpice.IReadOnlyPuzzle
  - SudokuSpice.Puzzle
  - SudokuSpice.PuzzleGenerator`1
  - SudokuSpice.Solver
  - SudokuSpice.StandardPuzzleGenerator
  langs:
  - csharp
  - vb
  name: SudokuSpice
  nameWithType: SudokuSpice
  fullName: SudokuSpice
  type: Namespace
  assemblies:
  - SudokuSpice
references:
- uid: SudokuSpice.ConstraintBasedGenerator`1
  commentId: T:SudokuSpice.ConstraintBasedGenerator`1
  name: ConstraintBasedGenerator<TPuzzle>
  nameWithType: ConstraintBasedGenerator<TPuzzle>
  fullName: SudokuSpice.ConstraintBasedGenerator<TPuzzle>
  nameWithType.vb: ConstraintBasedGenerator(Of TPuzzle)
  fullName.vb: SudokuSpice.ConstraintBasedGenerator(Of TPuzzle)
  name.vb: ConstraintBasedGenerator(Of TPuzzle)
  spec.csharp:
  - uid: SudokuSpice.ConstraintBasedGenerator`1
    name: ConstraintBasedGenerator
    nameWithType: ConstraintBasedGenerator
    fullName: SudokuSpice.ConstraintBasedGenerator
  - name: <
    nameWithType: <
    fullName: <
  - name: TPuzzle
    nameWithType: TPuzzle
    fullName: TPuzzle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SudokuSpice.ConstraintBasedGenerator`1
    name: ConstraintBasedGenerator
    nameWithType: ConstraintBasedGenerator
    fullName: SudokuSpice.ConstraintBasedGenerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TPuzzle
    nameWithType: TPuzzle
    fullName: TPuzzle
  - name: )
    nameWithType: )
    fullName: )
- uid: SudokuSpice.ConstraintBasedSolver`1
  commentId: T:SudokuSpice.ConstraintBasedSolver`1
  name: ConstraintBasedSolver<TPuzzle>
  nameWithType: ConstraintBasedSolver<TPuzzle>
  fullName: SudokuSpice.ConstraintBasedSolver<TPuzzle>
  nameWithType.vb: ConstraintBasedSolver(Of TPuzzle)
  fullName.vb: SudokuSpice.ConstraintBasedSolver(Of TPuzzle)
  name.vb: ConstraintBasedSolver(Of TPuzzle)
  spec.csharp:
  - uid: SudokuSpice.ConstraintBasedSolver`1
    name: ConstraintBasedSolver
    nameWithType: ConstraintBasedSolver
    fullName: SudokuSpice.ConstraintBasedSolver
  - name: <
    nameWithType: <
    fullName: <
  - name: TPuzzle
    nameWithType: TPuzzle
    fullName: TPuzzle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SudokuSpice.ConstraintBasedSolver`1
    name: ConstraintBasedSolver
    nameWithType: ConstraintBasedSolver
    fullName: SudokuSpice.ConstraintBasedSolver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TPuzzle
    nameWithType: TPuzzle
    fullName: TPuzzle
  - name: )
    nameWithType: )
    fullName: )
- uid: SudokuSpice.IPuzzle
  commentId: T:SudokuSpice.IPuzzle
  parent: SudokuSpice
  name: IPuzzle
  nameWithType: IPuzzle
  fullName: SudokuSpice.IPuzzle
- uid: SudokuSpice.IReadOnlyBoxPuzzle
  commentId: T:SudokuSpice.IReadOnlyBoxPuzzle
  parent: SudokuSpice
  name: IReadOnlyBoxPuzzle
  nameWithType: IReadOnlyBoxPuzzle
  fullName: SudokuSpice.IReadOnlyBoxPuzzle
- uid: SudokuSpice.IReadOnlyPuzzle
  commentId: T:SudokuSpice.IReadOnlyPuzzle
  parent: SudokuSpice
  name: IReadOnlyPuzzle
  nameWithType: IReadOnlyPuzzle
  fullName: SudokuSpice.IReadOnlyPuzzle
- uid: SudokuSpice.Puzzle
  commentId: T:SudokuSpice.Puzzle
  parent: SudokuSpice
  name: Puzzle
  nameWithType: Puzzle
  fullName: SudokuSpice.Puzzle
- uid: SudokuSpice.PuzzleGenerator`1
  commentId: T:SudokuSpice.PuzzleGenerator`1
  name: PuzzleGenerator<TPuzzle>
  nameWithType: PuzzleGenerator<TPuzzle>
  fullName: SudokuSpice.PuzzleGenerator<TPuzzle>
  nameWithType.vb: PuzzleGenerator(Of TPuzzle)
  fullName.vb: SudokuSpice.PuzzleGenerator(Of TPuzzle)
  name.vb: PuzzleGenerator(Of TPuzzle)
  spec.csharp:
  - uid: SudokuSpice.PuzzleGenerator`1
    name: PuzzleGenerator
    nameWithType: PuzzleGenerator
    fullName: SudokuSpice.PuzzleGenerator
  - name: <
    nameWithType: <
    fullName: <
  - name: TPuzzle
    nameWithType: TPuzzle
    fullName: TPuzzle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SudokuSpice.PuzzleGenerator`1
    name: PuzzleGenerator
    nameWithType: PuzzleGenerator
    fullName: SudokuSpice.PuzzleGenerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TPuzzle
    nameWithType: TPuzzle
    fullName: TPuzzle
  - name: )
    nameWithType: )
    fullName: )
- uid: SudokuSpice.Solver
  commentId: T:SudokuSpice.Solver
  name: Solver
  nameWithType: Solver
  fullName: SudokuSpice.Solver
- uid: SudokuSpice.StandardPuzzleGenerator
  commentId: T:SudokuSpice.StandardPuzzleGenerator
  name: StandardPuzzleGenerator
  nameWithType: StandardPuzzleGenerator
  fullName: SudokuSpice.StandardPuzzleGenerator
- uid: SudokuSpice
  commentId: N:SudokuSpice
  name: SudokuSpice
  nameWithType: SudokuSpice
  fullName: SudokuSpice
