### YamlMime:ManagedReference
items:
- uid: SudokuSpice.RuleBased.StandardPuzzleGenerator
  commentId: T:SudokuSpice.RuleBased.StandardPuzzleGenerator
  id: StandardPuzzleGenerator
  parent: SudokuSpice.RuleBased
  children:
  - SudokuSpice.RuleBased.StandardPuzzleGenerator.#ctor
  - SudokuSpice.RuleBased.StandardPuzzleGenerator.Generate(System.Int32,System.Int32,TimeSpan)
  langs:
  - csharp
  - vb
  name: StandardPuzzleGenerator
  nameWithType: StandardPuzzleGenerator
  fullName: SudokuSpice.RuleBased.StandardPuzzleGenerator
  type: Class
  source:
    remote:
      path: SudokuSpice/RuleBased/StandardPuzzleGenerator.cs
      branch: internal-puzzle
      repo: https://github.com/MorganR/SudokuSpice.git
    id: StandardPuzzleGenerator
    path: ../SudokuSpice/RuleBased/StandardPuzzleGenerator.cs
    startLine: 7
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.RuleBased
  summary: "\nGenerates standard Sudoku puzzles.\n"
  example: []
  syntax:
    content: 'public class StandardPuzzleGenerator : PuzzleGenerator<Puzzle>'
    content.vb: >-
      Public Class StandardPuzzleGenerator
          Inherits PuzzleGenerator(Of Puzzle)
  inheritance:
  - System.Object
  - SudokuSpice.RuleBased.PuzzleGenerator{SudokuSpice.RuleBased.Puzzle}
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SudokuSpice.RuleBased.StandardPuzzleGenerator.#ctor
  commentId: M:SudokuSpice.RuleBased.StandardPuzzleGenerator.#ctor
  id: '#ctor'
  parent: SudokuSpice.RuleBased.StandardPuzzleGenerator
  langs:
  - csharp
  - vb
  name: StandardPuzzleGenerator()
  nameWithType: StandardPuzzleGenerator.StandardPuzzleGenerator()
  fullName: SudokuSpice.RuleBased.StandardPuzzleGenerator.StandardPuzzleGenerator()
  type: Constructor
  source:
    remote:
      path: SudokuSpice/RuleBased/StandardPuzzleGenerator.cs
      branch: internal-puzzle
      repo: https://github.com/MorganR/SudokuSpice.git
    id: .ctor
    path: ../SudokuSpice/RuleBased/StandardPuzzleGenerator.cs
    startLine: 10
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.RuleBased
  example: []
  syntax:
    content: public StandardPuzzleGenerator()
    content.vb: Public Sub New
  overload: SudokuSpice.RuleBased.StandardPuzzleGenerator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SudokuSpice.RuleBased.StandardPuzzleGenerator.Generate(System.Int32,System.Int32,TimeSpan)
  commentId: M:SudokuSpice.RuleBased.StandardPuzzleGenerator.Generate(System.Int32,System.Int32,TimeSpan)
  id: Generate(System.Int32,System.Int32,TimeSpan)
  parent: SudokuSpice.RuleBased.StandardPuzzleGenerator
  langs:
  - csharp
  - vb
  name: Generate(Int32, Int32, TimeSpan)
  nameWithType: StandardPuzzleGenerator.Generate(Int32, Int32, TimeSpan)
  fullName: SudokuSpice.RuleBased.StandardPuzzleGenerator.Generate(System.Int32, System.Int32, TimeSpan)
  type: Method
  source:
    remote:
      path: SudokuSpice/RuleBased/StandardPuzzleGenerator.cs
      branch: internal-puzzle
      repo: https://github.com/MorganR/SudokuSpice.git
    id: Generate
    path: ../SudokuSpice/RuleBased/StandardPuzzleGenerator.cs
    startLine: 51
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.RuleBased
  summary: "\nGenerates a puzzle that has a unique solution with the given number of squares set.\n\nBe careful calling this with low values, as it can take a very long time to generate\nunique puzzles as the value of <code data-dev-comment-type=\"paramref\" class=\"paramref\">numSquaresToSet</code> approaches the\nminimum number of clues necessary to provide a unique puzzle of the given\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">puzzleSize</code>.\n"
  example: []
  syntax:
    content: public Puzzle Generate(int puzzleSize, int numSquaresToSet, TimeSpan timeout)
    parameters:
    - id: puzzleSize
      type: System.Int32
      description: "\nThe size (i.e. side-length) of the puzzle to generate.\n"
    - id: numSquaresToSet
      type: System.Int32
      description: "\nThe number of squares that will be preset in the generated puzzle.\n\nValid ranges are 0-1 for puzzles of size 1, 4-16 for puzzles of size 4, 17-81 for\npuzzles of size 9, 55-256 for puzzles of size 16, and 185 - 625 for puzzles of size 25.\nNote that the lower bounds for puzzles sized 16 or 25 are estimates from\nthis forum: http://forum.enjoysudoku.com/minimum-givens-on-larger-puzzles-t4801.html\n"
    - id: timeout
      type: TimeSpan
      description: "\nThe maximum timeout during which this function can search for a unique puzzle.\nEspecially useful when trying to generate puzzles with low\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">numSquaresToSet</code>.\n"
    return:
      type: SudokuSpice.RuleBased.Puzzle
      description: "\nA standard Sudoku puzzle with a unique solution and <code>numSquaresToSet</code> preset\nsquares.\n"
    content.vb: Public Function Generate(puzzleSize As Integer, numSquaresToSet As Integer, timeout As TimeSpan) As Puzzle
  overload: SudokuSpice.RuleBased.StandardPuzzleGenerator.Generate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SudokuSpice.RuleBased
  commentId: N:SudokuSpice.RuleBased
  name: SudokuSpice.RuleBased
  nameWithType: SudokuSpice.RuleBased
  fullName: SudokuSpice.RuleBased
- uid: SudokuSpice.RuleBased.PuzzleGenerator{SudokuSpice.RuleBased.Puzzle}
  commentId: T:SudokuSpice.RuleBased.PuzzleGenerator{SudokuSpice.RuleBased.Puzzle}
  parent: SudokuSpice.RuleBased
  definition: SudokuSpice.RuleBased.PuzzleGenerator`1
  name: PuzzleGenerator<Puzzle>
  nameWithType: PuzzleGenerator<Puzzle>
  fullName: SudokuSpice.RuleBased.PuzzleGenerator<SudokuSpice.RuleBased.Puzzle>
  nameWithType.vb: PuzzleGenerator(Of Puzzle)
  fullName.vb: SudokuSpice.RuleBased.PuzzleGenerator(Of SudokuSpice.RuleBased.Puzzle)
  name.vb: PuzzleGenerator(Of Puzzle)
  spec.csharp:
  - uid: SudokuSpice.RuleBased.PuzzleGenerator`1
    name: PuzzleGenerator
    nameWithType: PuzzleGenerator
    fullName: SudokuSpice.RuleBased.PuzzleGenerator
  - name: <
    nameWithType: <
    fullName: <
  - uid: SudokuSpice.RuleBased.Puzzle
    name: Puzzle
    nameWithType: Puzzle
    fullName: SudokuSpice.RuleBased.Puzzle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SudokuSpice.RuleBased.PuzzleGenerator`1
    name: PuzzleGenerator
    nameWithType: PuzzleGenerator
    fullName: SudokuSpice.RuleBased.PuzzleGenerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SudokuSpice.RuleBased.Puzzle
    name: Puzzle
    nameWithType: Puzzle
    fullName: SudokuSpice.RuleBased.Puzzle
  - name: )
    nameWithType: )
    fullName: )
- uid: SudokuSpice.RuleBased.PuzzleGenerator`1
  commentId: T:SudokuSpice.RuleBased.PuzzleGenerator`1
  name: PuzzleGenerator<TPuzzle>
  nameWithType: PuzzleGenerator<TPuzzle>
  fullName: SudokuSpice.RuleBased.PuzzleGenerator<TPuzzle>
  nameWithType.vb: PuzzleGenerator(Of TPuzzle)
  fullName.vb: SudokuSpice.RuleBased.PuzzleGenerator(Of TPuzzle)
  name.vb: PuzzleGenerator(Of TPuzzle)
  spec.csharp:
  - uid: SudokuSpice.RuleBased.PuzzleGenerator`1
    name: PuzzleGenerator
    nameWithType: PuzzleGenerator
    fullName: SudokuSpice.RuleBased.PuzzleGenerator
  - name: <
    nameWithType: <
    fullName: <
  - name: TPuzzle
    nameWithType: TPuzzle
    fullName: TPuzzle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SudokuSpice.RuleBased.PuzzleGenerator`1
    name: PuzzleGenerator
    nameWithType: PuzzleGenerator
    fullName: SudokuSpice.RuleBased.PuzzleGenerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TPuzzle
    nameWithType: TPuzzle
    fullName: TPuzzle
  - name: )
    nameWithType: )
    fullName: )
- uid: SudokuSpice.RuleBased.StandardPuzzleGenerator.#ctor*
  commentId: Overload:SudokuSpice.RuleBased.StandardPuzzleGenerator.#ctor
  name: StandardPuzzleGenerator
  nameWithType: StandardPuzzleGenerator.StandardPuzzleGenerator
  fullName: SudokuSpice.RuleBased.StandardPuzzleGenerator.StandardPuzzleGenerator
- uid: SudokuSpice.RuleBased.StandardPuzzleGenerator.Generate*
  commentId: Overload:SudokuSpice.RuleBased.StandardPuzzleGenerator.Generate
  name: Generate
  nameWithType: StandardPuzzleGenerator.Generate
  fullName: SudokuSpice.RuleBased.StandardPuzzleGenerator.Generate
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TimeSpan
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: TimeSpan
- uid: SudokuSpice.RuleBased.Puzzle
  commentId: T:SudokuSpice.RuleBased.Puzzle
  parent: SudokuSpice.RuleBased
  name: Puzzle
  nameWithType: Puzzle
  fullName: SudokuSpice.RuleBased.Puzzle
