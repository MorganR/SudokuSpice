### YamlMime:ManagedReference
items:
- uid: SudokuSpice.ConstraintBased.Constraints.BoxUniquenessConstraint
  commentId: T:SudokuSpice.ConstraintBased.Constraints.BoxUniquenessConstraint
  id: BoxUniquenessConstraint
  parent: SudokuSpice.ConstraintBased.Constraints
  children:
  - SudokuSpice.ConstraintBased.Constraints.BoxUniquenessConstraint.TryConstrain(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.ConstraintBased.ExactCoverGraph)
  langs:
  - csharp
  - vb
  name: BoxUniquenessConstraint
  nameWithType: BoxUniquenessConstraint
  fullName: SudokuSpice.ConstraintBased.Constraints.BoxUniquenessConstraint
  type: Class
  source:
    remote:
      path: SudokuSpice/ConstraintBased/Constraints/BoxUniquenessConstraint.cs
      branch: flexible-constraints
      repo: https://github.com/MorganR/SudokuSpice.git
    id: BoxUniquenessConstraint
    path: ../SudokuSpice/ConstraintBased/Constraints/BoxUniquenessConstraint.cs
    startLine: 7
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.ConstraintBased.Constraints
  summary: "\nEnforces the constraint that all values in a box must be unique.\n"
  example: []
  syntax:
    content: 'public class BoxUniquenessConstraint : IConstraint'
    content.vb: >-
      Public Class BoxUniquenessConstraint
          Implements IConstraint
  inheritance:
  - System.Object
  implements:
  - SudokuSpice.ConstraintBased.Constraints.IConstraint
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SudokuSpice.ConstraintBased.Constraints.BoxUniquenessConstraint.TryConstrain(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.ConstraintBased.ExactCoverGraph)
  commentId: M:SudokuSpice.ConstraintBased.Constraints.BoxUniquenessConstraint.TryConstrain(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.ConstraintBased.ExactCoverGraph)
  id: TryConstrain(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.ConstraintBased.ExactCoverGraph)
  parent: SudokuSpice.ConstraintBased.Constraints.BoxUniquenessConstraint
  langs:
  - csharp
  - vb
  name: TryConstrain(IReadOnlyPuzzle, ExactCoverGraph)
  nameWithType: BoxUniquenessConstraint.TryConstrain(IReadOnlyPuzzle, ExactCoverGraph)
  fullName: SudokuSpice.ConstraintBased.Constraints.BoxUniquenessConstraint.TryConstrain(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.ConstraintBased.ExactCoverGraph)
  type: Method
  source:
    remote:
      path: SudokuSpice/ConstraintBased/Constraints/BoxUniquenessConstraint.cs
      branch: flexible-constraints
      repo: https://github.com/MorganR/SudokuSpice.git
    id: TryConstrain
    path: ../SudokuSpice/ConstraintBased/Constraints/BoxUniquenessConstraint.cs
    startLine: 10
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.ConstraintBased.Constraints
  summary: "\nAdds necessary <xref href=\"SudokuSpice.ConstraintBased.IObjective\" data-throw-if-not-resolved=\"false\"></xref>s and links to the given\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">graph</code> in order to solve the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">puzzle</code>\naccording to this constraint. The details here are implementation-specific.\n"
  remarks: "\nThis should skip adding objectives that are already satisfied by the given\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">puzzle</code>. Instead, it should drop the relevant\n<xref href=\"SudokuSpice.ConstraintBased.Possibility\" data-throw-if-not-resolved=\"false\"></xref>s that are no longer possible.\n\nNote: See <xref href=\"SudokuSpice.ConstraintBased.ExactCoverGraph\" data-throw-if-not-resolved=\"false\"></xref> to understand how the graph works.\n"
  example: []
  syntax:
    content: public bool TryConstrain(IReadOnlyPuzzle puzzle, ExactCoverGraph matrix)
    parameters:
    - id: puzzle
      type: SudokuSpice.IReadOnlyPuzzle
      description: The puzzle to solve.
    - id: matrix
      type: SudokuSpice.ConstraintBased.ExactCoverGraph
    return:
      type: System.Boolean
      description: "\nFalse if the constraint could not be satisfied by the given puzzle, else true.\n"
    content.vb: Public Function TryConstrain(puzzle As IReadOnlyPuzzle, matrix As ExactCoverGraph) As Boolean
  overload: SudokuSpice.ConstraintBased.Constraints.BoxUniquenessConstraint.TryConstrain*
  implements:
  - SudokuSpice.ConstraintBased.Constraints.IConstraint.TryConstrain(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.ConstraintBased.ExactCoverGraph)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SudokuSpice.ConstraintBased.Constraints
  commentId: N:SudokuSpice.ConstraintBased.Constraints
  name: SudokuSpice.ConstraintBased.Constraints
  nameWithType: SudokuSpice.ConstraintBased.Constraints
  fullName: SudokuSpice.ConstraintBased.Constraints
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SudokuSpice.ConstraintBased.Constraints.IConstraint
  commentId: T:SudokuSpice.ConstraintBased.Constraints.IConstraint
  parent: SudokuSpice.ConstraintBased.Constraints
  name: IConstraint
  nameWithType: IConstraint
  fullName: SudokuSpice.ConstraintBased.Constraints.IConstraint
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SudokuSpice.ConstraintBased.Constraints.BoxUniquenessConstraint.TryConstrain*
  commentId: Overload:SudokuSpice.ConstraintBased.Constraints.BoxUniquenessConstraint.TryConstrain
  name: TryConstrain
  nameWithType: BoxUniquenessConstraint.TryConstrain
  fullName: SudokuSpice.ConstraintBased.Constraints.BoxUniquenessConstraint.TryConstrain
- uid: SudokuSpice.ConstraintBased.Constraints.IConstraint.TryConstrain(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.ConstraintBased.ExactCoverGraph)
  commentId: M:SudokuSpice.ConstraintBased.Constraints.IConstraint.TryConstrain(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.ConstraintBased.ExactCoverGraph)
  parent: SudokuSpice.ConstraintBased.Constraints.IConstraint
  name: TryConstrain(IReadOnlyPuzzle, ExactCoverGraph)
  nameWithType: IConstraint.TryConstrain(IReadOnlyPuzzle, ExactCoverGraph)
  fullName: SudokuSpice.ConstraintBased.Constraints.IConstraint.TryConstrain(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.ConstraintBased.ExactCoverGraph)
  spec.csharp:
  - uid: SudokuSpice.ConstraintBased.Constraints.IConstraint.TryConstrain(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.ConstraintBased.ExactCoverGraph)
    name: TryConstrain
    nameWithType: IConstraint.TryConstrain
    fullName: SudokuSpice.ConstraintBased.Constraints.IConstraint.TryConstrain
  - name: (
    nameWithType: (
    fullName: (
  - uid: SudokuSpice.IReadOnlyPuzzle
    name: IReadOnlyPuzzle
    nameWithType: IReadOnlyPuzzle
    fullName: SudokuSpice.IReadOnlyPuzzle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SudokuSpice.ConstraintBased.ExactCoverGraph
    name: ExactCoverGraph
    nameWithType: ExactCoverGraph
    fullName: SudokuSpice.ConstraintBased.ExactCoverGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SudokuSpice.ConstraintBased.Constraints.IConstraint.TryConstrain(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.ConstraintBased.ExactCoverGraph)
    name: TryConstrain
    nameWithType: IConstraint.TryConstrain
    fullName: SudokuSpice.ConstraintBased.Constraints.IConstraint.TryConstrain
  - name: (
    nameWithType: (
    fullName: (
  - uid: SudokuSpice.IReadOnlyPuzzle
    name: IReadOnlyPuzzle
    nameWithType: IReadOnlyPuzzle
    fullName: SudokuSpice.IReadOnlyPuzzle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SudokuSpice.ConstraintBased.ExactCoverGraph
    name: ExactCoverGraph
    nameWithType: ExactCoverGraph
    fullName: SudokuSpice.ConstraintBased.ExactCoverGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: SudokuSpice.IReadOnlyPuzzle
  commentId: T:SudokuSpice.IReadOnlyPuzzle
  parent: SudokuSpice
  name: IReadOnlyPuzzle
  nameWithType: IReadOnlyPuzzle
  fullName: SudokuSpice.IReadOnlyPuzzle
- uid: SudokuSpice.ConstraintBased.ExactCoverGraph
  commentId: T:SudokuSpice.ConstraintBased.ExactCoverGraph
  parent: SudokuSpice.ConstraintBased
  name: ExactCoverGraph
  nameWithType: ExactCoverGraph
  fullName: SudokuSpice.ConstraintBased.ExactCoverGraph
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SudokuSpice
  commentId: N:SudokuSpice
  name: SudokuSpice
  nameWithType: SudokuSpice
  fullName: SudokuSpice
- uid: SudokuSpice.ConstraintBased
  commentId: N:SudokuSpice.ConstraintBased
  name: SudokuSpice.ConstraintBased
  nameWithType: SudokuSpice.ConstraintBased
  fullName: SudokuSpice.ConstraintBased
