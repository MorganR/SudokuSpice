### YamlMime:ManagedReference
items:
- uid: SudokuSpice.Constraints.DiagonalUniquenessConstraint`1
  commentId: T:SudokuSpice.Constraints.DiagonalUniquenessConstraint`1
  id: DiagonalUniquenessConstraint`1
  parent: SudokuSpice.Constraints
  children:
  - SudokuSpice.Constraints.DiagonalUniquenessConstraint`1.Constrain(`0,SudokuSpice.Data.ExactCoverMatrix{`0})
  langs:
  - csharp
  - vb
  name: DiagonalUniquenessConstraint<TPuzzle>
  nameWithType: DiagonalUniquenessConstraint<TPuzzle>
  fullName: SudokuSpice.Constraints.DiagonalUniquenessConstraint<TPuzzle>
  type: Class
  source:
    remote:
      path: SudokuSpice/Constraints/DiagonalUniquenessConstraint.cs
      branch: master
      repo: https://github.com/MorganR/SudokuSpice
    id: DiagonalUniquenessConstraint
    path: ../SudokuSpice/Constraints/DiagonalUniquenessConstraint.cs
    startLine: 8
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.Constraints
  summary: "\nEnforces the constraint that all values in on each diagonal must be unique.\n"
  example: []
  syntax:
    content: 'public class DiagonalUniquenessConstraint<TPuzzle> : IConstraint<TPuzzle> where TPuzzle : IReadOnlyPuzzle'
    typeParameters:
    - id: TPuzzle
    content.vb: >-
      Public Class DiagonalUniquenessConstraint(Of TPuzzle As IReadOnlyPuzzle)
          Implements IConstraint(Of TPuzzle)
  inheritance:
  - System.Object
  implements:
  - SudokuSpice.Constraints.IConstraint{{TPuzzle}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: DiagonalUniquenessConstraint(Of TPuzzle)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: SudokuSpice.Constraints.DiagonalUniquenessConstraint(Of TPuzzle)
  name.vb: DiagonalUniquenessConstraint(Of TPuzzle)
- uid: SudokuSpice.Constraints.DiagonalUniquenessConstraint`1.Constrain(`0,SudokuSpice.Data.ExactCoverMatrix{`0})
  commentId: M:SudokuSpice.Constraints.DiagonalUniquenessConstraint`1.Constrain(`0,SudokuSpice.Data.ExactCoverMatrix{`0})
  id: Constrain(`0,SudokuSpice.Data.ExactCoverMatrix{`0})
  parent: SudokuSpice.Constraints.DiagonalUniquenessConstraint`1
  langs:
  - csharp
  - vb
  name: Constrain(TPuzzle, ExactCoverMatrix<TPuzzle>)
  nameWithType: DiagonalUniquenessConstraint<TPuzzle>.Constrain(TPuzzle, ExactCoverMatrix<TPuzzle>)
  fullName: SudokuSpice.Constraints.DiagonalUniquenessConstraint<TPuzzle>.Constrain(TPuzzle, SudokuSpice.Data.ExactCoverMatrix<TPuzzle>)
  type: Method
  source:
    remote:
      path: SudokuSpice/Constraints/DiagonalUniquenessConstraint.cs
      branch: master
      repo: https://github.com/MorganR/SudokuSpice
    id: Constrain
    path: ../SudokuSpice/Constraints/DiagonalUniquenessConstraint.cs
    startLine: 11
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.Constraints
  summary: "\nAdds necessary <see cref=\"!:ConstraintHeader\"></see>s and links to the given\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">matrix</code>.\n"
  remarks: "\nThis skips adding <code>ConstraintHeader</code>s that are already satisfied by the given\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">puzzle</code>. Instead, it drops the corresponding\n<see cref=\"!:PossibleSquareValue\"></see>s that would have been included in these headers.\n\nNote: See <see cref=\"!:ExactCoverMatrix\"></see> to understand how the matrix works.\n"
  example: []
  syntax:
    content: public void Constrain(TPuzzle puzzle, ExactCoverMatrix<TPuzzle> matrix)
    parameters:
    - id: puzzle
      type: '{TPuzzle}'
      description: The puzzle to solve.
    - id: matrix
      type: SudokuSpice.Data.ExactCoverMatrix{{TPuzzle}}
      description: The exact-cover matrix to constrain.
    content.vb: Public Sub Constrain(puzzle As TPuzzle, matrix As ExactCoverMatrix(Of TPuzzle))
  overload: SudokuSpice.Constraints.DiagonalUniquenessConstraint`1.Constrain*
  implements:
  - SudokuSpice.Constraints.IConstraint{{TPuzzle}}.Constrain({TPuzzle},SudokuSpice.Data.ExactCoverMatrix{{TPuzzle}})
  nameWithType.vb: DiagonalUniquenessConstraint(Of TPuzzle).Constrain(TPuzzle, ExactCoverMatrix(Of TPuzzle))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SudokuSpice.Constraints.DiagonalUniquenessConstraint(Of TPuzzle).Constrain(TPuzzle, SudokuSpice.Data.ExactCoverMatrix(Of TPuzzle))
  name.vb: Constrain(TPuzzle, ExactCoverMatrix(Of TPuzzle))
references:
- uid: SudokuSpice.Constraints
  commentId: N:SudokuSpice.Constraints
  name: SudokuSpice.Constraints
  nameWithType: SudokuSpice.Constraints
  fullName: SudokuSpice.Constraints
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SudokuSpice.Constraints.IConstraint{{TPuzzle}}
  commentId: T:SudokuSpice.Constraints.IConstraint{`0}
  parent: SudokuSpice.Constraints
  definition: SudokuSpice.Constraints.IConstraint`1
  name: IConstraint<TPuzzle>
  nameWithType: IConstraint<TPuzzle>
  fullName: SudokuSpice.Constraints.IConstraint<TPuzzle>
  nameWithType.vb: IConstraint(Of TPuzzle)
  fullName.vb: SudokuSpice.Constraints.IConstraint(Of TPuzzle)
  name.vb: IConstraint(Of TPuzzle)
  spec.csharp:
  - uid: SudokuSpice.Constraints.IConstraint`1
    name: IConstraint
    nameWithType: IConstraint
    fullName: SudokuSpice.Constraints.IConstraint
  - name: <
    nameWithType: <
    fullName: <
  - name: TPuzzle
    nameWithType: TPuzzle
    fullName: TPuzzle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SudokuSpice.Constraints.IConstraint`1
    name: IConstraint
    nameWithType: IConstraint
    fullName: SudokuSpice.Constraints.IConstraint
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TPuzzle
    nameWithType: TPuzzle
    fullName: TPuzzle
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SudokuSpice.Constraints.IConstraint`1
  commentId: T:SudokuSpice.Constraints.IConstraint`1
  name: IConstraint<TPuzzle>
  nameWithType: IConstraint<TPuzzle>
  fullName: SudokuSpice.Constraints.IConstraint<TPuzzle>
  nameWithType.vb: IConstraint(Of TPuzzle)
  fullName.vb: SudokuSpice.Constraints.IConstraint(Of TPuzzle)
  name.vb: IConstraint(Of TPuzzle)
  spec.csharp:
  - uid: SudokuSpice.Constraints.IConstraint`1
    name: IConstraint
    nameWithType: IConstraint
    fullName: SudokuSpice.Constraints.IConstraint
  - name: <
    nameWithType: <
    fullName: <
  - name: TPuzzle
    nameWithType: TPuzzle
    fullName: TPuzzle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SudokuSpice.Constraints.IConstraint`1
    name: IConstraint
    nameWithType: IConstraint
    fullName: SudokuSpice.Constraints.IConstraint
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TPuzzle
    nameWithType: TPuzzle
    fullName: TPuzzle
  - name: )
    nameWithType: )
    fullName: )
- uid: SudokuSpice.Constraints.DiagonalUniquenessConstraint`1.Constrain*
  commentId: Overload:SudokuSpice.Constraints.DiagonalUniquenessConstraint`1.Constrain
  name: Constrain
  nameWithType: DiagonalUniquenessConstraint<TPuzzle>.Constrain
  fullName: SudokuSpice.Constraints.DiagonalUniquenessConstraint<TPuzzle>.Constrain
  nameWithType.vb: DiagonalUniquenessConstraint(Of TPuzzle).Constrain
  fullName.vb: SudokuSpice.Constraints.DiagonalUniquenessConstraint(Of TPuzzle).Constrain
- uid: SudokuSpice.Constraints.IConstraint{{TPuzzle}}.Constrain({TPuzzle},SudokuSpice.Data.ExactCoverMatrix{{TPuzzle}})
  commentId: M:SudokuSpice.Constraints.IConstraint{`0}.Constrain(`0,SudokuSpice.Data.ExactCoverMatrix{`0})
  parent: SudokuSpice.Constraints.IConstraint{{TPuzzle}}
  definition: SudokuSpice.Constraints.IConstraint`1.Constrain(`0,SudokuSpice.Data.ExactCoverMatrix{`0})
  name: Constrain(TPuzzle, ExactCoverMatrix<TPuzzle>)
  nameWithType: IConstraint<TPuzzle>.Constrain(TPuzzle, ExactCoverMatrix<TPuzzle>)
  fullName: SudokuSpice.Constraints.IConstraint<TPuzzle>.Constrain(TPuzzle, SudokuSpice.Data.ExactCoverMatrix<TPuzzle>)
  nameWithType.vb: IConstraint(Of TPuzzle).Constrain(TPuzzle, ExactCoverMatrix(Of TPuzzle))
  fullName.vb: SudokuSpice.Constraints.IConstraint(Of TPuzzle).Constrain(TPuzzle, SudokuSpice.Data.ExactCoverMatrix(Of TPuzzle))
  name.vb: Constrain(TPuzzle, ExactCoverMatrix(Of TPuzzle))
  spec.csharp:
  - uid: SudokuSpice.Constraints.IConstraint`1.Constrain(`0,SudokuSpice.Data.ExactCoverMatrix{`0})
    name: Constrain
    nameWithType: IConstraint<TPuzzle>.Constrain
    fullName: SudokuSpice.Constraints.IConstraint<TPuzzle>.Constrain
  - name: (
    nameWithType: (
    fullName: (
  - name: TPuzzle
    nameWithType: TPuzzle
    fullName: TPuzzle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SudokuSpice.Data.ExactCoverMatrix`1
    name: ExactCoverMatrix
    nameWithType: ExactCoverMatrix
    fullName: SudokuSpice.Data.ExactCoverMatrix
  - name: <
    nameWithType: <
    fullName: <
  - name: TPuzzle
    nameWithType: TPuzzle
    fullName: TPuzzle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SudokuSpice.Constraints.IConstraint`1.Constrain(`0,SudokuSpice.Data.ExactCoverMatrix{`0})
    name: Constrain
    nameWithType: IConstraint(Of TPuzzle).Constrain
    fullName: SudokuSpice.Constraints.IConstraint(Of TPuzzle).Constrain
  - name: (
    nameWithType: (
    fullName: (
  - name: TPuzzle
    nameWithType: TPuzzle
    fullName: TPuzzle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SudokuSpice.Data.ExactCoverMatrix`1
    name: ExactCoverMatrix
    nameWithType: ExactCoverMatrix
    fullName: SudokuSpice.Data.ExactCoverMatrix
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TPuzzle
    nameWithType: TPuzzle
    fullName: TPuzzle
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TPuzzle}'
  commentId: '!:TPuzzle'
  definition: TPuzzle
  name: TPuzzle
  nameWithType: TPuzzle
  fullName: TPuzzle
- uid: SudokuSpice.Data.ExactCoverMatrix{{TPuzzle}}
  commentId: T:SudokuSpice.Data.ExactCoverMatrix{`0}
  parent: SudokuSpice.Data
  definition: SudokuSpice.Data.ExactCoverMatrix`1
  name: ExactCoverMatrix<TPuzzle>
  nameWithType: ExactCoverMatrix<TPuzzle>
  fullName: SudokuSpice.Data.ExactCoverMatrix<TPuzzle>
  nameWithType.vb: ExactCoverMatrix(Of TPuzzle)
  fullName.vb: SudokuSpice.Data.ExactCoverMatrix(Of TPuzzle)
  name.vb: ExactCoverMatrix(Of TPuzzle)
  spec.csharp:
  - uid: SudokuSpice.Data.ExactCoverMatrix`1
    name: ExactCoverMatrix
    nameWithType: ExactCoverMatrix
    fullName: SudokuSpice.Data.ExactCoverMatrix
  - name: <
    nameWithType: <
    fullName: <
  - name: TPuzzle
    nameWithType: TPuzzle
    fullName: TPuzzle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SudokuSpice.Data.ExactCoverMatrix`1
    name: ExactCoverMatrix
    nameWithType: ExactCoverMatrix
    fullName: SudokuSpice.Data.ExactCoverMatrix
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TPuzzle
    nameWithType: TPuzzle
    fullName: TPuzzle
  - name: )
    nameWithType: )
    fullName: )
- uid: SudokuSpice.Constraints.IConstraint`1.Constrain(`0,SudokuSpice.Data.ExactCoverMatrix{`0})
  commentId: M:SudokuSpice.Constraints.IConstraint`1.Constrain(`0,SudokuSpice.Data.ExactCoverMatrix{`0})
  name: Constrain(TPuzzle, ExactCoverMatrix<TPuzzle>)
  nameWithType: IConstraint<TPuzzle>.Constrain(TPuzzle, ExactCoverMatrix<TPuzzle>)
  fullName: SudokuSpice.Constraints.IConstraint<TPuzzle>.Constrain(TPuzzle, SudokuSpice.Data.ExactCoverMatrix<TPuzzle>)
  nameWithType.vb: IConstraint(Of TPuzzle).Constrain(TPuzzle, ExactCoverMatrix(Of TPuzzle))
  fullName.vb: SudokuSpice.Constraints.IConstraint(Of TPuzzle).Constrain(TPuzzle, SudokuSpice.Data.ExactCoverMatrix(Of TPuzzle))
  name.vb: Constrain(TPuzzle, ExactCoverMatrix(Of TPuzzle))
  spec.csharp:
  - uid: SudokuSpice.Constraints.IConstraint`1.Constrain(`0,SudokuSpice.Data.ExactCoverMatrix{`0})
    name: Constrain
    nameWithType: IConstraint<TPuzzle>.Constrain
    fullName: SudokuSpice.Constraints.IConstraint<TPuzzle>.Constrain
  - name: (
    nameWithType: (
    fullName: (
  - name: TPuzzle
    nameWithType: TPuzzle
    fullName: TPuzzle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SudokuSpice.Data.ExactCoverMatrix`1
    name: ExactCoverMatrix
    nameWithType: ExactCoverMatrix
    fullName: SudokuSpice.Data.ExactCoverMatrix
  - name: <
    nameWithType: <
    fullName: <
  - name: TPuzzle
    nameWithType: TPuzzle
    fullName: TPuzzle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SudokuSpice.Constraints.IConstraint`1.Constrain(`0,SudokuSpice.Data.ExactCoverMatrix{`0})
    name: Constrain
    nameWithType: IConstraint(Of TPuzzle).Constrain
    fullName: SudokuSpice.Constraints.IConstraint(Of TPuzzle).Constrain
  - name: (
    nameWithType: (
    fullName: (
  - name: TPuzzle
    nameWithType: TPuzzle
    fullName: TPuzzle
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SudokuSpice.Data.ExactCoverMatrix`1
    name: ExactCoverMatrix
    nameWithType: ExactCoverMatrix
    fullName: SudokuSpice.Data.ExactCoverMatrix
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TPuzzle
    nameWithType: TPuzzle
    fullName: TPuzzle
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TPuzzle
  name: TPuzzle
  nameWithType: TPuzzle
  fullName: TPuzzle
- uid: SudokuSpice.Data.ExactCoverMatrix`1
  commentId: T:SudokuSpice.Data.ExactCoverMatrix`1
  name: ExactCoverMatrix<TPuzzle>
  nameWithType: ExactCoverMatrix<TPuzzle>
  fullName: SudokuSpice.Data.ExactCoverMatrix<TPuzzle>
  nameWithType.vb: ExactCoverMatrix(Of TPuzzle)
  fullName.vb: SudokuSpice.Data.ExactCoverMatrix(Of TPuzzle)
  name.vb: ExactCoverMatrix(Of TPuzzle)
  spec.csharp:
  - uid: SudokuSpice.Data.ExactCoverMatrix`1
    name: ExactCoverMatrix
    nameWithType: ExactCoverMatrix
    fullName: SudokuSpice.Data.ExactCoverMatrix
  - name: <
    nameWithType: <
    fullName: <
  - name: TPuzzle
    nameWithType: TPuzzle
    fullName: TPuzzle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SudokuSpice.Data.ExactCoverMatrix`1
    name: ExactCoverMatrix
    nameWithType: ExactCoverMatrix
    fullName: SudokuSpice.Data.ExactCoverMatrix
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TPuzzle
    nameWithType: TPuzzle
    fullName: TPuzzle
  - name: )
    nameWithType: )
    fullName: )
- uid: SudokuSpice.Data
  commentId: N:SudokuSpice.Data
  name: SudokuSpice.Data
  nameWithType: SudokuSpice.Data
  fullName: SudokuSpice.Data
