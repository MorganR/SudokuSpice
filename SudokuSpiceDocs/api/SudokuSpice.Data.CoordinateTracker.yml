### YamlMime:ManagedReference
items:
- uid: SudokuSpice.Data.CoordinateTracker
  commentId: T:SudokuSpice.Data.CoordinateTracker
  id: CoordinateTracker
  parent: SudokuSpice.Data
  children:
  - SudokuSpice.Data.CoordinateTracker.#ctor(SudokuSpice.Data.CoordinateTracker)
  - SudokuSpice.Data.CoordinateTracker.#ctor(System.Int32)
  - SudokuSpice.Data.CoordinateTracker.Add(SudokuSpice.Data.Coordinate@)
  - SudokuSpice.Data.CoordinateTracker.AddOrTrackIfUntracked(SudokuSpice.Data.Coordinate@)
  - SudokuSpice.Data.CoordinateTracker.GetTrackedCoords
  - SudokuSpice.Data.CoordinateTracker.NumTracked
  - SudokuSpice.Data.CoordinateTracker.Track(SudokuSpice.Data.Coordinate@)
  - SudokuSpice.Data.CoordinateTracker.Untrack(SudokuSpice.Data.Coordinate@)
  - SudokuSpice.Data.CoordinateTracker.UntrackAll
  langs:
  - csharp
  - vb
  name: CoordinateTracker
  nameWithType: CoordinateTracker
  fullName: SudokuSpice.Data.CoordinateTracker
  type: Class
  source:
    remote:
      path: SudokuSpice/Data/CoordinateTracker.cs
      branch: master
      repo: https://github.com/MorganR/SudokuSpice
    id: CoordinateTracker
    path: ../SudokuSpice/Data/CoordinateTracker.cs
    startLine: 12
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.Data
  summary: Efficiently tracks a set of <xref href="SudokuSpice.Data.Coordinate" data-throw-if-not-resolved="false"></xref>s.
  remarks: "\nThis swaps coordinates within an internal array to provide O(1) tracking and untracking\noperations. It also provides immediate, copy-free access to tracked coordinates using a\n<code>ReadOnlySpan</code>.\n"
  example: []
  syntax:
    content: public class CoordinateTracker
    content.vb: Public Class CoordinateTracker
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SudokuSpice.Data.CoordinateTracker.NumTracked
  commentId: P:SudokuSpice.Data.CoordinateTracker.NumTracked
  id: NumTracked
  parent: SudokuSpice.Data.CoordinateTracker
  langs:
  - csharp
  - vb
  name: NumTracked
  nameWithType: CoordinateTracker.NumTracked
  fullName: SudokuSpice.Data.CoordinateTracker.NumTracked
  type: Property
  source:
    remote:
      path: SudokuSpice/Data/CoordinateTracker.cs
      branch: master
      repo: https://github.com/MorganR/SudokuSpice
    id: NumTracked
    path: ../SudokuSpice/Data/CoordinateTracker.cs
    startLine: 21
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.Data
  summary: "\nThe number of coordinates currently considered to be &apos;tracked&apos;.\n"
  example: []
  syntax:
    content: public int NumTracked { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property NumTracked As Integer
  overload: SudokuSpice.Data.CoordinateTracker.NumTracked*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SudokuSpice.Data.CoordinateTracker.#ctor(System.Int32)
  commentId: M:SudokuSpice.Data.CoordinateTracker.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: SudokuSpice.Data.CoordinateTracker
  langs:
  - csharp
  - vb
  name: CoordinateTracker(Int32)
  nameWithType: CoordinateTracker.CoordinateTracker(Int32)
  fullName: SudokuSpice.Data.CoordinateTracker.CoordinateTracker(System.Int32)
  type: Constructor
  source:
    remote:
      path: SudokuSpice/Data/CoordinateTracker.cs
      branch: master
      repo: https://github.com/MorganR/SudokuSpice
    id: .ctor
    path: ../SudokuSpice/Data/CoordinateTracker.cs
    startLine: 51
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.Data
  summary: "\nConstructs a <code>CoordinateTracker</code> to track coordinates within a\n<code>sideLength</code>-by-<code>sideLength</code> square.\n"
  example: []
  syntax:
    content: public CoordinateTracker(int sideLength)
    parameters:
    - id: sideLength
      type: System.Int32
      description: The side length of a square of valid coordinates.
    content.vb: Public Sub New(sideLength As Integer)
  overload: SudokuSpice.Data.CoordinateTracker.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SudokuSpice.Data.CoordinateTracker.#ctor(SudokuSpice.Data.CoordinateTracker)
  commentId: M:SudokuSpice.Data.CoordinateTracker.#ctor(SudokuSpice.Data.CoordinateTracker)
  id: '#ctor(SudokuSpice.Data.CoordinateTracker)'
  parent: SudokuSpice.Data.CoordinateTracker
  langs:
  - csharp
  - vb
  name: CoordinateTracker(CoordinateTracker)
  nameWithType: CoordinateTracker.CoordinateTracker(CoordinateTracker)
  fullName: SudokuSpice.Data.CoordinateTracker.CoordinateTracker(SudokuSpice.Data.CoordinateTracker)
  type: Constructor
  source:
    remote:
      path: SudokuSpice/Data/CoordinateTracker.cs
      branch: master
      repo: https://github.com/MorganR/SudokuSpice
    id: .ctor
    path: ../SudokuSpice/Data/CoordinateTracker.cs
    startLine: 68
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.Data
  summary: "\nCopy-constructor to provide a copy of the given CoordinateTracker.\n"
  example: []
  syntax:
    content: public CoordinateTracker(CoordinateTracker existing)
    parameters:
    - id: existing
      type: SudokuSpice.Data.CoordinateTracker
      description: ''
    content.vb: Public Sub New(existing As CoordinateTracker)
  overload: SudokuSpice.Data.CoordinateTracker.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SudokuSpice.Data.CoordinateTracker.Add(SudokuSpice.Data.Coordinate@)
  commentId: M:SudokuSpice.Data.CoordinateTracker.Add(SudokuSpice.Data.Coordinate@)
  id: Add(SudokuSpice.Data.Coordinate@)
  parent: SudokuSpice.Data.CoordinateTracker
  langs:
  - csharp
  - vb
  name: Add(Coordinate)
  nameWithType: CoordinateTracker.Add(Coordinate)
  fullName: SudokuSpice.Data.CoordinateTracker.Add(SudokuSpice.Data.Coordinate)
  type: Method
  source:
    remote:
      path: SudokuSpice/Data/CoordinateTracker.cs
      branch: master
      repo: https://github.com/MorganR/SudokuSpice
    id: Add
    path: ../SudokuSpice/Data/CoordinateTracker.cs
    startLine: 81
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.Data
  summary: "\nAdds and tracks a previously unknown <xref href=\"SudokuSpice.Data.Coordinate\" data-throw-if-not-resolved=\"false\"></xref>. This must only be called\nonce for any given Coordinate.\n"
  example: []
  syntax:
    content: public void Add(in Coordinate c)
    parameters:
    - id: c
      type: SudokuSpice.Data.Coordinate
      description: The <xref href="SudokuSpice.Data.Coordinate" data-throw-if-not-resolved="false"></xref> to add.
    content.vb: Public Sub Add(ByRef c As Coordinate)
  overload: SudokuSpice.Data.CoordinateTracker.Add*
  nameWithType.vb: CoordinateTracker.Add(ByRef Coordinate)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SudokuSpice.Data.CoordinateTracker.Add(ByRef SudokuSpice.Data.Coordinate)
  name.vb: Add(ByRef Coordinate)
- uid: SudokuSpice.Data.CoordinateTracker.Track(SudokuSpice.Data.Coordinate@)
  commentId: M:SudokuSpice.Data.CoordinateTracker.Track(SudokuSpice.Data.Coordinate@)
  id: Track(SudokuSpice.Data.Coordinate@)
  parent: SudokuSpice.Data.CoordinateTracker
  langs:
  - csharp
  - vb
  name: Track(Coordinate)
  nameWithType: CoordinateTracker.Track(Coordinate)
  fullName: SudokuSpice.Data.CoordinateTracker.Track(SudokuSpice.Data.Coordinate)
  type: Method
  source:
    remote:
      path: SudokuSpice/Data/CoordinateTracker.cs
      branch: master
      repo: https://github.com/MorganR/SudokuSpice
    id: Track
    path: ../SudokuSpice/Data/CoordinateTracker.cs
    startLine: 94
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.Data
  summary: "\nTracks a currently untracked <xref href=\"SudokuSpice.Data.Coordinate\" data-throw-if-not-resolved=\"false\"></xref>. The coordinate must not be\ntracked already.\n"
  example: []
  syntax:
    content: public void Track(in Coordinate c)
    parameters:
    - id: c
      type: SudokuSpice.Data.Coordinate
      description: The <xref href="SudokuSpice.Data.Coordinate" data-throw-if-not-resolved="false"></xref> to track.
    content.vb: Public Sub Track(ByRef c As Coordinate)
  overload: SudokuSpice.Data.CoordinateTracker.Track*
  nameWithType.vb: CoordinateTracker.Track(ByRef Coordinate)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SudokuSpice.Data.CoordinateTracker.Track(ByRef SudokuSpice.Data.Coordinate)
  name.vb: Track(ByRef Coordinate)
- uid: SudokuSpice.Data.CoordinateTracker.AddOrTrackIfUntracked(SudokuSpice.Data.Coordinate@)
  commentId: M:SudokuSpice.Data.CoordinateTracker.AddOrTrackIfUntracked(SudokuSpice.Data.Coordinate@)
  id: AddOrTrackIfUntracked(SudokuSpice.Data.Coordinate@)
  parent: SudokuSpice.Data.CoordinateTracker
  langs:
  - csharp
  - vb
  name: AddOrTrackIfUntracked(Coordinate)
  nameWithType: CoordinateTracker.AddOrTrackIfUntracked(Coordinate)
  fullName: SudokuSpice.Data.CoordinateTracker.AddOrTrackIfUntracked(SudokuSpice.Data.Coordinate)
  type: Method
  source:
    remote:
      path: SudokuSpice/Data/CoordinateTracker.cs
      branch: master
      repo: https://github.com/MorganR/SudokuSpice
    id: AddOrTrackIfUntracked
    path: ../SudokuSpice/Data/CoordinateTracker.cs
    startLine: 107
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.Data
  summary: "\nEnsures a given <xref href=\"SudokuSpice.Data.Coordinate\" data-throw-if-not-resolved=\"false\"></xref> is both added and tracked. Useful when callers\nare not certain of the status of the given <code>Coordinate</code>.\n"
  example: []
  syntax:
    content: public CoordinateTracker.AddOrTrackResult AddOrTrackIfUntracked(in Coordinate c)
    parameters:
    - id: c
      type: SudokuSpice.Data.Coordinate
      description: The <xref href="SudokuSpice.Data.Coordinate" data-throw-if-not-resolved="false"></xref> to track.
    return:
      type: SudokuSpice.Data.CoordinateTracker.AddOrTrackResult
      description: The action that was taken.
    content.vb: Public Function AddOrTrackIfUntracked(ByRef c As Coordinate) As CoordinateTracker.AddOrTrackResult
  overload: SudokuSpice.Data.CoordinateTracker.AddOrTrackIfUntracked*
  nameWithType.vb: CoordinateTracker.AddOrTrackIfUntracked(ByRef Coordinate)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SudokuSpice.Data.CoordinateTracker.AddOrTrackIfUntracked(ByRef SudokuSpice.Data.Coordinate)
  name.vb: AddOrTrackIfUntracked(ByRef Coordinate)
- uid: SudokuSpice.Data.CoordinateTracker.Untrack(SudokuSpice.Data.Coordinate@)
  commentId: M:SudokuSpice.Data.CoordinateTracker.Untrack(SudokuSpice.Data.Coordinate@)
  id: Untrack(SudokuSpice.Data.Coordinate@)
  parent: SudokuSpice.Data.CoordinateTracker
  langs:
  - csharp
  - vb
  name: Untrack(Coordinate)
  nameWithType: CoordinateTracker.Untrack(Coordinate)
  fullName: SudokuSpice.Data.CoordinateTracker.Untrack(SudokuSpice.Data.Coordinate)
  type: Method
  source:
    remote:
      path: SudokuSpice/Data/CoordinateTracker.cs
      branch: master
      repo: https://github.com/MorganR/SudokuSpice
    id: Untrack
    path: ../SudokuSpice/Data/CoordinateTracker.cs
    startLine: 128
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.Data
  summary: "\nUntracks a given <xref href=\"SudokuSpice.Data.Coordinate\" data-throw-if-not-resolved=\"false\"></xref>. The <code>Coordinate</code> must be currently\ntracked.\n"
  example: []
  syntax:
    content: public void Untrack(in Coordinate c)
    parameters:
    - id: c
      type: SudokuSpice.Data.Coordinate
      description: The <xref href="SudokuSpice.Data.Coordinate" data-throw-if-not-resolved="false"></xref> to untrack.
    content.vb: Public Sub Untrack(ByRef c As Coordinate)
  overload: SudokuSpice.Data.CoordinateTracker.Untrack*
  nameWithType.vb: CoordinateTracker.Untrack(ByRef Coordinate)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SudokuSpice.Data.CoordinateTracker.Untrack(ByRef SudokuSpice.Data.Coordinate)
  name.vb: Untrack(ByRef Coordinate)
- uid: SudokuSpice.Data.CoordinateTracker.UntrackAll
  commentId: M:SudokuSpice.Data.CoordinateTracker.UntrackAll
  id: UntrackAll
  parent: SudokuSpice.Data.CoordinateTracker
  langs:
  - csharp
  - vb
  name: UntrackAll()
  nameWithType: CoordinateTracker.UntrackAll()
  fullName: SudokuSpice.Data.CoordinateTracker.UntrackAll()
  type: Method
  source:
    remote:
      path: SudokuSpice/Data/CoordinateTracker.cs
      branch: master
      repo: https://github.com/MorganR/SudokuSpice
    id: UntrackAll
    path: ../SudokuSpice/Data/CoordinateTracker.cs
    startLine: 145
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.Data
  summary: "\nUntracks all <xref href=\"SudokuSpice.Data.Coordinate\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: public void UntrackAll()
    content.vb: Public Sub UntrackAll
  overload: SudokuSpice.Data.CoordinateTracker.UntrackAll*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SudokuSpice.Data.CoordinateTracker.GetTrackedCoords
  commentId: M:SudokuSpice.Data.CoordinateTracker.GetTrackedCoords
  id: GetTrackedCoords
  parent: SudokuSpice.Data.CoordinateTracker
  langs:
  - csharp
  - vb
  name: GetTrackedCoords()
  nameWithType: CoordinateTracker.GetTrackedCoords()
  fullName: SudokuSpice.Data.CoordinateTracker.GetTrackedCoords()
  type: Method
  source:
    remote:
      path: SudokuSpice/Data/CoordinateTracker.cs
      branch: master
      repo: https://github.com/MorganR/SudokuSpice
    id: GetTrackedCoords
    path: ../SudokuSpice/Data/CoordinateTracker.cs
    startLine: 153
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.Data
  summary: "\nProvides readonly access to the currently tracked <xref href=\"SudokuSpice.Data.Coordinate\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: public ReadOnlySpan<Coordinate> GetTrackedCoords()
    return:
      type: System.ReadOnlySpan{SudokuSpice.Data.Coordinate}
    content.vb: Public Function GetTrackedCoords As ReadOnlySpan(Of Coordinate)
  overload: SudokuSpice.Data.CoordinateTracker.GetTrackedCoords*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SudokuSpice.Data.Coordinate
  commentId: T:SudokuSpice.Data.Coordinate
  parent: SudokuSpice.Data
  name: Coordinate
  nameWithType: Coordinate
  fullName: SudokuSpice.Data.Coordinate
- uid: SudokuSpice.Data
  commentId: N:SudokuSpice.Data
  name: SudokuSpice.Data
  nameWithType: SudokuSpice.Data
  fullName: SudokuSpice.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SudokuSpice.Data.CoordinateTracker.NumTracked*
  commentId: Overload:SudokuSpice.Data.CoordinateTracker.NumTracked
  name: NumTracked
  nameWithType: CoordinateTracker.NumTracked
  fullName: SudokuSpice.Data.CoordinateTracker.NumTracked
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SudokuSpice.Data.CoordinateTracker.#ctor*
  commentId: Overload:SudokuSpice.Data.CoordinateTracker.#ctor
  name: CoordinateTracker
  nameWithType: CoordinateTracker.CoordinateTracker
  fullName: SudokuSpice.Data.CoordinateTracker.CoordinateTracker
- uid: SudokuSpice.Data.CoordinateTracker
  commentId: T:SudokuSpice.Data.CoordinateTracker
  parent: SudokuSpice.Data
  name: CoordinateTracker
  nameWithType: CoordinateTracker
  fullName: SudokuSpice.Data.CoordinateTracker
- uid: SudokuSpice.Data.CoordinateTracker.Add*
  commentId: Overload:SudokuSpice.Data.CoordinateTracker.Add
  name: Add
  nameWithType: CoordinateTracker.Add
  fullName: SudokuSpice.Data.CoordinateTracker.Add
- uid: SudokuSpice.Data.CoordinateTracker.Track*
  commentId: Overload:SudokuSpice.Data.CoordinateTracker.Track
  name: Track
  nameWithType: CoordinateTracker.Track
  fullName: SudokuSpice.Data.CoordinateTracker.Track
- uid: SudokuSpice.Data.CoordinateTracker.AddOrTrackIfUntracked*
  commentId: Overload:SudokuSpice.Data.CoordinateTracker.AddOrTrackIfUntracked
  name: AddOrTrackIfUntracked
  nameWithType: CoordinateTracker.AddOrTrackIfUntracked
  fullName: SudokuSpice.Data.CoordinateTracker.AddOrTrackIfUntracked
- uid: SudokuSpice.Data.CoordinateTracker.AddOrTrackResult
  commentId: T:SudokuSpice.Data.CoordinateTracker.AddOrTrackResult
  parent: SudokuSpice.Data
  name: CoordinateTracker.AddOrTrackResult
  nameWithType: CoordinateTracker.AddOrTrackResult
  fullName: SudokuSpice.Data.CoordinateTracker.AddOrTrackResult
- uid: SudokuSpice.Data.CoordinateTracker.Untrack*
  commentId: Overload:SudokuSpice.Data.CoordinateTracker.Untrack
  name: Untrack
  nameWithType: CoordinateTracker.Untrack
  fullName: SudokuSpice.Data.CoordinateTracker.Untrack
- uid: SudokuSpice.Data.CoordinateTracker.UntrackAll*
  commentId: Overload:SudokuSpice.Data.CoordinateTracker.UntrackAll
  name: UntrackAll
  nameWithType: CoordinateTracker.UntrackAll
  fullName: SudokuSpice.Data.CoordinateTracker.UntrackAll
- uid: SudokuSpice.Data.CoordinateTracker.GetTrackedCoords*
  commentId: Overload:SudokuSpice.Data.CoordinateTracker.GetTrackedCoords
  name: GetTrackedCoords
  nameWithType: CoordinateTracker.GetTrackedCoords
  fullName: SudokuSpice.Data.CoordinateTracker.GetTrackedCoords
- uid: System.ReadOnlySpan{SudokuSpice.Data.Coordinate}
  commentId: T:System.ReadOnlySpan{SudokuSpice.Data.Coordinate}
  parent: System
  definition: System.ReadOnlySpan`1
  name: ReadOnlySpan<Coordinate>
  nameWithType: ReadOnlySpan<Coordinate>
  fullName: System.ReadOnlySpan<SudokuSpice.Data.Coordinate>
  nameWithType.vb: ReadOnlySpan(Of Coordinate)
  fullName.vb: System.ReadOnlySpan(Of SudokuSpice.Data.Coordinate)
  name.vb: ReadOnlySpan(Of Coordinate)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    nameWithType: ReadOnlySpan
    fullName: System.ReadOnlySpan
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SudokuSpice.Data.Coordinate
    name: Coordinate
    nameWithType: Coordinate
    fullName: SudokuSpice.Data.Coordinate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    nameWithType: ReadOnlySpan
    fullName: System.ReadOnlySpan
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SudokuSpice.Data.Coordinate
    name: Coordinate
    nameWithType: Coordinate
    fullName: SudokuSpice.Data.Coordinate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    nameWithType: ReadOnlySpan
    fullName: System.ReadOnlySpan
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    nameWithType: ReadOnlySpan
    fullName: System.ReadOnlySpan
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
