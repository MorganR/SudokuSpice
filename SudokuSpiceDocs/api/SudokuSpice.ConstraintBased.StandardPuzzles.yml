### YamlMime:ManagedReference
items:
- uid: SudokuSpice.ConstraintBased.StandardPuzzles
  commentId: T:SudokuSpice.ConstraintBased.StandardPuzzles
  id: StandardPuzzles
  parent: SudokuSpice.ConstraintBased
  children:
  - SudokuSpice.ConstraintBased.StandardPuzzles.CreateSolver
  langs:
  - csharp
  - vb
  name: StandardPuzzles
  nameWithType: StandardPuzzles
  fullName: SudokuSpice.ConstraintBased.StandardPuzzles
  type: Class
  source:
    remote:
      path: SudokuSpice/ConstraintBased/StandardPuzzles.cs
      branch: init-or-not-init
      repo: https://github.com/MorganR/SudokuSpice
    id: StandardPuzzles
    path: ../SudokuSpice/ConstraintBased/StandardPuzzles.cs
    startLine: 6
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.ConstraintBased
  summary: Provides utilities for interacting with standard Sudoku puzzles.
  example: []
  syntax:
    content: public static class StandardPuzzles
    content.vb: Public Module StandardPuzzles
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SudokuSpice.ConstraintBased.StandardPuzzles.CreateSolver
  commentId: M:SudokuSpice.ConstraintBased.StandardPuzzles.CreateSolver
  id: CreateSolver
  parent: SudokuSpice.ConstraintBased.StandardPuzzles
  langs:
  - csharp
  - vb
  name: CreateSolver()
  nameWithType: StandardPuzzles.CreateSolver()
  fullName: SudokuSpice.ConstraintBased.StandardPuzzles.CreateSolver()
  type: Method
  source:
    remote:
      path: SudokuSpice/ConstraintBased/StandardPuzzles.cs
      branch: init-or-not-init
      repo: https://github.com/MorganR/SudokuSpice
    id: CreateSolver
    path: ../SudokuSpice/ConstraintBased/StandardPuzzles.cs
    startLine: 9
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.ConstraintBased
  summary: Creates an efficient solver for solving standard Sudoku puzzles.
  example: []
  syntax:
    content: public static PuzzleSolver<Puzzle> CreateSolver()
    return:
      type: SudokuSpice.ConstraintBased.PuzzleSolver{SudokuSpice.Puzzle}
    content.vb: Public Shared Function CreateSolver As PuzzleSolver(Of Puzzle)
  overload: SudokuSpice.ConstraintBased.StandardPuzzles.CreateSolver*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SudokuSpice.ConstraintBased
  commentId: N:SudokuSpice.ConstraintBased
  name: SudokuSpice.ConstraintBased
  nameWithType: SudokuSpice.ConstraintBased
  fullName: SudokuSpice.ConstraintBased
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SudokuSpice.ConstraintBased.StandardPuzzles.CreateSolver*
  commentId: Overload:SudokuSpice.ConstraintBased.StandardPuzzles.CreateSolver
  name: CreateSolver
  nameWithType: StandardPuzzles.CreateSolver
  fullName: SudokuSpice.ConstraintBased.StandardPuzzles.CreateSolver
- uid: SudokuSpice.ConstraintBased.PuzzleSolver{SudokuSpice.Puzzle}
  commentId: T:SudokuSpice.ConstraintBased.PuzzleSolver{SudokuSpice.Puzzle}
  parent: SudokuSpice.ConstraintBased
  definition: SudokuSpice.ConstraintBased.PuzzleSolver`1
  name: PuzzleSolver<Puzzle>
  nameWithType: PuzzleSolver<Puzzle>
  fullName: SudokuSpice.ConstraintBased.PuzzleSolver<SudokuSpice.Puzzle>
  nameWithType.vb: PuzzleSolver(Of Puzzle)
  fullName.vb: SudokuSpice.ConstraintBased.PuzzleSolver(Of SudokuSpice.Puzzle)
  name.vb: PuzzleSolver(Of Puzzle)
  spec.csharp:
  - uid: SudokuSpice.ConstraintBased.PuzzleSolver`1
    name: PuzzleSolver
    nameWithType: PuzzleSolver
    fullName: SudokuSpice.ConstraintBased.PuzzleSolver
  - name: <
    nameWithType: <
    fullName: <
  - uid: SudokuSpice.Puzzle
    name: Puzzle
    nameWithType: Puzzle
    fullName: SudokuSpice.Puzzle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SudokuSpice.ConstraintBased.PuzzleSolver`1
    name: PuzzleSolver
    nameWithType: PuzzleSolver
    fullName: SudokuSpice.ConstraintBased.PuzzleSolver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SudokuSpice.Puzzle
    name: Puzzle
    nameWithType: Puzzle
    fullName: SudokuSpice.Puzzle
  - name: )
    nameWithType: )
    fullName: )
- uid: SudokuSpice.ConstraintBased.PuzzleSolver`1
  commentId: T:SudokuSpice.ConstraintBased.PuzzleSolver`1
  name: PuzzleSolver<TPuzzle>
  nameWithType: PuzzleSolver<TPuzzle>
  fullName: SudokuSpice.ConstraintBased.PuzzleSolver<TPuzzle>
  nameWithType.vb: PuzzleSolver(Of TPuzzle)
  fullName.vb: SudokuSpice.ConstraintBased.PuzzleSolver(Of TPuzzle)
  name.vb: PuzzleSolver(Of TPuzzle)
  spec.csharp:
  - uid: SudokuSpice.ConstraintBased.PuzzleSolver`1
    name: PuzzleSolver
    nameWithType: PuzzleSolver
    fullName: SudokuSpice.ConstraintBased.PuzzleSolver
  - name: <
    nameWithType: <
    fullName: <
  - name: TPuzzle
    nameWithType: TPuzzle
    fullName: TPuzzle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SudokuSpice.ConstraintBased.PuzzleSolver`1
    name: PuzzleSolver
    nameWithType: PuzzleSolver
    fullName: SudokuSpice.ConstraintBased.PuzzleSolver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TPuzzle
    nameWithType: TPuzzle
    fullName: TPuzzle
  - name: )
    nameWithType: )
    fullName: )
