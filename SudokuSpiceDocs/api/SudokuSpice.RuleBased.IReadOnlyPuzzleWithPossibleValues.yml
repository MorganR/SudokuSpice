### YamlMime:ManagedReference
items:
- uid: SudokuSpice.RuleBased.IReadOnlyPuzzleWithPossibleValues
  commentId: T:SudokuSpice.RuleBased.IReadOnlyPuzzleWithPossibleValues
  id: IReadOnlyPuzzleWithPossibleValues
  parent: SudokuSpice.RuleBased
  children: []
  langs:
  - csharp
  - vb
  name: IReadOnlyPuzzleWithPossibleValues
  nameWithType: IReadOnlyPuzzleWithPossibleValues
  fullName: SudokuSpice.RuleBased.IReadOnlyPuzzleWithPossibleValues
  type: Interface
  source:
    remote:
      path: SudokuSpice/RuleBased/IReadOnlyPuzzleWithPossibleValues.cs
      branch: flexible-constraints
      repo: https://github.com/MorganR/SudokuSpice
    id: IReadOnlyPuzzleWithPossibleValues
    path: ../SudokuSpice/RuleBased/IReadOnlyPuzzleWithPossibleValues.cs
    startLine: 5
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice.RuleBased
  summary: "\nProvides read-only access to a puzzle&apos;s data and associated possible values.\n"
  example: []
  syntax:
    content: 'public interface IReadOnlyPuzzleWithPossibleValues : IReadOnlyPuzzle, IReadOnlyPossibleValues'
    content.vb: >-
      Public Interface IReadOnlyPuzzleWithPossibleValues
          Inherits IReadOnlyPuzzle, IReadOnlyPossibleValues
  inheritedMembers:
  - SudokuSpice.IReadOnlyPuzzle.Size
  - SudokuSpice.IReadOnlyPuzzle.NumSquares
  - SudokuSpice.IReadOnlyPuzzle.NumEmptySquares
  - SudokuSpice.IReadOnlyPuzzle.NumSetSquares
  - SudokuSpice.IReadOnlyPuzzle.AllPossibleValuesSpan
  - SudokuSpice.IReadOnlyPuzzle.Item(System.Int32,System.Int32)
  - SudokuSpice.IReadOnlyPuzzle.Item(SudokuSpice.Coordinate@)
  - SudokuSpice.IReadOnlyPuzzle.GetUnsetCoords
  - SudokuSpice.RuleBased.IReadOnlyPossibleValues.AllPossibleValues
  - SudokuSpice.RuleBased.IReadOnlyPossibleValues.GetPossibleValues(SudokuSpice.Coordinate@)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
references:
- uid: SudokuSpice.RuleBased
  commentId: N:SudokuSpice.RuleBased
  name: SudokuSpice.RuleBased
  nameWithType: SudokuSpice.RuleBased
  fullName: SudokuSpice.RuleBased
- uid: SudokuSpice.IReadOnlyPuzzle.Size
  commentId: P:SudokuSpice.IReadOnlyPuzzle.Size
  parent: SudokuSpice.IReadOnlyPuzzle
  name: Size
  nameWithType: IReadOnlyPuzzle.Size
  fullName: SudokuSpice.IReadOnlyPuzzle.Size
- uid: SudokuSpice.IReadOnlyPuzzle.NumSquares
  commentId: P:SudokuSpice.IReadOnlyPuzzle.NumSquares
  parent: SudokuSpice.IReadOnlyPuzzle
  name: NumSquares
  nameWithType: IReadOnlyPuzzle.NumSquares
  fullName: SudokuSpice.IReadOnlyPuzzle.NumSquares
- uid: SudokuSpice.IReadOnlyPuzzle.NumEmptySquares
  commentId: P:SudokuSpice.IReadOnlyPuzzle.NumEmptySquares
  parent: SudokuSpice.IReadOnlyPuzzle
  name: NumEmptySquares
  nameWithType: IReadOnlyPuzzle.NumEmptySquares
  fullName: SudokuSpice.IReadOnlyPuzzle.NumEmptySquares
- uid: SudokuSpice.IReadOnlyPuzzle.NumSetSquares
  commentId: P:SudokuSpice.IReadOnlyPuzzle.NumSetSquares
  parent: SudokuSpice.IReadOnlyPuzzle
  name: NumSetSquares
  nameWithType: IReadOnlyPuzzle.NumSetSquares
  fullName: SudokuSpice.IReadOnlyPuzzle.NumSetSquares
- uid: SudokuSpice.IReadOnlyPuzzle.AllPossibleValuesSpan
  commentId: P:SudokuSpice.IReadOnlyPuzzle.AllPossibleValuesSpan
  parent: SudokuSpice.IReadOnlyPuzzle
  name: AllPossibleValuesSpan
  nameWithType: IReadOnlyPuzzle.AllPossibleValuesSpan
  fullName: SudokuSpice.IReadOnlyPuzzle.AllPossibleValuesSpan
- uid: SudokuSpice.IReadOnlyPuzzle.Item(System.Int32,System.Int32)
  commentId: P:SudokuSpice.IReadOnlyPuzzle.Item(System.Int32,System.Int32)
  parent: SudokuSpice.IReadOnlyPuzzle
  isExternal: true
  name: Item[Int32, Int32]
  nameWithType: IReadOnlyPuzzle.Item[Int32, Int32]
  fullName: SudokuSpice.IReadOnlyPuzzle.Item[System.Int32, System.Int32]
  nameWithType.vb: IReadOnlyPuzzle.Item(Int32, Int32)
  fullName.vb: SudokuSpice.IReadOnlyPuzzle.Item(System.Int32, System.Int32)
  name.vb: Item(Int32, Int32)
  spec.csharp:
  - uid: SudokuSpice.IReadOnlyPuzzle.Item(System.Int32,System.Int32)
    name: Item
    nameWithType: IReadOnlyPuzzle.Item
    fullName: SudokuSpice.IReadOnlyPuzzle.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SudokuSpice.IReadOnlyPuzzle.Item(System.Int32,System.Int32)
    name: Item
    nameWithType: IReadOnlyPuzzle.Item
    fullName: SudokuSpice.IReadOnlyPuzzle.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SudokuSpice.IReadOnlyPuzzle.Item(SudokuSpice.Coordinate@)
  commentId: P:SudokuSpice.IReadOnlyPuzzle.Item(SudokuSpice.Coordinate@)
  parent: SudokuSpice.IReadOnlyPuzzle
  name: Item[Coordinate]
  nameWithType: IReadOnlyPuzzle.Item[Coordinate]
  fullName: SudokuSpice.IReadOnlyPuzzle.Item[SudokuSpice.Coordinate]
  nameWithType.vb: IReadOnlyPuzzle.Item(Coordinate)
  fullName.vb: SudokuSpice.IReadOnlyPuzzle.Item(SudokuSpice.Coordinate)
  name.vb: Item(Coordinate)
  spec.csharp:
  - uid: SudokuSpice.IReadOnlyPuzzle.Item(SudokuSpice.Coordinate@)
    name: Item
    nameWithType: IReadOnlyPuzzle.Item
    fullName: SudokuSpice.IReadOnlyPuzzle.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: SudokuSpice.Coordinate
    name: Coordinate
    nameWithType: Coordinate
    fullName: SudokuSpice.Coordinate
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SudokuSpice.IReadOnlyPuzzle.Item(SudokuSpice.Coordinate@)
    name: Item
    nameWithType: IReadOnlyPuzzle.Item
    fullName: SudokuSpice.IReadOnlyPuzzle.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: SudokuSpice.Coordinate
    name: Coordinate
    nameWithType: Coordinate
    fullName: SudokuSpice.Coordinate
  - name: )
    nameWithType: )
    fullName: )
- uid: SudokuSpice.IReadOnlyPuzzle.GetUnsetCoords
  commentId: M:SudokuSpice.IReadOnlyPuzzle.GetUnsetCoords
  parent: SudokuSpice.IReadOnlyPuzzle
  name: GetUnsetCoords()
  nameWithType: IReadOnlyPuzzle.GetUnsetCoords()
  fullName: SudokuSpice.IReadOnlyPuzzle.GetUnsetCoords()
  spec.csharp:
  - uid: SudokuSpice.IReadOnlyPuzzle.GetUnsetCoords
    name: GetUnsetCoords
    nameWithType: IReadOnlyPuzzle.GetUnsetCoords
    fullName: SudokuSpice.IReadOnlyPuzzle.GetUnsetCoords
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SudokuSpice.IReadOnlyPuzzle.GetUnsetCoords
    name: GetUnsetCoords
    nameWithType: IReadOnlyPuzzle.GetUnsetCoords
    fullName: SudokuSpice.IReadOnlyPuzzle.GetUnsetCoords
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SudokuSpice.RuleBased.IReadOnlyPossibleValues.AllPossibleValues
  commentId: P:SudokuSpice.RuleBased.IReadOnlyPossibleValues.AllPossibleValues
  parent: SudokuSpice.RuleBased.IReadOnlyPossibleValues
  name: AllPossibleValues
  nameWithType: IReadOnlyPossibleValues.AllPossibleValues
  fullName: SudokuSpice.RuleBased.IReadOnlyPossibleValues.AllPossibleValues
- uid: SudokuSpice.RuleBased.IReadOnlyPossibleValues.GetPossibleValues(SudokuSpice.Coordinate@)
  commentId: M:SudokuSpice.RuleBased.IReadOnlyPossibleValues.GetPossibleValues(SudokuSpice.Coordinate@)
  parent: SudokuSpice.RuleBased.IReadOnlyPossibleValues
  name: GetPossibleValues(Coordinate)
  nameWithType: IReadOnlyPossibleValues.GetPossibleValues(Coordinate)
  fullName: SudokuSpice.RuleBased.IReadOnlyPossibleValues.GetPossibleValues(SudokuSpice.Coordinate)
  spec.csharp:
  - uid: SudokuSpice.RuleBased.IReadOnlyPossibleValues.GetPossibleValues(SudokuSpice.Coordinate@)
    name: GetPossibleValues
    nameWithType: IReadOnlyPossibleValues.GetPossibleValues
    fullName: SudokuSpice.RuleBased.IReadOnlyPossibleValues.GetPossibleValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: SudokuSpice.Coordinate
    name: Coordinate
    nameWithType: Coordinate
    fullName: SudokuSpice.Coordinate
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SudokuSpice.RuleBased.IReadOnlyPossibleValues.GetPossibleValues(SudokuSpice.Coordinate@)
    name: GetPossibleValues
    nameWithType: IReadOnlyPossibleValues.GetPossibleValues
    fullName: SudokuSpice.RuleBased.IReadOnlyPossibleValues.GetPossibleValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: SudokuSpice.Coordinate
    name: Coordinate
    nameWithType: Coordinate
    fullName: SudokuSpice.Coordinate
  - name: )
    nameWithType: )
    fullName: )
- uid: SudokuSpice.IReadOnlyPuzzle
  commentId: T:SudokuSpice.IReadOnlyPuzzle
  parent: SudokuSpice
  name: IReadOnlyPuzzle
  nameWithType: IReadOnlyPuzzle
  fullName: SudokuSpice.IReadOnlyPuzzle
- uid: SudokuSpice.RuleBased.IReadOnlyPossibleValues
  commentId: T:SudokuSpice.RuleBased.IReadOnlyPossibleValues
  parent: SudokuSpice.RuleBased
  name: IReadOnlyPossibleValues
  nameWithType: IReadOnlyPossibleValues
  fullName: SudokuSpice.RuleBased.IReadOnlyPossibleValues
- uid: SudokuSpice
  commentId: N:SudokuSpice
  name: SudokuSpice
  nameWithType: SudokuSpice
  fullName: SudokuSpice
