### YamlMime:ManagedReference
items:
- uid: SudokuSpice.Matrices
  commentId: T:SudokuSpice.Matrices
  id: Matrices
  parent: SudokuSpice
  children:
  - SudokuSpice.Matrices.Copy2D(System.Nullable{System.Int32}[][])
  - SudokuSpice.Matrices.CopyToJagged2D(System.Nullable{System.Int32}[0:,0:])
  langs:
  - csharp
  - vb
  name: Matrices
  nameWithType: Matrices
  fullName: SudokuSpice.Matrices
  type: Class
  source:
    remote:
      path: SudokuSpice/Matrices.cs
      branch: flexible-constraints
      repo: https://github.com/MorganR/SudokuSpice.git
    id: Matrices
    path: ../SudokuSpice/Matrices.cs
    startLine: 5
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice
  syntax:
    content: public static class Matrices
    content.vb: Public Module Matrices
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SudokuSpice.Matrices.CopyToJagged2D(System.Nullable{System.Int32}[0:,0:])
  commentId: M:SudokuSpice.Matrices.CopyToJagged2D(System.Nullable{System.Int32}[0:,0:])
  id: CopyToJagged2D(System.Nullable{System.Int32}[0:,0:])
  isExtensionMethod: true
  parent: SudokuSpice.Matrices
  langs:
  - csharp
  - vb
  name: CopyToJagged2D(Nullable<Int32>[,])
  nameWithType: Matrices.CopyToJagged2D(Nullable<Int32>[,])
  fullName: SudokuSpice.Matrices.CopyToJagged2D(System.Nullable<System.Int32>[,])
  type: Method
  source:
    remote:
      path: SudokuSpice/Matrices.cs
      branch: flexible-constraints
      repo: https://github.com/MorganR/SudokuSpice.git
    id: CopyToJagged2D
    path: ../SudokuSpice/Matrices.cs
    startLine: 7
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice
  syntax:
    content: public static int? [][] CopyToJagged2D(this int? [, ] matrix)
    parameters:
    - id: matrix
      type: System.Nullable{System.Int32}[,]
    return:
      type: System.Nullable{System.Int32}[][]
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CopyToJagged2D(matrix As Integer?(,)) As Integer?()()
  overload: SudokuSpice.Matrices.CopyToJagged2D*
  nameWithType.vb: Matrices.CopyToJagged2D(Nullable(Of Int32)(,))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SudokuSpice.Matrices.CopyToJagged2D(System.Nullable(Of System.Int32)(,))
  name.vb: CopyToJagged2D(Nullable(Of Int32)(,))
- uid: SudokuSpice.Matrices.Copy2D(System.Nullable{System.Int32}[][])
  commentId: M:SudokuSpice.Matrices.Copy2D(System.Nullable{System.Int32}[][])
  id: Copy2D(System.Nullable{System.Int32}[][])
  isExtensionMethod: true
  parent: SudokuSpice.Matrices
  langs:
  - csharp
  - vb
  name: Copy2D(Nullable<Int32>[][])
  nameWithType: Matrices.Copy2D(Nullable<Int32>[][])
  fullName: SudokuSpice.Matrices.Copy2D(System.Nullable<System.Int32>[][])
  type: Method
  source:
    remote:
      path: SudokuSpice/Matrices.cs
      branch: flexible-constraints
      repo: https://github.com/MorganR/SudokuSpice.git
    id: Copy2D
    path: ../SudokuSpice/Matrices.cs
    startLine: 24
  assemblies:
  - SudokuSpice
  namespace: SudokuSpice
  syntax:
    content: public static int? [][] Copy2D(this int? [][] matrix)
    parameters:
    - id: matrix
      type: System.Nullable{System.Int32}[][]
    return:
      type: System.Nullable{System.Int32}[][]
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Copy2D(matrix As Integer?()()) As Integer?()()
  overload: SudokuSpice.Matrices.Copy2D*
  nameWithType.vb: Matrices.Copy2D(Nullable(Of Int32)()())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SudokuSpice.Matrices.Copy2D(System.Nullable(Of System.Int32)()())
  name.vb: Copy2D(Nullable(Of Int32)()())
references:
- uid: SudokuSpice
  commentId: N:SudokuSpice
  name: SudokuSpice
  nameWithType: SudokuSpice
  fullName: SudokuSpice
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SudokuSpice.Matrices.CopyToJagged2D*
  commentId: Overload:SudokuSpice.Matrices.CopyToJagged2D
  name: CopyToJagged2D
  nameWithType: Matrices.CopyToJagged2D
  fullName: SudokuSpice.Matrices.CopyToJagged2D
- uid: System.Nullable{System.Int32}[,]
  isExternal: true
  name: Nullable<Int32>[,]
  nameWithType: Nullable<Int32>[,]
  fullName: System.Nullable<System.Int32>[,]
  nameWithType.vb: Nullable(Of Int32)(,)
  fullName.vb: System.Nullable(Of System.Int32)(,)
  name.vb: Nullable(Of Int32)(,)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[,]'
    nameWithType: '[,]'
    fullName: '[,]'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: (,)
    nameWithType: (,)
    fullName: (,)
- uid: System.Nullable{System.Int32}[][]
  isExternal: true
  name: Nullable<Int32>[][]
  nameWithType: Nullable<Int32>[][]
  fullName: System.Nullable<System.Int32>[][]
  nameWithType.vb: Nullable(Of Int32)()()
  fullName.vb: System.Nullable(Of System.Int32)()()
  name.vb: Nullable(Of Int32)()()
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SudokuSpice.Matrices.Copy2D*
  commentId: Overload:SudokuSpice.Matrices.Copy2D
  name: Copy2D
  nameWithType: Matrices.Copy2D
  fullName: SudokuSpice.Matrices.Copy2D
