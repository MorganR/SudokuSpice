### YamlMime:XRefMap
sorted: true
references:
- uid: SudokuSpice
  name: SudokuSpice
  href: api/SudokuSpice.html
  commentId: N:SudokuSpice
  fullName: SudokuSpice
  nameWithType: SudokuSpice
- uid: SudokuSpice.ConstraintBasedGenerator`1
  name: ConstraintBasedGenerator<TPuzzle>
  href: api/SudokuSpice.ConstraintBasedGenerator-1.html
  commentId: T:SudokuSpice.ConstraintBasedGenerator`1
  name.vb: ConstraintBasedGenerator(Of TPuzzle)
  fullName: SudokuSpice.ConstraintBasedGenerator<TPuzzle>
  fullName.vb: SudokuSpice.ConstraintBasedGenerator(Of TPuzzle)
  nameWithType: ConstraintBasedGenerator<TPuzzle>
  nameWithType.vb: ConstraintBasedGenerator(Of TPuzzle)
- uid: SudokuSpice.ConstraintBasedGenerator`1.#ctor(System.Func{`0},System.Collections.Generic.IReadOnlyList{SudokuSpice.Constraints.IConstraint{`0}})
  name: ConstraintBasedGenerator(Func<TPuzzle>, IReadOnlyList<IConstraint<TPuzzle>>)
  href: api/SudokuSpice.ConstraintBasedGenerator-1.html#SudokuSpice_ConstraintBasedGenerator_1__ctor_System_Func__0__System_Collections_Generic_IReadOnlyList_SudokuSpice_Constraints_IConstraint__0___
  commentId: M:SudokuSpice.ConstraintBasedGenerator`1.#ctor(System.Func{`0},System.Collections.Generic.IReadOnlyList{SudokuSpice.Constraints.IConstraint{`0}})
  name.vb: ConstraintBasedGenerator(Func(Of TPuzzle), IReadOnlyList(Of IConstraint(Of TPuzzle)))
  fullName: SudokuSpice.ConstraintBasedGenerator<TPuzzle>.ConstraintBasedGenerator(System.Func<TPuzzle>, System.Collections.Generic.IReadOnlyList<SudokuSpice.Constraints.IConstraint<TPuzzle>>)
  fullName.vb: SudokuSpice.ConstraintBasedGenerator(Of TPuzzle).ConstraintBasedGenerator(System.Func(Of TPuzzle), System.Collections.Generic.IReadOnlyList(Of SudokuSpice.Constraints.IConstraint(Of TPuzzle)))
  nameWithType: ConstraintBasedGenerator<TPuzzle>.ConstraintBasedGenerator(Func<TPuzzle>, IReadOnlyList<IConstraint<TPuzzle>>)
  nameWithType.vb: ConstraintBasedGenerator(Of TPuzzle).ConstraintBasedGenerator(Func(Of TPuzzle), IReadOnlyList(Of IConstraint(Of TPuzzle)))
- uid: SudokuSpice.ConstraintBasedGenerator`1.#ctor*
  name: ConstraintBasedGenerator
  href: api/SudokuSpice.ConstraintBasedGenerator-1.html#SudokuSpice_ConstraintBasedGenerator_1__ctor_
  commentId: Overload:SudokuSpice.ConstraintBasedGenerator`1.#ctor
  isSpec: "True"
  fullName: SudokuSpice.ConstraintBasedGenerator<TPuzzle>.ConstraintBasedGenerator
  fullName.vb: SudokuSpice.ConstraintBasedGenerator(Of TPuzzle).ConstraintBasedGenerator
  nameWithType: ConstraintBasedGenerator<TPuzzle>.ConstraintBasedGenerator
  nameWithType.vb: ConstraintBasedGenerator(Of TPuzzle).ConstraintBasedGenerator
- uid: SudokuSpice.ConstraintBasedGenerator`1.Generate(System.Int32,System.TimeSpan)
  name: Generate(Int32, TimeSpan)
  href: api/SudokuSpice.ConstraintBasedGenerator-1.html#SudokuSpice_ConstraintBasedGenerator_1_Generate_System_Int32_System_TimeSpan_
  commentId: M:SudokuSpice.ConstraintBasedGenerator`1.Generate(System.Int32,System.TimeSpan)
  fullName: SudokuSpice.ConstraintBasedGenerator<TPuzzle>.Generate(System.Int32, System.TimeSpan)
  fullName.vb: SudokuSpice.ConstraintBasedGenerator(Of TPuzzle).Generate(System.Int32, System.TimeSpan)
  nameWithType: ConstraintBasedGenerator<TPuzzle>.Generate(Int32, TimeSpan)
  nameWithType.vb: ConstraintBasedGenerator(Of TPuzzle).Generate(Int32, TimeSpan)
- uid: SudokuSpice.ConstraintBasedGenerator`1.Generate*
  name: Generate
  href: api/SudokuSpice.ConstraintBasedGenerator-1.html#SudokuSpice_ConstraintBasedGenerator_1_Generate_
  commentId: Overload:SudokuSpice.ConstraintBasedGenerator`1.Generate
  isSpec: "True"
  fullName: SudokuSpice.ConstraintBasedGenerator<TPuzzle>.Generate
  fullName.vb: SudokuSpice.ConstraintBasedGenerator(Of TPuzzle).Generate
  nameWithType: ConstraintBasedGenerator<TPuzzle>.Generate
  nameWithType.vb: ConstraintBasedGenerator(Of TPuzzle).Generate
- uid: SudokuSpice.ConstraintBasedSolver`1
  name: ConstraintBasedSolver<TPuzzle>
  href: api/SudokuSpice.ConstraintBasedSolver-1.html
  commentId: T:SudokuSpice.ConstraintBasedSolver`1
  name.vb: ConstraintBasedSolver(Of TPuzzle)
  fullName: SudokuSpice.ConstraintBasedSolver<TPuzzle>
  fullName.vb: SudokuSpice.ConstraintBasedSolver(Of TPuzzle)
  nameWithType: ConstraintBasedSolver<TPuzzle>
  nameWithType.vb: ConstraintBasedSolver(Of TPuzzle)
- uid: SudokuSpice.ConstraintBasedSolver`1.#ctor(System.Collections.Generic.IReadOnlyList{SudokuSpice.Constraints.IConstraint{`0}})
  name: ConstraintBasedSolver(IReadOnlyList<IConstraint<TPuzzle>>)
  href: api/SudokuSpice.ConstraintBasedSolver-1.html#SudokuSpice_ConstraintBasedSolver_1__ctor_System_Collections_Generic_IReadOnlyList_SudokuSpice_Constraints_IConstraint__0___
  commentId: M:SudokuSpice.ConstraintBasedSolver`1.#ctor(System.Collections.Generic.IReadOnlyList{SudokuSpice.Constraints.IConstraint{`0}})
  name.vb: ConstraintBasedSolver(IReadOnlyList(Of IConstraint(Of TPuzzle)))
  fullName: SudokuSpice.ConstraintBasedSolver<TPuzzle>.ConstraintBasedSolver(System.Collections.Generic.IReadOnlyList<SudokuSpice.Constraints.IConstraint<TPuzzle>>)
  fullName.vb: SudokuSpice.ConstraintBasedSolver(Of TPuzzle).ConstraintBasedSolver(System.Collections.Generic.IReadOnlyList(Of SudokuSpice.Constraints.IConstraint(Of TPuzzle)))
  nameWithType: ConstraintBasedSolver<TPuzzle>.ConstraintBasedSolver(IReadOnlyList<IConstraint<TPuzzle>>)
  nameWithType.vb: ConstraintBasedSolver(Of TPuzzle).ConstraintBasedSolver(IReadOnlyList(Of IConstraint(Of TPuzzle)))
- uid: SudokuSpice.ConstraintBasedSolver`1.#ctor*
  name: ConstraintBasedSolver
  href: api/SudokuSpice.ConstraintBasedSolver-1.html#SudokuSpice_ConstraintBasedSolver_1__ctor_
  commentId: Overload:SudokuSpice.ConstraintBasedSolver`1.#ctor
  isSpec: "True"
  fullName: SudokuSpice.ConstraintBasedSolver<TPuzzle>.ConstraintBasedSolver
  fullName.vb: SudokuSpice.ConstraintBasedSolver(Of TPuzzle).ConstraintBasedSolver
  nameWithType: ConstraintBasedSolver<TPuzzle>.ConstraintBasedSolver
  nameWithType.vb: ConstraintBasedSolver(Of TPuzzle).ConstraintBasedSolver
- uid: SudokuSpice.ConstraintBasedSolver`1.GetStatsForAllSolutions(`0)
  name: GetStatsForAllSolutions(TPuzzle)
  href: api/SudokuSpice.ConstraintBasedSolver-1.html#SudokuSpice_ConstraintBasedSolver_1_GetStatsForAllSolutions__0_
  commentId: M:SudokuSpice.ConstraintBasedSolver`1.GetStatsForAllSolutions(`0)
  fullName: SudokuSpice.ConstraintBasedSolver<TPuzzle>.GetStatsForAllSolutions(TPuzzle)
  fullName.vb: SudokuSpice.ConstraintBasedSolver(Of TPuzzle).GetStatsForAllSolutions(TPuzzle)
  nameWithType: ConstraintBasedSolver<TPuzzle>.GetStatsForAllSolutions(TPuzzle)
  nameWithType.vb: ConstraintBasedSolver(Of TPuzzle).GetStatsForAllSolutions(TPuzzle)
- uid: SudokuSpice.ConstraintBasedSolver`1.GetStatsForAllSolutions*
  name: GetStatsForAllSolutions
  href: api/SudokuSpice.ConstraintBasedSolver-1.html#SudokuSpice_ConstraintBasedSolver_1_GetStatsForAllSolutions_
  commentId: Overload:SudokuSpice.ConstraintBasedSolver`1.GetStatsForAllSolutions
  isSpec: "True"
  fullName: SudokuSpice.ConstraintBasedSolver<TPuzzle>.GetStatsForAllSolutions
  fullName.vb: SudokuSpice.ConstraintBasedSolver(Of TPuzzle).GetStatsForAllSolutions
  nameWithType: ConstraintBasedSolver<TPuzzle>.GetStatsForAllSolutions
  nameWithType.vb: ConstraintBasedSolver(Of TPuzzle).GetStatsForAllSolutions
- uid: SudokuSpice.ConstraintBasedSolver`1.Solve(`0)
  name: Solve(TPuzzle)
  href: api/SudokuSpice.ConstraintBasedSolver-1.html#SudokuSpice_ConstraintBasedSolver_1_Solve__0_
  commentId: M:SudokuSpice.ConstraintBasedSolver`1.Solve(`0)
  fullName: SudokuSpice.ConstraintBasedSolver<TPuzzle>.Solve(TPuzzle)
  fullName.vb: SudokuSpice.ConstraintBasedSolver(Of TPuzzle).Solve(TPuzzle)
  nameWithType: ConstraintBasedSolver<TPuzzle>.Solve(TPuzzle)
  nameWithType.vb: ConstraintBasedSolver(Of TPuzzle).Solve(TPuzzle)
- uid: SudokuSpice.ConstraintBasedSolver`1.Solve*
  name: Solve
  href: api/SudokuSpice.ConstraintBasedSolver-1.html#SudokuSpice_ConstraintBasedSolver_1_Solve_
  commentId: Overload:SudokuSpice.ConstraintBasedSolver`1.Solve
  isSpec: "True"
  fullName: SudokuSpice.ConstraintBasedSolver<TPuzzle>.Solve
  fullName.vb: SudokuSpice.ConstraintBasedSolver(Of TPuzzle).Solve
  nameWithType: ConstraintBasedSolver<TPuzzle>.Solve
  nameWithType.vb: ConstraintBasedSolver(Of TPuzzle).Solve
- uid: SudokuSpice.ConstraintBasedSolver`1.SolveRandomly(`0)
  name: SolveRandomly(TPuzzle)
  href: api/SudokuSpice.ConstraintBasedSolver-1.html#SudokuSpice_ConstraintBasedSolver_1_SolveRandomly__0_
  commentId: M:SudokuSpice.ConstraintBasedSolver`1.SolveRandomly(`0)
  fullName: SudokuSpice.ConstraintBasedSolver<TPuzzle>.SolveRandomly(TPuzzle)
  fullName.vb: SudokuSpice.ConstraintBasedSolver(Of TPuzzle).SolveRandomly(TPuzzle)
  nameWithType: ConstraintBasedSolver<TPuzzle>.SolveRandomly(TPuzzle)
  nameWithType.vb: ConstraintBasedSolver(Of TPuzzle).SolveRandomly(TPuzzle)
- uid: SudokuSpice.ConstraintBasedSolver`1.SolveRandomly*
  name: SolveRandomly
  href: api/SudokuSpice.ConstraintBasedSolver-1.html#SudokuSpice_ConstraintBasedSolver_1_SolveRandomly_
  commentId: Overload:SudokuSpice.ConstraintBasedSolver`1.SolveRandomly
  isSpec: "True"
  fullName: SudokuSpice.ConstraintBasedSolver<TPuzzle>.SolveRandomly
  fullName.vb: SudokuSpice.ConstraintBasedSolver(Of TPuzzle).SolveRandomly
  nameWithType: ConstraintBasedSolver<TPuzzle>.SolveRandomly
  nameWithType.vb: ConstraintBasedSolver(Of TPuzzle).SolveRandomly
- uid: SudokuSpice.Constraints
  name: SudokuSpice.Constraints
  href: api/SudokuSpice.Constraints.html
  commentId: N:SudokuSpice.Constraints
  fullName: SudokuSpice.Constraints
  nameWithType: SudokuSpice.Constraints
- uid: SudokuSpice.Constraints.BoxUniquenessConstraint`1
  name: BoxUniquenessConstraint<TPuzzle>
  href: api/SudokuSpice.Constraints.BoxUniquenessConstraint-1.html
  commentId: T:SudokuSpice.Constraints.BoxUniquenessConstraint`1
  name.vb: BoxUniquenessConstraint(Of TPuzzle)
  fullName: SudokuSpice.Constraints.BoxUniquenessConstraint<TPuzzle>
  fullName.vb: SudokuSpice.Constraints.BoxUniquenessConstraint(Of TPuzzle)
  nameWithType: BoxUniquenessConstraint<TPuzzle>
  nameWithType.vb: BoxUniquenessConstraint(Of TPuzzle)
- uid: SudokuSpice.Constraints.BoxUniquenessConstraint`1.Constrain(`0,SudokuSpice.Data.ExactCoverMatrix{`0})
  name: Constrain(TPuzzle, ExactCoverMatrix<TPuzzle>)
  href: api/SudokuSpice.Constraints.BoxUniquenessConstraint-1.html#SudokuSpice_Constraints_BoxUniquenessConstraint_1_Constrain__0_SudokuSpice_Data_ExactCoverMatrix__0__
  commentId: M:SudokuSpice.Constraints.BoxUniquenessConstraint`1.Constrain(`0,SudokuSpice.Data.ExactCoverMatrix{`0})
  name.vb: Constrain(TPuzzle, ExactCoverMatrix(Of TPuzzle))
  fullName: SudokuSpice.Constraints.BoxUniquenessConstraint<TPuzzle>.Constrain(TPuzzle, SudokuSpice.Data.ExactCoverMatrix<TPuzzle>)
  fullName.vb: SudokuSpice.Constraints.BoxUniquenessConstraint(Of TPuzzle).Constrain(TPuzzle, SudokuSpice.Data.ExactCoverMatrix(Of TPuzzle))
  nameWithType: BoxUniquenessConstraint<TPuzzle>.Constrain(TPuzzle, ExactCoverMatrix<TPuzzle>)
  nameWithType.vb: BoxUniquenessConstraint(Of TPuzzle).Constrain(TPuzzle, ExactCoverMatrix(Of TPuzzle))
- uid: SudokuSpice.Constraints.BoxUniquenessConstraint`1.Constrain*
  name: Constrain
  href: api/SudokuSpice.Constraints.BoxUniquenessConstraint-1.html#SudokuSpice_Constraints_BoxUniquenessConstraint_1_Constrain_
  commentId: Overload:SudokuSpice.Constraints.BoxUniquenessConstraint`1.Constrain
  isSpec: "True"
  fullName: SudokuSpice.Constraints.BoxUniquenessConstraint<TPuzzle>.Constrain
  fullName.vb: SudokuSpice.Constraints.BoxUniquenessConstraint(Of TPuzzle).Constrain
  nameWithType: BoxUniquenessConstraint<TPuzzle>.Constrain
  nameWithType.vb: BoxUniquenessConstraint(Of TPuzzle).Constrain
- uid: SudokuSpice.Constraints.ColumnUniquenessConstraint`1
  name: ColumnUniquenessConstraint<TPuzzle>
  href: api/SudokuSpice.Constraints.ColumnUniquenessConstraint-1.html
  commentId: T:SudokuSpice.Constraints.ColumnUniquenessConstraint`1
  name.vb: ColumnUniquenessConstraint(Of TPuzzle)
  fullName: SudokuSpice.Constraints.ColumnUniquenessConstraint<TPuzzle>
  fullName.vb: SudokuSpice.Constraints.ColumnUniquenessConstraint(Of TPuzzle)
  nameWithType: ColumnUniquenessConstraint<TPuzzle>
  nameWithType.vb: ColumnUniquenessConstraint(Of TPuzzle)
- uid: SudokuSpice.Constraints.ColumnUniquenessConstraint`1.Constrain(`0,SudokuSpice.Data.ExactCoverMatrix{`0})
  name: Constrain(TPuzzle, ExactCoverMatrix<TPuzzle>)
  href: api/SudokuSpice.Constraints.ColumnUniquenessConstraint-1.html#SudokuSpice_Constraints_ColumnUniquenessConstraint_1_Constrain__0_SudokuSpice_Data_ExactCoverMatrix__0__
  commentId: M:SudokuSpice.Constraints.ColumnUniquenessConstraint`1.Constrain(`0,SudokuSpice.Data.ExactCoverMatrix{`0})
  name.vb: Constrain(TPuzzle, ExactCoverMatrix(Of TPuzzle))
  fullName: SudokuSpice.Constraints.ColumnUniquenessConstraint<TPuzzle>.Constrain(TPuzzle, SudokuSpice.Data.ExactCoverMatrix<TPuzzle>)
  fullName.vb: SudokuSpice.Constraints.ColumnUniquenessConstraint(Of TPuzzle).Constrain(TPuzzle, SudokuSpice.Data.ExactCoverMatrix(Of TPuzzle))
  nameWithType: ColumnUniquenessConstraint<TPuzzle>.Constrain(TPuzzle, ExactCoverMatrix<TPuzzle>)
  nameWithType.vb: ColumnUniquenessConstraint(Of TPuzzle).Constrain(TPuzzle, ExactCoverMatrix(Of TPuzzle))
- uid: SudokuSpice.Constraints.ColumnUniquenessConstraint`1.Constrain*
  name: Constrain
  href: api/SudokuSpice.Constraints.ColumnUniquenessConstraint-1.html#SudokuSpice_Constraints_ColumnUniquenessConstraint_1_Constrain_
  commentId: Overload:SudokuSpice.Constraints.ColumnUniquenessConstraint`1.Constrain
  isSpec: "True"
  fullName: SudokuSpice.Constraints.ColumnUniquenessConstraint<TPuzzle>.Constrain
  fullName.vb: SudokuSpice.Constraints.ColumnUniquenessConstraint(Of TPuzzle).Constrain
  nameWithType: ColumnUniquenessConstraint<TPuzzle>.Constrain
  nameWithType.vb: ColumnUniquenessConstraint(Of TPuzzle).Constrain
- uid: SudokuSpice.Constraints.ConstraintUtil
  name: ConstraintUtil
  href: api/SudokuSpice.Constraints.ConstraintUtil.html
  commentId: T:SudokuSpice.Constraints.ConstraintUtil
  fullName: SudokuSpice.Constraints.ConstraintUtil
  nameWithType: ConstraintUtil
- uid: SudokuSpice.Constraints.ConstraintUtil.AddConstraintHeadersForValueIndex*
  name: AddConstraintHeadersForValueIndex
  href: api/SudokuSpice.Constraints.ConstraintUtil.html#SudokuSpice_Constraints_ConstraintUtil_AddConstraintHeadersForValueIndex_
  commentId: Overload:SudokuSpice.Constraints.ConstraintUtil.AddConstraintHeadersForValueIndex
  isSpec: "True"
  fullName: SudokuSpice.Constraints.ConstraintUtil.AddConstraintHeadersForValueIndex
  nameWithType: ConstraintUtil.AddConstraintHeadersForValueIndex
- uid: SudokuSpice.Constraints.ConstraintUtil.AddConstraintHeadersForValueIndex``1(System.ReadOnlySpan{SudokuSpice.Data.Square{``0}},System.Int32,SudokuSpice.Data.ExactCoverMatrix{``0})
  name: AddConstraintHeadersForValueIndex<TPuzzle>(ReadOnlySpan<Square<TPuzzle>>, Int32, ExactCoverMatrix<TPuzzle>)
  href: api/SudokuSpice.Constraints.ConstraintUtil.html#SudokuSpice_Constraints_ConstraintUtil_AddConstraintHeadersForValueIndex__1_System_ReadOnlySpan_SudokuSpice_Data_Square___0___System_Int32_SudokuSpice_Data_ExactCoverMatrix___0__
  commentId: M:SudokuSpice.Constraints.ConstraintUtil.AddConstraintHeadersForValueIndex``1(System.ReadOnlySpan{SudokuSpice.Data.Square{``0}},System.Int32,SudokuSpice.Data.ExactCoverMatrix{``0})
  name.vb: AddConstraintHeadersForValueIndex(Of TPuzzle)(ReadOnlySpan(Of Square(Of TPuzzle)), Int32, ExactCoverMatrix(Of TPuzzle))
  fullName: SudokuSpice.Constraints.ConstraintUtil.AddConstraintHeadersForValueIndex<TPuzzle>(System.ReadOnlySpan<SudokuSpice.Data.Square<TPuzzle>>, System.Int32, SudokuSpice.Data.ExactCoverMatrix<TPuzzle>)
  fullName.vb: SudokuSpice.Constraints.ConstraintUtil.AddConstraintHeadersForValueIndex(Of TPuzzle)(System.ReadOnlySpan(Of SudokuSpice.Data.Square(Of TPuzzle)), System.Int32, SudokuSpice.Data.ExactCoverMatrix(Of TPuzzle))
  nameWithType: ConstraintUtil.AddConstraintHeadersForValueIndex<TPuzzle>(ReadOnlySpan<Square<TPuzzle>>, Int32, ExactCoverMatrix<TPuzzle>)
  nameWithType.vb: ConstraintUtil.AddConstraintHeadersForValueIndex(Of TPuzzle)(ReadOnlySpan(Of Square(Of TPuzzle)), Int32, ExactCoverMatrix(Of TPuzzle))
- uid: SudokuSpice.Constraints.ConstraintUtil.CheckForSetValues*
  name: CheckForSetValues
  href: api/SudokuSpice.Constraints.ConstraintUtil.html#SudokuSpice_Constraints_ConstraintUtil_CheckForSetValues_
  commentId: Overload:SudokuSpice.Constraints.ConstraintUtil.CheckForSetValues
  isSpec: "True"
  fullName: SudokuSpice.Constraints.ConstraintUtil.CheckForSetValues
  nameWithType: ConstraintUtil.CheckForSetValues
- uid: SudokuSpice.Constraints.ConstraintUtil.CheckForSetValues``1(``0,SudokuSpice.Data.ExactCoverMatrix{``0},System.ReadOnlySpan{SudokuSpice.Data.Coordinate},System.Span{System.Boolean})
  name: CheckForSetValues<TPuzzle>(TPuzzle, ExactCoverMatrix<TPuzzle>, ReadOnlySpan<Coordinate>, Span<Boolean>)
  href: api/SudokuSpice.Constraints.ConstraintUtil.html#SudokuSpice_Constraints_ConstraintUtil_CheckForSetValues__1___0_SudokuSpice_Data_ExactCoverMatrix___0__System_ReadOnlySpan_SudokuSpice_Data_Coordinate__System_Span_System_Boolean__
  commentId: M:SudokuSpice.Constraints.ConstraintUtil.CheckForSetValues``1(``0,SudokuSpice.Data.ExactCoverMatrix{``0},System.ReadOnlySpan{SudokuSpice.Data.Coordinate},System.Span{System.Boolean})
  name.vb: CheckForSetValues(Of TPuzzle)(TPuzzle, ExactCoverMatrix(Of TPuzzle), ReadOnlySpan(Of Coordinate), Span(Of Boolean))
  fullName: SudokuSpice.Constraints.ConstraintUtil.CheckForSetValues<TPuzzle>(TPuzzle, SudokuSpice.Data.ExactCoverMatrix<TPuzzle>, System.ReadOnlySpan<SudokuSpice.Data.Coordinate>, System.Span<System.Boolean>)
  fullName.vb: SudokuSpice.Constraints.ConstraintUtil.CheckForSetValues(Of TPuzzle)(TPuzzle, SudokuSpice.Data.ExactCoverMatrix(Of TPuzzle), System.ReadOnlySpan(Of SudokuSpice.Data.Coordinate), System.Span(Of System.Boolean))
  nameWithType: ConstraintUtil.CheckForSetValues<TPuzzle>(TPuzzle, ExactCoverMatrix<TPuzzle>, ReadOnlySpan<Coordinate>, Span<Boolean>)
  nameWithType.vb: ConstraintUtil.CheckForSetValues(Of TPuzzle)(TPuzzle, ExactCoverMatrix(Of TPuzzle), ReadOnlySpan(Of Coordinate), Span(Of Boolean))
- uid: SudokuSpice.Constraints.ConstraintUtil.DropPossibleSquaresForValueIndex*
  name: DropPossibleSquaresForValueIndex
  href: api/SudokuSpice.Constraints.ConstraintUtil.html#SudokuSpice_Constraints_ConstraintUtil_DropPossibleSquaresForValueIndex_
  commentId: Overload:SudokuSpice.Constraints.ConstraintUtil.DropPossibleSquaresForValueIndex
  isSpec: "True"
  fullName: SudokuSpice.Constraints.ConstraintUtil.DropPossibleSquaresForValueIndex
  nameWithType: ConstraintUtil.DropPossibleSquaresForValueIndex
- uid: SudokuSpice.Constraints.ConstraintUtil.DropPossibleSquaresForValueIndex``1(System.ReadOnlySpan{SudokuSpice.Data.Square{``0}},System.Int32,SudokuSpice.Data.ExactCoverMatrix{``0})
  name: DropPossibleSquaresForValueIndex<TPuzzle>(ReadOnlySpan<Square<TPuzzle>>, Int32, ExactCoverMatrix<TPuzzle>)
  href: api/SudokuSpice.Constraints.ConstraintUtil.html#SudokuSpice_Constraints_ConstraintUtil_DropPossibleSquaresForValueIndex__1_System_ReadOnlySpan_SudokuSpice_Data_Square___0___System_Int32_SudokuSpice_Data_ExactCoverMatrix___0__
  commentId: M:SudokuSpice.Constraints.ConstraintUtil.DropPossibleSquaresForValueIndex``1(System.ReadOnlySpan{SudokuSpice.Data.Square{``0}},System.Int32,SudokuSpice.Data.ExactCoverMatrix{``0})
  name.vb: DropPossibleSquaresForValueIndex(Of TPuzzle)(ReadOnlySpan(Of Square(Of TPuzzle)), Int32, ExactCoverMatrix(Of TPuzzle))
  fullName: SudokuSpice.Constraints.ConstraintUtil.DropPossibleSquaresForValueIndex<TPuzzle>(System.ReadOnlySpan<SudokuSpice.Data.Square<TPuzzle>>, System.Int32, SudokuSpice.Data.ExactCoverMatrix<TPuzzle>)
  fullName.vb: SudokuSpice.Constraints.ConstraintUtil.DropPossibleSquaresForValueIndex(Of TPuzzle)(System.ReadOnlySpan(Of SudokuSpice.Data.Square(Of TPuzzle)), System.Int32, SudokuSpice.Data.ExactCoverMatrix(Of TPuzzle))
  nameWithType: ConstraintUtil.DropPossibleSquaresForValueIndex<TPuzzle>(ReadOnlySpan<Square<TPuzzle>>, Int32, ExactCoverMatrix<TPuzzle>)
  nameWithType.vb: ConstraintUtil.DropPossibleSquaresForValueIndex(Of TPuzzle)(ReadOnlySpan(Of Square(Of TPuzzle)), Int32, ExactCoverMatrix(Of TPuzzle))
- uid: SudokuSpice.Constraints.ConstraintUtil.ImplementUniquenessConstraintForSquares*
  name: ImplementUniquenessConstraintForSquares
  href: api/SudokuSpice.Constraints.ConstraintUtil.html#SudokuSpice_Constraints_ConstraintUtil_ImplementUniquenessConstraintForSquares_
  commentId: Overload:SudokuSpice.Constraints.ConstraintUtil.ImplementUniquenessConstraintForSquares
  isSpec: "True"
  fullName: SudokuSpice.Constraints.ConstraintUtil.ImplementUniquenessConstraintForSquares
  nameWithType: ConstraintUtil.ImplementUniquenessConstraintForSquares
- uid: SudokuSpice.Constraints.ConstraintUtil.ImplementUniquenessConstraintForSquares``1(``0,System.ReadOnlySpan{SudokuSpice.Data.Coordinate},SudokuSpice.Data.ExactCoverMatrix{``0})
  name: ImplementUniquenessConstraintForSquares<TPuzzle>(TPuzzle, ReadOnlySpan<Coordinate>, ExactCoverMatrix<TPuzzle>)
  href: api/SudokuSpice.Constraints.ConstraintUtil.html#SudokuSpice_Constraints_ConstraintUtil_ImplementUniquenessConstraintForSquares__1___0_System_ReadOnlySpan_SudokuSpice_Data_Coordinate__SudokuSpice_Data_ExactCoverMatrix___0__
  commentId: M:SudokuSpice.Constraints.ConstraintUtil.ImplementUniquenessConstraintForSquares``1(``0,System.ReadOnlySpan{SudokuSpice.Data.Coordinate},SudokuSpice.Data.ExactCoverMatrix{``0})
  name.vb: ImplementUniquenessConstraintForSquares(Of TPuzzle)(TPuzzle, ReadOnlySpan(Of Coordinate), ExactCoverMatrix(Of TPuzzle))
  fullName: SudokuSpice.Constraints.ConstraintUtil.ImplementUniquenessConstraintForSquares<TPuzzle>(TPuzzle, System.ReadOnlySpan<SudokuSpice.Data.Coordinate>, SudokuSpice.Data.ExactCoverMatrix<TPuzzle>)
  fullName.vb: SudokuSpice.Constraints.ConstraintUtil.ImplementUniquenessConstraintForSquares(Of TPuzzle)(TPuzzle, System.ReadOnlySpan(Of SudokuSpice.Data.Coordinate), SudokuSpice.Data.ExactCoverMatrix(Of TPuzzle))
  nameWithType: ConstraintUtil.ImplementUniquenessConstraintForSquares<TPuzzle>(TPuzzle, ReadOnlySpan<Coordinate>, ExactCoverMatrix<TPuzzle>)
  nameWithType.vb: ConstraintUtil.ImplementUniquenessConstraintForSquares(Of TPuzzle)(TPuzzle, ReadOnlySpan(Of Coordinate), ExactCoverMatrix(Of TPuzzle))
- uid: SudokuSpice.Constraints.DiagonalUniquenessConstraint`1
  name: DiagonalUniquenessConstraint<TPuzzle>
  href: api/SudokuSpice.Constraints.DiagonalUniquenessConstraint-1.html
  commentId: T:SudokuSpice.Constraints.DiagonalUniquenessConstraint`1
  name.vb: DiagonalUniquenessConstraint(Of TPuzzle)
  fullName: SudokuSpice.Constraints.DiagonalUniquenessConstraint<TPuzzle>
  fullName.vb: SudokuSpice.Constraints.DiagonalUniquenessConstraint(Of TPuzzle)
  nameWithType: DiagonalUniquenessConstraint<TPuzzle>
  nameWithType.vb: DiagonalUniquenessConstraint(Of TPuzzle)
- uid: SudokuSpice.Constraints.DiagonalUniquenessConstraint`1.Constrain(`0,SudokuSpice.Data.ExactCoverMatrix{`0})
  name: Constrain(TPuzzle, ExactCoverMatrix<TPuzzle>)
  href: api/SudokuSpice.Constraints.DiagonalUniquenessConstraint-1.html#SudokuSpice_Constraints_DiagonalUniquenessConstraint_1_Constrain__0_SudokuSpice_Data_ExactCoverMatrix__0__
  commentId: M:SudokuSpice.Constraints.DiagonalUniquenessConstraint`1.Constrain(`0,SudokuSpice.Data.ExactCoverMatrix{`0})
  name.vb: Constrain(TPuzzle, ExactCoverMatrix(Of TPuzzle))
  fullName: SudokuSpice.Constraints.DiagonalUniquenessConstraint<TPuzzle>.Constrain(TPuzzle, SudokuSpice.Data.ExactCoverMatrix<TPuzzle>)
  fullName.vb: SudokuSpice.Constraints.DiagonalUniquenessConstraint(Of TPuzzle).Constrain(TPuzzle, SudokuSpice.Data.ExactCoverMatrix(Of TPuzzle))
  nameWithType: DiagonalUniquenessConstraint<TPuzzle>.Constrain(TPuzzle, ExactCoverMatrix<TPuzzle>)
  nameWithType.vb: DiagonalUniquenessConstraint(Of TPuzzle).Constrain(TPuzzle, ExactCoverMatrix(Of TPuzzle))
- uid: SudokuSpice.Constraints.DiagonalUniquenessConstraint`1.Constrain*
  name: Constrain
  href: api/SudokuSpice.Constraints.DiagonalUniquenessConstraint-1.html#SudokuSpice_Constraints_DiagonalUniquenessConstraint_1_Constrain_
  commentId: Overload:SudokuSpice.Constraints.DiagonalUniquenessConstraint`1.Constrain
  isSpec: "True"
  fullName: SudokuSpice.Constraints.DiagonalUniquenessConstraint<TPuzzle>.Constrain
  fullName.vb: SudokuSpice.Constraints.DiagonalUniquenessConstraint(Of TPuzzle).Constrain
  nameWithType: DiagonalUniquenessConstraint<TPuzzle>.Constrain
  nameWithType.vb: DiagonalUniquenessConstraint(Of TPuzzle).Constrain
- uid: SudokuSpice.Constraints.IConstraint`1
  name: IConstraint<TPuzzle>
  href: api/SudokuSpice.Constraints.IConstraint-1.html
  commentId: T:SudokuSpice.Constraints.IConstraint`1
  name.vb: IConstraint(Of TPuzzle)
  fullName: SudokuSpice.Constraints.IConstraint<TPuzzle>
  fullName.vb: SudokuSpice.Constraints.IConstraint(Of TPuzzle)
  nameWithType: IConstraint<TPuzzle>
  nameWithType.vb: IConstraint(Of TPuzzle)
- uid: SudokuSpice.Constraints.IConstraint`1.Constrain(`0,SudokuSpice.Data.ExactCoverMatrix{`0})
  name: Constrain(TPuzzle, ExactCoverMatrix<TPuzzle>)
  href: api/SudokuSpice.Constraints.IConstraint-1.html#SudokuSpice_Constraints_IConstraint_1_Constrain__0_SudokuSpice_Data_ExactCoverMatrix__0__
  commentId: M:SudokuSpice.Constraints.IConstraint`1.Constrain(`0,SudokuSpice.Data.ExactCoverMatrix{`0})
  name.vb: Constrain(TPuzzle, ExactCoverMatrix(Of TPuzzle))
  fullName: SudokuSpice.Constraints.IConstraint<TPuzzle>.Constrain(TPuzzle, SudokuSpice.Data.ExactCoverMatrix<TPuzzle>)
  fullName.vb: SudokuSpice.Constraints.IConstraint(Of TPuzzle).Constrain(TPuzzle, SudokuSpice.Data.ExactCoverMatrix(Of TPuzzle))
  nameWithType: IConstraint<TPuzzle>.Constrain(TPuzzle, ExactCoverMatrix<TPuzzle>)
  nameWithType.vb: IConstraint(Of TPuzzle).Constrain(TPuzzle, ExactCoverMatrix(Of TPuzzle))
- uid: SudokuSpice.Constraints.IConstraint`1.Constrain*
  name: Constrain
  href: api/SudokuSpice.Constraints.IConstraint-1.html#SudokuSpice_Constraints_IConstraint_1_Constrain_
  commentId: Overload:SudokuSpice.Constraints.IConstraint`1.Constrain
  isSpec: "True"
  fullName: SudokuSpice.Constraints.IConstraint<TPuzzle>.Constrain
  fullName.vb: SudokuSpice.Constraints.IConstraint(Of TPuzzle).Constrain
  nameWithType: IConstraint<TPuzzle>.Constrain
  nameWithType.vb: IConstraint(Of TPuzzle).Constrain
- uid: SudokuSpice.Constraints.RowUniquenessConstraint`1
  name: RowUniquenessConstraint<TPuzzle>
  href: api/SudokuSpice.Constraints.RowUniquenessConstraint-1.html
  commentId: T:SudokuSpice.Constraints.RowUniquenessConstraint`1
  name.vb: RowUniquenessConstraint(Of TPuzzle)
  fullName: SudokuSpice.Constraints.RowUniquenessConstraint<TPuzzle>
  fullName.vb: SudokuSpice.Constraints.RowUniquenessConstraint(Of TPuzzle)
  nameWithType: RowUniquenessConstraint<TPuzzle>
  nameWithType.vb: RowUniquenessConstraint(Of TPuzzle)
- uid: SudokuSpice.Constraints.RowUniquenessConstraint`1.Constrain(`0,SudokuSpice.Data.ExactCoverMatrix{`0})
  name: Constrain(TPuzzle, ExactCoverMatrix<TPuzzle>)
  href: api/SudokuSpice.Constraints.RowUniquenessConstraint-1.html#SudokuSpice_Constraints_RowUniquenessConstraint_1_Constrain__0_SudokuSpice_Data_ExactCoverMatrix__0__
  commentId: M:SudokuSpice.Constraints.RowUniquenessConstraint`1.Constrain(`0,SudokuSpice.Data.ExactCoverMatrix{`0})
  name.vb: Constrain(TPuzzle, ExactCoverMatrix(Of TPuzzle))
  fullName: SudokuSpice.Constraints.RowUniquenessConstraint<TPuzzle>.Constrain(TPuzzle, SudokuSpice.Data.ExactCoverMatrix<TPuzzle>)
  fullName.vb: SudokuSpice.Constraints.RowUniquenessConstraint(Of TPuzzle).Constrain(TPuzzle, SudokuSpice.Data.ExactCoverMatrix(Of TPuzzle))
  nameWithType: RowUniquenessConstraint<TPuzzle>.Constrain(TPuzzle, ExactCoverMatrix<TPuzzle>)
  nameWithType.vb: RowUniquenessConstraint(Of TPuzzle).Constrain(TPuzzle, ExactCoverMatrix(Of TPuzzle))
- uid: SudokuSpice.Constraints.RowUniquenessConstraint`1.Constrain*
  name: Constrain
  href: api/SudokuSpice.Constraints.RowUniquenessConstraint-1.html#SudokuSpice_Constraints_RowUniquenessConstraint_1_Constrain_
  commentId: Overload:SudokuSpice.Constraints.RowUniquenessConstraint`1.Constrain
  isSpec: "True"
  fullName: SudokuSpice.Constraints.RowUniquenessConstraint<TPuzzle>.Constrain
  fullName.vb: SudokuSpice.Constraints.RowUniquenessConstraint(Of TPuzzle).Constrain
  nameWithType: RowUniquenessConstraint<TPuzzle>.Constrain
  nameWithType.vb: RowUniquenessConstraint(Of TPuzzle).Constrain
- uid: SudokuSpice.Data
  name: SudokuSpice.Data
  href: api/SudokuSpice.Data.html
  commentId: N:SudokuSpice.Data
  fullName: SudokuSpice.Data
  nameWithType: SudokuSpice.Data
- uid: SudokuSpice.Data.BitVector
  name: BitVector
  href: api/SudokuSpice.Data.BitVector.html
  commentId: T:SudokuSpice.Data.BitVector
  fullName: SudokuSpice.Data.BitVector
  nameWithType: BitVector
- uid: SudokuSpice.Data.BitVector.#ctor(System.UInt32)
  name: BitVector(UInt32)
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector__ctor_System_UInt32_
  commentId: M:SudokuSpice.Data.BitVector.#ctor(System.UInt32)
  fullName: SudokuSpice.Data.BitVector.BitVector(System.UInt32)
  nameWithType: BitVector.BitVector(UInt32)
- uid: SudokuSpice.Data.BitVector.#ctor*
  name: BitVector
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector__ctor_
  commentId: Overload:SudokuSpice.Data.BitVector.#ctor
  isSpec: "True"
  fullName: SudokuSpice.Data.BitVector.BitVector
  nameWithType: BitVector.BitVector
- uid: SudokuSpice.Data.BitVector.Count
  name: Count
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_Count
  commentId: P:SudokuSpice.Data.BitVector.Count
  fullName: SudokuSpice.Data.BitVector.Count
  nameWithType: BitVector.Count
- uid: SudokuSpice.Data.BitVector.Count*
  name: Count
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_Count_
  commentId: Overload:SudokuSpice.Data.BitVector.Count
  isSpec: "True"
  fullName: SudokuSpice.Data.BitVector.Count
  nameWithType: BitVector.Count
- uid: SudokuSpice.Data.BitVector.CreateWithSize(System.Int32)
  name: CreateWithSize(Int32)
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_CreateWithSize_System_Int32_
  commentId: M:SudokuSpice.Data.BitVector.CreateWithSize(System.Int32)
  fullName: SudokuSpice.Data.BitVector.CreateWithSize(System.Int32)
  nameWithType: BitVector.CreateWithSize(Int32)
- uid: SudokuSpice.Data.BitVector.CreateWithSize*
  name: CreateWithSize
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_CreateWithSize_
  commentId: Overload:SudokuSpice.Data.BitVector.CreateWithSize
  isSpec: "True"
  fullName: SudokuSpice.Data.BitVector.CreateWithSize
  nameWithType: BitVector.CreateWithSize
- uid: SudokuSpice.Data.BitVector.Data
  name: Data
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_Data
  commentId: P:SudokuSpice.Data.BitVector.Data
  fullName: SudokuSpice.Data.BitVector.Data
  nameWithType: BitVector.Data
- uid: SudokuSpice.Data.BitVector.Data*
  name: Data
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_Data_
  commentId: Overload:SudokuSpice.Data.BitVector.Data
  isSpec: "True"
  fullName: SudokuSpice.Data.BitVector.Data
  nameWithType: BitVector.Data
- uid: SudokuSpice.Data.BitVector.Equals(SudokuSpice.Data.BitVector)
  name: Equals(BitVector)
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_Equals_SudokuSpice_Data_BitVector_
  commentId: M:SudokuSpice.Data.BitVector.Equals(SudokuSpice.Data.BitVector)
  fullName: SudokuSpice.Data.BitVector.Equals(SudokuSpice.Data.BitVector)
  nameWithType: BitVector.Equals(BitVector)
- uid: SudokuSpice.Data.BitVector.Equals(System.Object)
  name: Equals(Object)
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_Equals_System_Object_
  commentId: M:SudokuSpice.Data.BitVector.Equals(System.Object)
  fullName: SudokuSpice.Data.BitVector.Equals(System.Object)
  nameWithType: BitVector.Equals(Object)
- uid: SudokuSpice.Data.BitVector.Equals*
  name: Equals
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_Equals_
  commentId: Overload:SudokuSpice.Data.BitVector.Equals
  isSpec: "True"
  fullName: SudokuSpice.Data.BitVector.Equals
  nameWithType: BitVector.Equals
- uid: SudokuSpice.Data.BitVector.FindIntersect(SudokuSpice.Data.BitVector,SudokuSpice.Data.BitVector)
  name: FindIntersect(BitVector, BitVector)
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_FindIntersect_SudokuSpice_Data_BitVector_SudokuSpice_Data_BitVector_
  commentId: M:SudokuSpice.Data.BitVector.FindIntersect(SudokuSpice.Data.BitVector,SudokuSpice.Data.BitVector)
  fullName: SudokuSpice.Data.BitVector.FindIntersect(SudokuSpice.Data.BitVector, SudokuSpice.Data.BitVector)
  nameWithType: BitVector.FindIntersect(BitVector, BitVector)
- uid: SudokuSpice.Data.BitVector.FindIntersect*
  name: FindIntersect
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_FindIntersect_
  commentId: Overload:SudokuSpice.Data.BitVector.FindIntersect
  isSpec: "True"
  fullName: SudokuSpice.Data.BitVector.FindIntersect
  nameWithType: BitVector.FindIntersect
- uid: SudokuSpice.Data.BitVector.FindUnion(SudokuSpice.Data.BitVector,SudokuSpice.Data.BitVector)
  name: FindUnion(BitVector, BitVector)
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_FindUnion_SudokuSpice_Data_BitVector_SudokuSpice_Data_BitVector_
  commentId: M:SudokuSpice.Data.BitVector.FindUnion(SudokuSpice.Data.BitVector,SudokuSpice.Data.BitVector)
  fullName: SudokuSpice.Data.BitVector.FindUnion(SudokuSpice.Data.BitVector, SudokuSpice.Data.BitVector)
  nameWithType: BitVector.FindUnion(BitVector, BitVector)
- uid: SudokuSpice.Data.BitVector.FindUnion*
  name: FindUnion
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_FindUnion_
  commentId: Overload:SudokuSpice.Data.BitVector.FindUnion
  isSpec: "True"
  fullName: SudokuSpice.Data.BitVector.FindUnion
  nameWithType: BitVector.FindUnion
- uid: SudokuSpice.Data.BitVector.GetHashCode
  name: GetHashCode()
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_GetHashCode
  commentId: M:SudokuSpice.Data.BitVector.GetHashCode
  fullName: SudokuSpice.Data.BitVector.GetHashCode()
  nameWithType: BitVector.GetHashCode()
- uid: SudokuSpice.Data.BitVector.GetHashCode*
  name: GetHashCode
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_GetHashCode_
  commentId: Overload:SudokuSpice.Data.BitVector.GetHashCode
  isSpec: "True"
  fullName: SudokuSpice.Data.BitVector.GetHashCode
  nameWithType: BitVector.GetHashCode
- uid: SudokuSpice.Data.BitVector.GetSetBits
  name: GetSetBits()
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_GetSetBits
  commentId: M:SudokuSpice.Data.BitVector.GetSetBits
  fullName: SudokuSpice.Data.BitVector.GetSetBits()
  nameWithType: BitVector.GetSetBits()
- uid: SudokuSpice.Data.BitVector.GetSetBits*
  name: GetSetBits
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_GetSetBits_
  commentId: Overload:SudokuSpice.Data.BitVector.GetSetBits
  isSpec: "True"
  fullName: SudokuSpice.Data.BitVector.GetSetBits
  nameWithType: BitVector.GetSetBits
- uid: SudokuSpice.Data.BitVector.IsBitSet(System.Int32)
  name: IsBitSet(Int32)
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_IsBitSet_System_Int32_
  commentId: M:SudokuSpice.Data.BitVector.IsBitSet(System.Int32)
  fullName: SudokuSpice.Data.BitVector.IsBitSet(System.Int32)
  nameWithType: BitVector.IsBitSet(Int32)
- uid: SudokuSpice.Data.BitVector.IsBitSet*
  name: IsBitSet
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_IsBitSet_
  commentId: Overload:SudokuSpice.Data.BitVector.IsBitSet
  isSpec: "True"
  fullName: SudokuSpice.Data.BitVector.IsBitSet
  nameWithType: BitVector.IsBitSet
- uid: SudokuSpice.Data.BitVector.IsEmpty
  name: IsEmpty()
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_IsEmpty
  commentId: M:SudokuSpice.Data.BitVector.IsEmpty
  fullName: SudokuSpice.Data.BitVector.IsEmpty()
  nameWithType: BitVector.IsEmpty()
- uid: SudokuSpice.Data.BitVector.IsEmpty*
  name: IsEmpty
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_IsEmpty_
  commentId: Overload:SudokuSpice.Data.BitVector.IsEmpty
  isSpec: "True"
  fullName: SudokuSpice.Data.BitVector.IsEmpty
  nameWithType: BitVector.IsEmpty
- uid: SudokuSpice.Data.BitVector.op_Equality(SudokuSpice.Data.BitVector,SudokuSpice.Data.BitVector)
  name: Equality(BitVector, BitVector)
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_op_Equality_SudokuSpice_Data_BitVector_SudokuSpice_Data_BitVector_
  commentId: M:SudokuSpice.Data.BitVector.op_Equality(SudokuSpice.Data.BitVector,SudokuSpice.Data.BitVector)
  fullName: SudokuSpice.Data.BitVector.Equality(SudokuSpice.Data.BitVector, SudokuSpice.Data.BitVector)
  nameWithType: BitVector.Equality(BitVector, BitVector)
- uid: SudokuSpice.Data.BitVector.op_Equality*
  name: Equality
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_op_Equality_
  commentId: Overload:SudokuSpice.Data.BitVector.op_Equality
  isSpec: "True"
  fullName: SudokuSpice.Data.BitVector.Equality
  nameWithType: BitVector.Equality
- uid: SudokuSpice.Data.BitVector.op_Inequality(SudokuSpice.Data.BitVector,SudokuSpice.Data.BitVector)
  name: Inequality(BitVector, BitVector)
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_op_Inequality_SudokuSpice_Data_BitVector_SudokuSpice_Data_BitVector_
  commentId: M:SudokuSpice.Data.BitVector.op_Inequality(SudokuSpice.Data.BitVector,SudokuSpice.Data.BitVector)
  fullName: SudokuSpice.Data.BitVector.Inequality(SudokuSpice.Data.BitVector, SudokuSpice.Data.BitVector)
  nameWithType: BitVector.Inequality(BitVector, BitVector)
- uid: SudokuSpice.Data.BitVector.op_Inequality*
  name: Inequality
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_op_Inequality_
  commentId: Overload:SudokuSpice.Data.BitVector.op_Inequality
  isSpec: "True"
  fullName: SudokuSpice.Data.BitVector.Inequality
  nameWithType: BitVector.Inequality
- uid: SudokuSpice.Data.BitVector.SetBit(System.Int32)
  name: SetBit(Int32)
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_SetBit_System_Int32_
  commentId: M:SudokuSpice.Data.BitVector.SetBit(System.Int32)
  fullName: SudokuSpice.Data.BitVector.SetBit(System.Int32)
  nameWithType: BitVector.SetBit(Int32)
- uid: SudokuSpice.Data.BitVector.SetBit*
  name: SetBit
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_SetBit_
  commentId: Overload:SudokuSpice.Data.BitVector.SetBit
  isSpec: "True"
  fullName: SudokuSpice.Data.BitVector.SetBit
  nameWithType: BitVector.SetBit
- uid: SudokuSpice.Data.BitVector.ToString
  name: ToString()
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_ToString
  commentId: M:SudokuSpice.Data.BitVector.ToString
  fullName: SudokuSpice.Data.BitVector.ToString()
  nameWithType: BitVector.ToString()
- uid: SudokuSpice.Data.BitVector.ToString*
  name: ToString
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_ToString_
  commentId: Overload:SudokuSpice.Data.BitVector.ToString
  isSpec: "True"
  fullName: SudokuSpice.Data.BitVector.ToString
  nameWithType: BitVector.ToString
- uid: SudokuSpice.Data.BitVector.UnsetBit(System.Int32)
  name: UnsetBit(Int32)
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_UnsetBit_System_Int32_
  commentId: M:SudokuSpice.Data.BitVector.UnsetBit(System.Int32)
  fullName: SudokuSpice.Data.BitVector.UnsetBit(System.Int32)
  nameWithType: BitVector.UnsetBit(Int32)
- uid: SudokuSpice.Data.BitVector.UnsetBit*
  name: UnsetBit
  href: api/SudokuSpice.Data.BitVector.html#SudokuSpice_Data_BitVector_UnsetBit_
  commentId: Overload:SudokuSpice.Data.BitVector.UnsetBit
  isSpec: "True"
  fullName: SudokuSpice.Data.BitVector.UnsetBit
  nameWithType: BitVector.UnsetBit
- uid: SudokuSpice.Data.ConstraintHeader`1
  name: ConstraintHeader<TPuzzle>
  href: api/SudokuSpice.Data.ConstraintHeader-1.html
  commentId: T:SudokuSpice.Data.ConstraintHeader`1
  name.vb: ConstraintHeader(Of TPuzzle)
  fullName: SudokuSpice.Data.ConstraintHeader<TPuzzle>
  fullName.vb: SudokuSpice.Data.ConstraintHeader(Of TPuzzle)
  nameWithType: ConstraintHeader<TPuzzle>
  nameWithType.vb: ConstraintHeader(Of TPuzzle)
- uid: SudokuSpice.Data.ConstraintHeader`1.CreateConnectedHeader(SudokuSpice.Data.ExactCoverMatrix{`0},System.ReadOnlySpan{SudokuSpice.Data.PossibleSquareValue{`0}})
  name: CreateConnectedHeader(ExactCoverMatrix<TPuzzle>, ReadOnlySpan<PossibleSquareValue<TPuzzle>>)
  href: api/SudokuSpice.Data.ConstraintHeader-1.html#SudokuSpice_Data_ConstraintHeader_1_CreateConnectedHeader_SudokuSpice_Data_ExactCoverMatrix__0__System_ReadOnlySpan_SudokuSpice_Data_PossibleSquareValue__0___
  commentId: M:SudokuSpice.Data.ConstraintHeader`1.CreateConnectedHeader(SudokuSpice.Data.ExactCoverMatrix{`0},System.ReadOnlySpan{SudokuSpice.Data.PossibleSquareValue{`0}})
  name.vb: CreateConnectedHeader(ExactCoverMatrix(Of TPuzzle), ReadOnlySpan(Of PossibleSquareValue(Of TPuzzle)))
  fullName: SudokuSpice.Data.ConstraintHeader<TPuzzle>.CreateConnectedHeader(SudokuSpice.Data.ExactCoverMatrix<TPuzzle>, System.ReadOnlySpan<SudokuSpice.Data.PossibleSquareValue<TPuzzle>>)
  fullName.vb: SudokuSpice.Data.ConstraintHeader(Of TPuzzle).CreateConnectedHeader(SudokuSpice.Data.ExactCoverMatrix(Of TPuzzle), System.ReadOnlySpan(Of SudokuSpice.Data.PossibleSquareValue(Of TPuzzle)))
  nameWithType: ConstraintHeader<TPuzzle>.CreateConnectedHeader(ExactCoverMatrix<TPuzzle>, ReadOnlySpan<PossibleSquareValue<TPuzzle>>)
  nameWithType.vb: ConstraintHeader(Of TPuzzle).CreateConnectedHeader(ExactCoverMatrix(Of TPuzzle), ReadOnlySpan(Of PossibleSquareValue(Of TPuzzle)))
- uid: SudokuSpice.Data.ConstraintHeader`1.CreateConnectedHeader*
  name: CreateConnectedHeader
  href: api/SudokuSpice.Data.ConstraintHeader-1.html#SudokuSpice_Data_ConstraintHeader_1_CreateConnectedHeader_
  commentId: Overload:SudokuSpice.Data.ConstraintHeader`1.CreateConnectedHeader
  isSpec: "True"
  fullName: SudokuSpice.Data.ConstraintHeader<TPuzzle>.CreateConnectedHeader
  fullName.vb: SudokuSpice.Data.ConstraintHeader(Of TPuzzle).CreateConnectedHeader
  nameWithType: ConstraintHeader<TPuzzle>.CreateConnectedHeader
  nameWithType.vb: ConstraintHeader(Of TPuzzle).CreateConnectedHeader
- uid: SudokuSpice.Data.Coordinate
  name: Coordinate
  href: api/SudokuSpice.Data.Coordinate.html
  commentId: T:SudokuSpice.Data.Coordinate
  fullName: SudokuSpice.Data.Coordinate
  nameWithType: Coordinate
- uid: SudokuSpice.Data.Coordinate.#ctor(System.Int32,System.Int32)
  name: Coordinate(Int32, Int32)
  href: api/SudokuSpice.Data.Coordinate.html#SudokuSpice_Data_Coordinate__ctor_System_Int32_System_Int32_
  commentId: M:SudokuSpice.Data.Coordinate.#ctor(System.Int32,System.Int32)
  fullName: SudokuSpice.Data.Coordinate.Coordinate(System.Int32, System.Int32)
  nameWithType: Coordinate.Coordinate(Int32, Int32)
- uid: SudokuSpice.Data.Coordinate.#ctor*
  name: Coordinate
  href: api/SudokuSpice.Data.Coordinate.html#SudokuSpice_Data_Coordinate__ctor_
  commentId: Overload:SudokuSpice.Data.Coordinate.#ctor
  isSpec: "True"
  fullName: SudokuSpice.Data.Coordinate.Coordinate
  nameWithType: Coordinate.Coordinate
- uid: SudokuSpice.Data.Coordinate.Column
  name: Column
  href: api/SudokuSpice.Data.Coordinate.html#SudokuSpice_Data_Coordinate_Column
  commentId: P:SudokuSpice.Data.Coordinate.Column
  fullName: SudokuSpice.Data.Coordinate.Column
  nameWithType: Coordinate.Column
- uid: SudokuSpice.Data.Coordinate.Column*
  name: Column
  href: api/SudokuSpice.Data.Coordinate.html#SudokuSpice_Data_Coordinate_Column_
  commentId: Overload:SudokuSpice.Data.Coordinate.Column
  isSpec: "True"
  fullName: SudokuSpice.Data.Coordinate.Column
  nameWithType: Coordinate.Column
- uid: SudokuSpice.Data.Coordinate.Deconstruct(System.Int32@,System.Int32@)
  name: Deconstruct(out Int32, out Int32)
  href: api/SudokuSpice.Data.Coordinate.html#SudokuSpice_Data_Coordinate_Deconstruct_System_Int32__System_Int32__
  commentId: M:SudokuSpice.Data.Coordinate.Deconstruct(System.Int32@,System.Int32@)
  name.vb: Deconstruct(ByRef Int32, ByRef Int32)
  fullName: SudokuSpice.Data.Coordinate.Deconstruct(out System.Int32, out System.Int32)
  fullName.vb: SudokuSpice.Data.Coordinate.Deconstruct(ByRef System.Int32, ByRef System.Int32)
  nameWithType: Coordinate.Deconstruct(out Int32, out Int32)
  nameWithType.vb: Coordinate.Deconstruct(ByRef Int32, ByRef Int32)
- uid: SudokuSpice.Data.Coordinate.Deconstruct*
  name: Deconstruct
  href: api/SudokuSpice.Data.Coordinate.html#SudokuSpice_Data_Coordinate_Deconstruct_
  commentId: Overload:SudokuSpice.Data.Coordinate.Deconstruct
  isSpec: "True"
  fullName: SudokuSpice.Data.Coordinate.Deconstruct
  nameWithType: Coordinate.Deconstruct
- uid: SudokuSpice.Data.Coordinate.Equals(SudokuSpice.Data.Coordinate)
  name: Equals(Coordinate)
  href: api/SudokuSpice.Data.Coordinate.html#SudokuSpice_Data_Coordinate_Equals_SudokuSpice_Data_Coordinate_
  commentId: M:SudokuSpice.Data.Coordinate.Equals(SudokuSpice.Data.Coordinate)
  fullName: SudokuSpice.Data.Coordinate.Equals(SudokuSpice.Data.Coordinate)
  nameWithType: Coordinate.Equals(Coordinate)
- uid: SudokuSpice.Data.Coordinate.Equals(SudokuSpice.Data.Coordinate@)
  name: Equals(Coordinate)
  href: api/SudokuSpice.Data.Coordinate.html#SudokuSpice_Data_Coordinate_Equals_SudokuSpice_Data_Coordinate__
  commentId: M:SudokuSpice.Data.Coordinate.Equals(SudokuSpice.Data.Coordinate@)
  name.vb: Equals(ByRef Coordinate)
  fullName: SudokuSpice.Data.Coordinate.Equals(SudokuSpice.Data.Coordinate)
  fullName.vb: SudokuSpice.Data.Coordinate.Equals(ByRef SudokuSpice.Data.Coordinate)
  nameWithType: Coordinate.Equals(Coordinate)
  nameWithType.vb: Coordinate.Equals(ByRef Coordinate)
- uid: SudokuSpice.Data.Coordinate.Equals(System.Object)
  name: Equals(Object)
  href: api/SudokuSpice.Data.Coordinate.html#SudokuSpice_Data_Coordinate_Equals_System_Object_
  commentId: M:SudokuSpice.Data.Coordinate.Equals(System.Object)
  fullName: SudokuSpice.Data.Coordinate.Equals(System.Object)
  nameWithType: Coordinate.Equals(Object)
- uid: SudokuSpice.Data.Coordinate.Equals*
  name: Equals
  href: api/SudokuSpice.Data.Coordinate.html#SudokuSpice_Data_Coordinate_Equals_
  commentId: Overload:SudokuSpice.Data.Coordinate.Equals
  isSpec: "True"
  fullName: SudokuSpice.Data.Coordinate.Equals
  nameWithType: Coordinate.Equals
- uid: SudokuSpice.Data.Coordinate.GetHashCode
  name: GetHashCode()
  href: api/SudokuSpice.Data.Coordinate.html#SudokuSpice_Data_Coordinate_GetHashCode
  commentId: M:SudokuSpice.Data.Coordinate.GetHashCode
  fullName: SudokuSpice.Data.Coordinate.GetHashCode()
  nameWithType: Coordinate.GetHashCode()
- uid: SudokuSpice.Data.Coordinate.GetHashCode*
  name: GetHashCode
  href: api/SudokuSpice.Data.Coordinate.html#SudokuSpice_Data_Coordinate_GetHashCode_
  commentId: Overload:SudokuSpice.Data.Coordinate.GetHashCode
  isSpec: "True"
  fullName: SudokuSpice.Data.Coordinate.GetHashCode
  nameWithType: Coordinate.GetHashCode
- uid: SudokuSpice.Data.Coordinate.op_Equality(SudokuSpice.Data.Coordinate@,SudokuSpice.Data.Coordinate@)
  name: Equality(Coordinate, Coordinate)
  href: api/SudokuSpice.Data.Coordinate.html#SudokuSpice_Data_Coordinate_op_Equality_SudokuSpice_Data_Coordinate__SudokuSpice_Data_Coordinate__
  commentId: M:SudokuSpice.Data.Coordinate.op_Equality(SudokuSpice.Data.Coordinate@,SudokuSpice.Data.Coordinate@)
  name.vb: Equality(ByRef Coordinate, ByRef Coordinate)
  fullName: SudokuSpice.Data.Coordinate.Equality(SudokuSpice.Data.Coordinate, SudokuSpice.Data.Coordinate)
  fullName.vb: SudokuSpice.Data.Coordinate.Equality(ByRef SudokuSpice.Data.Coordinate, ByRef SudokuSpice.Data.Coordinate)
  nameWithType: Coordinate.Equality(Coordinate, Coordinate)
  nameWithType.vb: Coordinate.Equality(ByRef Coordinate, ByRef Coordinate)
- uid: SudokuSpice.Data.Coordinate.op_Equality*
  name: Equality
  href: api/SudokuSpice.Data.Coordinate.html#SudokuSpice_Data_Coordinate_op_Equality_
  commentId: Overload:SudokuSpice.Data.Coordinate.op_Equality
  isSpec: "True"
  fullName: SudokuSpice.Data.Coordinate.Equality
  nameWithType: Coordinate.Equality
- uid: SudokuSpice.Data.Coordinate.op_Inequality(SudokuSpice.Data.Coordinate@,SudokuSpice.Data.Coordinate@)
  name: Inequality(Coordinate, Coordinate)
  href: api/SudokuSpice.Data.Coordinate.html#SudokuSpice_Data_Coordinate_op_Inequality_SudokuSpice_Data_Coordinate__SudokuSpice_Data_Coordinate__
  commentId: M:SudokuSpice.Data.Coordinate.op_Inequality(SudokuSpice.Data.Coordinate@,SudokuSpice.Data.Coordinate@)
  name.vb: Inequality(ByRef Coordinate, ByRef Coordinate)
  fullName: SudokuSpice.Data.Coordinate.Inequality(SudokuSpice.Data.Coordinate, SudokuSpice.Data.Coordinate)
  fullName.vb: SudokuSpice.Data.Coordinate.Inequality(ByRef SudokuSpice.Data.Coordinate, ByRef SudokuSpice.Data.Coordinate)
  nameWithType: Coordinate.Inequality(Coordinate, Coordinate)
  nameWithType.vb: Coordinate.Inequality(ByRef Coordinate, ByRef Coordinate)
- uid: SudokuSpice.Data.Coordinate.op_Inequality*
  name: Inequality
  href: api/SudokuSpice.Data.Coordinate.html#SudokuSpice_Data_Coordinate_op_Inequality_
  commentId: Overload:SudokuSpice.Data.Coordinate.op_Inequality
  isSpec: "True"
  fullName: SudokuSpice.Data.Coordinate.Inequality
  nameWithType: Coordinate.Inequality
- uid: SudokuSpice.Data.Coordinate.Row
  name: Row
  href: api/SudokuSpice.Data.Coordinate.html#SudokuSpice_Data_Coordinate_Row
  commentId: P:SudokuSpice.Data.Coordinate.Row
  fullName: SudokuSpice.Data.Coordinate.Row
  nameWithType: Coordinate.Row
- uid: SudokuSpice.Data.Coordinate.Row*
  name: Row
  href: api/SudokuSpice.Data.Coordinate.html#SudokuSpice_Data_Coordinate_Row_
  commentId: Overload:SudokuSpice.Data.Coordinate.Row
  isSpec: "True"
  fullName: SudokuSpice.Data.Coordinate.Row
  nameWithType: Coordinate.Row
- uid: SudokuSpice.Data.Coordinate.ToString
  name: ToString()
  href: api/SudokuSpice.Data.Coordinate.html#SudokuSpice_Data_Coordinate_ToString
  commentId: M:SudokuSpice.Data.Coordinate.ToString
  fullName: SudokuSpice.Data.Coordinate.ToString()
  nameWithType: Coordinate.ToString()
- uid: SudokuSpice.Data.Coordinate.ToString*
  name: ToString
  href: api/SudokuSpice.Data.Coordinate.html#SudokuSpice_Data_Coordinate_ToString_
  commentId: Overload:SudokuSpice.Data.Coordinate.ToString
  isSpec: "True"
  fullName: SudokuSpice.Data.Coordinate.ToString
  nameWithType: Coordinate.ToString
- uid: SudokuSpice.Data.CoordinateTracker
  name: CoordinateTracker
  href: api/SudokuSpice.Data.CoordinateTracker.html
  commentId: T:SudokuSpice.Data.CoordinateTracker
  fullName: SudokuSpice.Data.CoordinateTracker
  nameWithType: CoordinateTracker
- uid: SudokuSpice.Data.CoordinateTracker.#ctor(SudokuSpice.Data.CoordinateTracker)
  name: CoordinateTracker(CoordinateTracker)
  href: api/SudokuSpice.Data.CoordinateTracker.html#SudokuSpice_Data_CoordinateTracker__ctor_SudokuSpice_Data_CoordinateTracker_
  commentId: M:SudokuSpice.Data.CoordinateTracker.#ctor(SudokuSpice.Data.CoordinateTracker)
  fullName: SudokuSpice.Data.CoordinateTracker.CoordinateTracker(SudokuSpice.Data.CoordinateTracker)
  nameWithType: CoordinateTracker.CoordinateTracker(CoordinateTracker)
- uid: SudokuSpice.Data.CoordinateTracker.#ctor(System.Int32)
  name: CoordinateTracker(Int32)
  href: api/SudokuSpice.Data.CoordinateTracker.html#SudokuSpice_Data_CoordinateTracker__ctor_System_Int32_
  commentId: M:SudokuSpice.Data.CoordinateTracker.#ctor(System.Int32)
  fullName: SudokuSpice.Data.CoordinateTracker.CoordinateTracker(System.Int32)
  nameWithType: CoordinateTracker.CoordinateTracker(Int32)
- uid: SudokuSpice.Data.CoordinateTracker.#ctor*
  name: CoordinateTracker
  href: api/SudokuSpice.Data.CoordinateTracker.html#SudokuSpice_Data_CoordinateTracker__ctor_
  commentId: Overload:SudokuSpice.Data.CoordinateTracker.#ctor
  isSpec: "True"
  fullName: SudokuSpice.Data.CoordinateTracker.CoordinateTracker
  nameWithType: CoordinateTracker.CoordinateTracker
- uid: SudokuSpice.Data.CoordinateTracker.Add(SudokuSpice.Data.Coordinate@)
  name: Add(Coordinate)
  href: api/SudokuSpice.Data.CoordinateTracker.html#SudokuSpice_Data_CoordinateTracker_Add_SudokuSpice_Data_Coordinate__
  commentId: M:SudokuSpice.Data.CoordinateTracker.Add(SudokuSpice.Data.Coordinate@)
  name.vb: Add(ByRef Coordinate)
  fullName: SudokuSpice.Data.CoordinateTracker.Add(SudokuSpice.Data.Coordinate)
  fullName.vb: SudokuSpice.Data.CoordinateTracker.Add(ByRef SudokuSpice.Data.Coordinate)
  nameWithType: CoordinateTracker.Add(Coordinate)
  nameWithType.vb: CoordinateTracker.Add(ByRef Coordinate)
- uid: SudokuSpice.Data.CoordinateTracker.Add*
  name: Add
  href: api/SudokuSpice.Data.CoordinateTracker.html#SudokuSpice_Data_CoordinateTracker_Add_
  commentId: Overload:SudokuSpice.Data.CoordinateTracker.Add
  isSpec: "True"
  fullName: SudokuSpice.Data.CoordinateTracker.Add
  nameWithType: CoordinateTracker.Add
- uid: SudokuSpice.Data.CoordinateTracker.AddOrTrackIfUntracked(SudokuSpice.Data.Coordinate@)
  name: AddOrTrackIfUntracked(Coordinate)
  href: api/SudokuSpice.Data.CoordinateTracker.html#SudokuSpice_Data_CoordinateTracker_AddOrTrackIfUntracked_SudokuSpice_Data_Coordinate__
  commentId: M:SudokuSpice.Data.CoordinateTracker.AddOrTrackIfUntracked(SudokuSpice.Data.Coordinate@)
  name.vb: AddOrTrackIfUntracked(ByRef Coordinate)
  fullName: SudokuSpice.Data.CoordinateTracker.AddOrTrackIfUntracked(SudokuSpice.Data.Coordinate)
  fullName.vb: SudokuSpice.Data.CoordinateTracker.AddOrTrackIfUntracked(ByRef SudokuSpice.Data.Coordinate)
  nameWithType: CoordinateTracker.AddOrTrackIfUntracked(Coordinate)
  nameWithType.vb: CoordinateTracker.AddOrTrackIfUntracked(ByRef Coordinate)
- uid: SudokuSpice.Data.CoordinateTracker.AddOrTrackIfUntracked*
  name: AddOrTrackIfUntracked
  href: api/SudokuSpice.Data.CoordinateTracker.html#SudokuSpice_Data_CoordinateTracker_AddOrTrackIfUntracked_
  commentId: Overload:SudokuSpice.Data.CoordinateTracker.AddOrTrackIfUntracked
  isSpec: "True"
  fullName: SudokuSpice.Data.CoordinateTracker.AddOrTrackIfUntracked
  nameWithType: CoordinateTracker.AddOrTrackIfUntracked
- uid: SudokuSpice.Data.CoordinateTracker.AddOrTrackResult
  name: CoordinateTracker.AddOrTrackResult
  href: api/SudokuSpice.Data.CoordinateTracker.AddOrTrackResult.html
  commentId: T:SudokuSpice.Data.CoordinateTracker.AddOrTrackResult
  fullName: SudokuSpice.Data.CoordinateTracker.AddOrTrackResult
  nameWithType: CoordinateTracker.AddOrTrackResult
- uid: SudokuSpice.Data.CoordinateTracker.AddOrTrackResult.AddedAndTracked
  name: AddedAndTracked
  href: api/SudokuSpice.Data.CoordinateTracker.AddOrTrackResult.html#SudokuSpice_Data_CoordinateTracker_AddOrTrackResult_AddedAndTracked
  commentId: F:SudokuSpice.Data.CoordinateTracker.AddOrTrackResult.AddedAndTracked
  fullName: SudokuSpice.Data.CoordinateTracker.AddOrTrackResult.AddedAndTracked
  nameWithType: CoordinateTracker.AddOrTrackResult.AddedAndTracked
- uid: SudokuSpice.Data.CoordinateTracker.AddOrTrackResult.Tracked
  name: Tracked
  href: api/SudokuSpice.Data.CoordinateTracker.AddOrTrackResult.html#SudokuSpice_Data_CoordinateTracker_AddOrTrackResult_Tracked
  commentId: F:SudokuSpice.Data.CoordinateTracker.AddOrTrackResult.Tracked
  fullName: SudokuSpice.Data.CoordinateTracker.AddOrTrackResult.Tracked
  nameWithType: CoordinateTracker.AddOrTrackResult.Tracked
- uid: SudokuSpice.Data.CoordinateTracker.AddOrTrackResult.Unchanged
  name: Unchanged
  href: api/SudokuSpice.Data.CoordinateTracker.AddOrTrackResult.html#SudokuSpice_Data_CoordinateTracker_AddOrTrackResult_Unchanged
  commentId: F:SudokuSpice.Data.CoordinateTracker.AddOrTrackResult.Unchanged
  fullName: SudokuSpice.Data.CoordinateTracker.AddOrTrackResult.Unchanged
  nameWithType: CoordinateTracker.AddOrTrackResult.Unchanged
- uid: SudokuSpice.Data.CoordinateTracker.GetTrackedCoords
  name: GetTrackedCoords()
  href: api/SudokuSpice.Data.CoordinateTracker.html#SudokuSpice_Data_CoordinateTracker_GetTrackedCoords
  commentId: M:SudokuSpice.Data.CoordinateTracker.GetTrackedCoords
  fullName: SudokuSpice.Data.CoordinateTracker.GetTrackedCoords()
  nameWithType: CoordinateTracker.GetTrackedCoords()
- uid: SudokuSpice.Data.CoordinateTracker.GetTrackedCoords*
  name: GetTrackedCoords
  href: api/SudokuSpice.Data.CoordinateTracker.html#SudokuSpice_Data_CoordinateTracker_GetTrackedCoords_
  commentId: Overload:SudokuSpice.Data.CoordinateTracker.GetTrackedCoords
  isSpec: "True"
  fullName: SudokuSpice.Data.CoordinateTracker.GetTrackedCoords
  nameWithType: CoordinateTracker.GetTrackedCoords
- uid: SudokuSpice.Data.CoordinateTracker.NumTracked
  name: NumTracked
  href: api/SudokuSpice.Data.CoordinateTracker.html#SudokuSpice_Data_CoordinateTracker_NumTracked
  commentId: P:SudokuSpice.Data.CoordinateTracker.NumTracked
  fullName: SudokuSpice.Data.CoordinateTracker.NumTracked
  nameWithType: CoordinateTracker.NumTracked
- uid: SudokuSpice.Data.CoordinateTracker.NumTracked*
  name: NumTracked
  href: api/SudokuSpice.Data.CoordinateTracker.html#SudokuSpice_Data_CoordinateTracker_NumTracked_
  commentId: Overload:SudokuSpice.Data.CoordinateTracker.NumTracked
  isSpec: "True"
  fullName: SudokuSpice.Data.CoordinateTracker.NumTracked
  nameWithType: CoordinateTracker.NumTracked
- uid: SudokuSpice.Data.CoordinateTracker.Track(SudokuSpice.Data.Coordinate@)
  name: Track(Coordinate)
  href: api/SudokuSpice.Data.CoordinateTracker.html#SudokuSpice_Data_CoordinateTracker_Track_SudokuSpice_Data_Coordinate__
  commentId: M:SudokuSpice.Data.CoordinateTracker.Track(SudokuSpice.Data.Coordinate@)
  name.vb: Track(ByRef Coordinate)
  fullName: SudokuSpice.Data.CoordinateTracker.Track(SudokuSpice.Data.Coordinate)
  fullName.vb: SudokuSpice.Data.CoordinateTracker.Track(ByRef SudokuSpice.Data.Coordinate)
  nameWithType: CoordinateTracker.Track(Coordinate)
  nameWithType.vb: CoordinateTracker.Track(ByRef Coordinate)
- uid: SudokuSpice.Data.CoordinateTracker.Track*
  name: Track
  href: api/SudokuSpice.Data.CoordinateTracker.html#SudokuSpice_Data_CoordinateTracker_Track_
  commentId: Overload:SudokuSpice.Data.CoordinateTracker.Track
  isSpec: "True"
  fullName: SudokuSpice.Data.CoordinateTracker.Track
  nameWithType: CoordinateTracker.Track
- uid: SudokuSpice.Data.CoordinateTracker.Untrack(SudokuSpice.Data.Coordinate@)
  name: Untrack(Coordinate)
  href: api/SudokuSpice.Data.CoordinateTracker.html#SudokuSpice_Data_CoordinateTracker_Untrack_SudokuSpice_Data_Coordinate__
  commentId: M:SudokuSpice.Data.CoordinateTracker.Untrack(SudokuSpice.Data.Coordinate@)
  name.vb: Untrack(ByRef Coordinate)
  fullName: SudokuSpice.Data.CoordinateTracker.Untrack(SudokuSpice.Data.Coordinate)
  fullName.vb: SudokuSpice.Data.CoordinateTracker.Untrack(ByRef SudokuSpice.Data.Coordinate)
  nameWithType: CoordinateTracker.Untrack(Coordinate)
  nameWithType.vb: CoordinateTracker.Untrack(ByRef Coordinate)
- uid: SudokuSpice.Data.CoordinateTracker.Untrack*
  name: Untrack
  href: api/SudokuSpice.Data.CoordinateTracker.html#SudokuSpice_Data_CoordinateTracker_Untrack_
  commentId: Overload:SudokuSpice.Data.CoordinateTracker.Untrack
  isSpec: "True"
  fullName: SudokuSpice.Data.CoordinateTracker.Untrack
  nameWithType: CoordinateTracker.Untrack
- uid: SudokuSpice.Data.CoordinateTracker.UntrackAll
  name: UntrackAll()
  href: api/SudokuSpice.Data.CoordinateTracker.html#SudokuSpice_Data_CoordinateTracker_UntrackAll
  commentId: M:SudokuSpice.Data.CoordinateTracker.UntrackAll
  fullName: SudokuSpice.Data.CoordinateTracker.UntrackAll()
  nameWithType: CoordinateTracker.UntrackAll()
- uid: SudokuSpice.Data.CoordinateTracker.UntrackAll*
  name: UntrackAll
  href: api/SudokuSpice.Data.CoordinateTracker.html#SudokuSpice_Data_CoordinateTracker_UntrackAll_
  commentId: Overload:SudokuSpice.Data.CoordinateTracker.UntrackAll
  isSpec: "True"
  fullName: SudokuSpice.Data.CoordinateTracker.UntrackAll
  nameWithType: CoordinateTracker.UntrackAll
- uid: SudokuSpice.Data.ExactCoverMatrix`1
  name: ExactCoverMatrix<TPuzzle>
  href: api/SudokuSpice.Data.ExactCoverMatrix-1.html
  commentId: T:SudokuSpice.Data.ExactCoverMatrix`1
  name.vb: ExactCoverMatrix(Of TPuzzle)
  fullName: SudokuSpice.Data.ExactCoverMatrix<TPuzzle>
  fullName.vb: SudokuSpice.Data.ExactCoverMatrix(Of TPuzzle)
  nameWithType: ExactCoverMatrix<TPuzzle>
  nameWithType.vb: ExactCoverMatrix(Of TPuzzle)
- uid: SudokuSpice.Data.ExactCoverMatrix`1.AllPossibleValues
  name: AllPossibleValues
  href: api/SudokuSpice.Data.ExactCoverMatrix-1.html#SudokuSpice_Data_ExactCoverMatrix_1_AllPossibleValues
  commentId: P:SudokuSpice.Data.ExactCoverMatrix`1.AllPossibleValues
  fullName: SudokuSpice.Data.ExactCoverMatrix<TPuzzle>.AllPossibleValues
  fullName.vb: SudokuSpice.Data.ExactCoverMatrix(Of TPuzzle).AllPossibleValues
  nameWithType: ExactCoverMatrix<TPuzzle>.AllPossibleValues
  nameWithType.vb: ExactCoverMatrix(Of TPuzzle).AllPossibleValues
- uid: SudokuSpice.Data.ExactCoverMatrix`1.AllPossibleValues*
  name: AllPossibleValues
  href: api/SudokuSpice.Data.ExactCoverMatrix-1.html#SudokuSpice_Data_ExactCoverMatrix_1_AllPossibleValues_
  commentId: Overload:SudokuSpice.Data.ExactCoverMatrix`1.AllPossibleValues
  isSpec: "True"
  fullName: SudokuSpice.Data.ExactCoverMatrix<TPuzzle>.AllPossibleValues
  fullName.vb: SudokuSpice.Data.ExactCoverMatrix(Of TPuzzle).AllPossibleValues
  nameWithType: ExactCoverMatrix<TPuzzle>.AllPossibleValues
  nameWithType.vb: ExactCoverMatrix(Of TPuzzle).AllPossibleValues
- uid: SudokuSpice.Data.ExactCoverMatrix`1.GetSquare(SudokuSpice.Data.Coordinate@)
  name: GetSquare(Coordinate)
  href: api/SudokuSpice.Data.ExactCoverMatrix-1.html#SudokuSpice_Data_ExactCoverMatrix_1_GetSquare_SudokuSpice_Data_Coordinate__
  commentId: M:SudokuSpice.Data.ExactCoverMatrix`1.GetSquare(SudokuSpice.Data.Coordinate@)
  name.vb: GetSquare(ByRef Coordinate)
  fullName: SudokuSpice.Data.ExactCoverMatrix<TPuzzle>.GetSquare(SudokuSpice.Data.Coordinate)
  fullName.vb: SudokuSpice.Data.ExactCoverMatrix(Of TPuzzle).GetSquare(ByRef SudokuSpice.Data.Coordinate)
  nameWithType: ExactCoverMatrix<TPuzzle>.GetSquare(Coordinate)
  nameWithType.vb: ExactCoverMatrix(Of TPuzzle).GetSquare(ByRef Coordinate)
- uid: SudokuSpice.Data.ExactCoverMatrix`1.GetSquare*
  name: GetSquare
  href: api/SudokuSpice.Data.ExactCoverMatrix-1.html#SudokuSpice_Data_ExactCoverMatrix_1_GetSquare_
  commentId: Overload:SudokuSpice.Data.ExactCoverMatrix`1.GetSquare
  isSpec: "True"
  fullName: SudokuSpice.Data.ExactCoverMatrix<TPuzzle>.GetSquare
  fullName.vb: SudokuSpice.Data.ExactCoverMatrix(Of TPuzzle).GetSquare
  nameWithType: ExactCoverMatrix<TPuzzle>.GetSquare
  nameWithType.vb: ExactCoverMatrix(Of TPuzzle).GetSquare
- uid: SudokuSpice.Data.ExactCoverMatrix`1.GetSquaresOnColumn(System.Int32)
  name: GetSquaresOnColumn(Int32)
  href: api/SudokuSpice.Data.ExactCoverMatrix-1.html#SudokuSpice_Data_ExactCoverMatrix_1_GetSquaresOnColumn_System_Int32_
  commentId: M:SudokuSpice.Data.ExactCoverMatrix`1.GetSquaresOnColumn(System.Int32)
  fullName: SudokuSpice.Data.ExactCoverMatrix<TPuzzle>.GetSquaresOnColumn(System.Int32)
  fullName.vb: SudokuSpice.Data.ExactCoverMatrix(Of TPuzzle).GetSquaresOnColumn(System.Int32)
  nameWithType: ExactCoverMatrix<TPuzzle>.GetSquaresOnColumn(Int32)
  nameWithType.vb: ExactCoverMatrix(Of TPuzzle).GetSquaresOnColumn(Int32)
- uid: SudokuSpice.Data.ExactCoverMatrix`1.GetSquaresOnColumn*
  name: GetSquaresOnColumn
  href: api/SudokuSpice.Data.ExactCoverMatrix-1.html#SudokuSpice_Data_ExactCoverMatrix_1_GetSquaresOnColumn_
  commentId: Overload:SudokuSpice.Data.ExactCoverMatrix`1.GetSquaresOnColumn
  isSpec: "True"
  fullName: SudokuSpice.Data.ExactCoverMatrix<TPuzzle>.GetSquaresOnColumn
  fullName.vb: SudokuSpice.Data.ExactCoverMatrix(Of TPuzzle).GetSquaresOnColumn
  nameWithType: ExactCoverMatrix<TPuzzle>.GetSquaresOnColumn
  nameWithType.vb: ExactCoverMatrix(Of TPuzzle).GetSquaresOnColumn
- uid: SudokuSpice.Data.ExactCoverMatrix`1.GetSquaresOnRow(System.Int32)
  name: GetSquaresOnRow(Int32)
  href: api/SudokuSpice.Data.ExactCoverMatrix-1.html#SudokuSpice_Data_ExactCoverMatrix_1_GetSquaresOnRow_System_Int32_
  commentId: M:SudokuSpice.Data.ExactCoverMatrix`1.GetSquaresOnRow(System.Int32)
  fullName: SudokuSpice.Data.ExactCoverMatrix<TPuzzle>.GetSquaresOnRow(System.Int32)
  fullName.vb: SudokuSpice.Data.ExactCoverMatrix(Of TPuzzle).GetSquaresOnRow(System.Int32)
  nameWithType: ExactCoverMatrix<TPuzzle>.GetSquaresOnRow(Int32)
  nameWithType.vb: ExactCoverMatrix(Of TPuzzle).GetSquaresOnRow(Int32)
- uid: SudokuSpice.Data.ExactCoverMatrix`1.GetSquaresOnRow*
  name: GetSquaresOnRow
  href: api/SudokuSpice.Data.ExactCoverMatrix-1.html#SudokuSpice_Data_ExactCoverMatrix_1_GetSquaresOnRow_
  commentId: Overload:SudokuSpice.Data.ExactCoverMatrix`1.GetSquaresOnRow
  isSpec: "True"
  fullName: SudokuSpice.Data.ExactCoverMatrix<TPuzzle>.GetSquaresOnRow
  fullName.vb: SudokuSpice.Data.ExactCoverMatrix(Of TPuzzle).GetSquaresOnRow
  nameWithType: ExactCoverMatrix<TPuzzle>.GetSquaresOnRow
  nameWithType.vb: ExactCoverMatrix(Of TPuzzle).GetSquaresOnRow
- uid: SudokuSpice.Data.ExactCoverMatrix`1.GetUnsatisfiedConstraintHeaders
  name: GetUnsatisfiedConstraintHeaders()
  href: api/SudokuSpice.Data.ExactCoverMatrix-1.html#SudokuSpice_Data_ExactCoverMatrix_1_GetUnsatisfiedConstraintHeaders
  commentId: M:SudokuSpice.Data.ExactCoverMatrix`1.GetUnsatisfiedConstraintHeaders
  fullName: SudokuSpice.Data.ExactCoverMatrix<TPuzzle>.GetUnsatisfiedConstraintHeaders()
  fullName.vb: SudokuSpice.Data.ExactCoverMatrix(Of TPuzzle).GetUnsatisfiedConstraintHeaders()
  nameWithType: ExactCoverMatrix<TPuzzle>.GetUnsatisfiedConstraintHeaders()
  nameWithType.vb: ExactCoverMatrix(Of TPuzzle).GetUnsatisfiedConstraintHeaders()
- uid: SudokuSpice.Data.ExactCoverMatrix`1.GetUnsatisfiedConstraintHeaders*
  name: GetUnsatisfiedConstraintHeaders
  href: api/SudokuSpice.Data.ExactCoverMatrix-1.html#SudokuSpice_Data_ExactCoverMatrix_1_GetUnsatisfiedConstraintHeaders_
  commentId: Overload:SudokuSpice.Data.ExactCoverMatrix`1.GetUnsatisfiedConstraintHeaders
  isSpec: "True"
  fullName: SudokuSpice.Data.ExactCoverMatrix<TPuzzle>.GetUnsatisfiedConstraintHeaders
  fullName.vb: SudokuSpice.Data.ExactCoverMatrix(Of TPuzzle).GetUnsatisfiedConstraintHeaders
  nameWithType: ExactCoverMatrix<TPuzzle>.GetUnsatisfiedConstraintHeaders
  nameWithType.vb: ExactCoverMatrix(Of TPuzzle).GetUnsatisfiedConstraintHeaders
- uid: SudokuSpice.Data.ExactCoverMatrix`1.ValuesToIndices
  name: ValuesToIndices
  href: api/SudokuSpice.Data.ExactCoverMatrix-1.html#SudokuSpice_Data_ExactCoverMatrix_1_ValuesToIndices
  commentId: P:SudokuSpice.Data.ExactCoverMatrix`1.ValuesToIndices
  fullName: SudokuSpice.Data.ExactCoverMatrix<TPuzzle>.ValuesToIndices
  fullName.vb: SudokuSpice.Data.ExactCoverMatrix(Of TPuzzle).ValuesToIndices
  nameWithType: ExactCoverMatrix<TPuzzle>.ValuesToIndices
  nameWithType.vb: ExactCoverMatrix(Of TPuzzle).ValuesToIndices
- uid: SudokuSpice.Data.ExactCoverMatrix`1.ValuesToIndices*
  name: ValuesToIndices
  href: api/SudokuSpice.Data.ExactCoverMatrix-1.html#SudokuSpice_Data_ExactCoverMatrix_1_ValuesToIndices_
  commentId: Overload:SudokuSpice.Data.ExactCoverMatrix`1.ValuesToIndices
  isSpec: "True"
  fullName: SudokuSpice.Data.ExactCoverMatrix<TPuzzle>.ValuesToIndices
  fullName.vb: SudokuSpice.Data.ExactCoverMatrix(Of TPuzzle).ValuesToIndices
  nameWithType: ExactCoverMatrix<TPuzzle>.ValuesToIndices
  nameWithType.vb: ExactCoverMatrix(Of TPuzzle).ValuesToIndices
- uid: SudokuSpice.Data.PossibleSquareState
  name: PossibleSquareState
  href: api/SudokuSpice.Data.PossibleSquareState.html
  commentId: T:SudokuSpice.Data.PossibleSquareState
  fullName: SudokuSpice.Data.PossibleSquareState
  nameWithType: PossibleSquareState
- uid: SudokuSpice.Data.PossibleSquareState.DROPPED
  name: DROPPED
  href: api/SudokuSpice.Data.PossibleSquareState.html#SudokuSpice_Data_PossibleSquareState_DROPPED
  commentId: F:SudokuSpice.Data.PossibleSquareState.DROPPED
  fullName: SudokuSpice.Data.PossibleSquareState.DROPPED
  nameWithType: PossibleSquareState.DROPPED
- uid: SudokuSpice.Data.PossibleSquareState.SELECTED
  name: SELECTED
  href: api/SudokuSpice.Data.PossibleSquareState.html#SudokuSpice_Data_PossibleSquareState_SELECTED
  commentId: F:SudokuSpice.Data.PossibleSquareState.SELECTED
  fullName: SudokuSpice.Data.PossibleSquareState.SELECTED
  nameWithType: PossibleSquareState.SELECTED
- uid: SudokuSpice.Data.PossibleSquareState.UNKNOWN
  name: UNKNOWN
  href: api/SudokuSpice.Data.PossibleSquareState.html#SudokuSpice_Data_PossibleSquareState_UNKNOWN
  commentId: F:SudokuSpice.Data.PossibleSquareState.UNKNOWN
  fullName: SudokuSpice.Data.PossibleSquareState.UNKNOWN
  nameWithType: PossibleSquareState.UNKNOWN
- uid: SudokuSpice.Data.PossibleSquareValue`1
  name: PossibleSquareValue<TPuzzle>
  href: api/SudokuSpice.Data.PossibleSquareValue-1.html
  commentId: T:SudokuSpice.Data.PossibleSquareValue`1
  name.vb: PossibleSquareValue(Of TPuzzle)
  fullName: SudokuSpice.Data.PossibleSquareValue<TPuzzle>
  fullName.vb: SudokuSpice.Data.PossibleSquareValue(Of TPuzzle)
  nameWithType: PossibleSquareValue<TPuzzle>
  nameWithType.vb: PossibleSquareValue(Of TPuzzle)
- uid: SudokuSpice.Data.PossibleSquareValue`1.Square
  name: Square
  href: api/SudokuSpice.Data.PossibleSquareValue-1.html#SudokuSpice_Data_PossibleSquareValue_1_Square
  commentId: P:SudokuSpice.Data.PossibleSquareValue`1.Square
  fullName: SudokuSpice.Data.PossibleSquareValue<TPuzzle>.Square
  fullName.vb: SudokuSpice.Data.PossibleSquareValue(Of TPuzzle).Square
  nameWithType: PossibleSquareValue<TPuzzle>.Square
  nameWithType.vb: PossibleSquareValue(Of TPuzzle).Square
- uid: SudokuSpice.Data.PossibleSquareValue`1.Square*
  name: Square
  href: api/SudokuSpice.Data.PossibleSquareValue-1.html#SudokuSpice_Data_PossibleSquareValue_1_Square_
  commentId: Overload:SudokuSpice.Data.PossibleSquareValue`1.Square
  isSpec: "True"
  fullName: SudokuSpice.Data.PossibleSquareValue<TPuzzle>.Square
  fullName.vb: SudokuSpice.Data.PossibleSquareValue(Of TPuzzle).Square
  nameWithType: PossibleSquareValue<TPuzzle>.Square
  nameWithType.vb: PossibleSquareValue(Of TPuzzle).Square
- uid: SudokuSpice.Data.PossibleSquareValue`1.State
  name: State
  href: api/SudokuSpice.Data.PossibleSquareValue-1.html#SudokuSpice_Data_PossibleSquareValue_1_State
  commentId: P:SudokuSpice.Data.PossibleSquareValue`1.State
  fullName: SudokuSpice.Data.PossibleSquareValue<TPuzzle>.State
  fullName.vb: SudokuSpice.Data.PossibleSquareValue(Of TPuzzle).State
  nameWithType: PossibleSquareValue<TPuzzle>.State
  nameWithType.vb: PossibleSquareValue(Of TPuzzle).State
- uid: SudokuSpice.Data.PossibleSquareValue`1.State*
  name: State
  href: api/SudokuSpice.Data.PossibleSquareValue-1.html#SudokuSpice_Data_PossibleSquareValue_1_State_
  commentId: Overload:SudokuSpice.Data.PossibleSquareValue`1.State
  isSpec: "True"
  fullName: SudokuSpice.Data.PossibleSquareValue<TPuzzle>.State
  fullName.vb: SudokuSpice.Data.PossibleSquareValue(Of TPuzzle).State
  nameWithType: PossibleSquareValue<TPuzzle>.State
  nameWithType.vb: PossibleSquareValue(Of TPuzzle).State
- uid: SudokuSpice.Data.PossibleSquareValue`1.ValueIndex
  name: ValueIndex
  href: api/SudokuSpice.Data.PossibleSquareValue-1.html#SudokuSpice_Data_PossibleSquareValue_1_ValueIndex
  commentId: P:SudokuSpice.Data.PossibleSquareValue`1.ValueIndex
  fullName: SudokuSpice.Data.PossibleSquareValue<TPuzzle>.ValueIndex
  fullName.vb: SudokuSpice.Data.PossibleSquareValue(Of TPuzzle).ValueIndex
  nameWithType: PossibleSquareValue<TPuzzle>.ValueIndex
  nameWithType.vb: PossibleSquareValue(Of TPuzzle).ValueIndex
- uid: SudokuSpice.Data.PossibleSquareValue`1.ValueIndex*
  name: ValueIndex
  href: api/SudokuSpice.Data.PossibleSquareValue-1.html#SudokuSpice_Data_PossibleSquareValue_1_ValueIndex_
  commentId: Overload:SudokuSpice.Data.PossibleSquareValue`1.ValueIndex
  isSpec: "True"
  fullName: SudokuSpice.Data.PossibleSquareValue<TPuzzle>.ValueIndex
  fullName.vb: SudokuSpice.Data.PossibleSquareValue(Of TPuzzle).ValueIndex
  nameWithType: PossibleSquareValue<TPuzzle>.ValueIndex
  nameWithType.vb: PossibleSquareValue(Of TPuzzle).ValueIndex
- uid: SudokuSpice.Data.PossibleValues
  name: PossibleValues
  href: api/SudokuSpice.Data.PossibleValues.html
  commentId: T:SudokuSpice.Data.PossibleValues
  fullName: SudokuSpice.Data.PossibleValues
  nameWithType: PossibleValues
- uid: SudokuSpice.Data.PossibleValues.#ctor(SudokuSpice.Data.PossibleValues)
  name: PossibleValues(PossibleValues)
  href: api/SudokuSpice.Data.PossibleValues.html#SudokuSpice_Data_PossibleValues__ctor_SudokuSpice_Data_PossibleValues_
  commentId: M:SudokuSpice.Data.PossibleValues.#ctor(SudokuSpice.Data.PossibleValues)
  fullName: SudokuSpice.Data.PossibleValues.PossibleValues(SudokuSpice.Data.PossibleValues)
  nameWithType: PossibleValues.PossibleValues(PossibleValues)
- uid: SudokuSpice.Data.PossibleValues.#ctor(SudokuSpice.IReadOnlyPuzzle)
  name: PossibleValues(IReadOnlyPuzzle)
  href: api/SudokuSpice.Data.PossibleValues.html#SudokuSpice_Data_PossibleValues__ctor_SudokuSpice_IReadOnlyPuzzle_
  commentId: M:SudokuSpice.Data.PossibleValues.#ctor(SudokuSpice.IReadOnlyPuzzle)
  fullName: SudokuSpice.Data.PossibleValues.PossibleValues(SudokuSpice.IReadOnlyPuzzle)
  nameWithType: PossibleValues.PossibleValues(IReadOnlyPuzzle)
- uid: SudokuSpice.Data.PossibleValues.#ctor(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.Data.BitVector)
  name: PossibleValues(IReadOnlyPuzzle, BitVector)
  href: api/SudokuSpice.Data.PossibleValues.html#SudokuSpice_Data_PossibleValues__ctor_SudokuSpice_IReadOnlyPuzzle_SudokuSpice_Data_BitVector_
  commentId: M:SudokuSpice.Data.PossibleValues.#ctor(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.Data.BitVector)
  fullName: SudokuSpice.Data.PossibleValues.PossibleValues(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.Data.BitVector)
  nameWithType: PossibleValues.PossibleValues(IReadOnlyPuzzle, BitVector)
- uid: SudokuSpice.Data.PossibleValues.#ctor*
  name: PossibleValues
  href: api/SudokuSpice.Data.PossibleValues.html#SudokuSpice_Data_PossibleValues__ctor_
  commentId: Overload:SudokuSpice.Data.PossibleValues.#ctor
  isSpec: "True"
  fullName: SudokuSpice.Data.PossibleValues.PossibleValues
  nameWithType: PossibleValues.PossibleValues
- uid: SudokuSpice.Data.PossibleValues.AllPossible
  name: AllPossible
  href: api/SudokuSpice.Data.PossibleValues.html#SudokuSpice_Data_PossibleValues_AllPossible
  commentId: P:SudokuSpice.Data.PossibleValues.AllPossible
  fullName: SudokuSpice.Data.PossibleValues.AllPossible
  nameWithType: PossibleValues.AllPossible
- uid: SudokuSpice.Data.PossibleValues.AllPossible*
  name: AllPossible
  href: api/SudokuSpice.Data.PossibleValues.html#SudokuSpice_Data_PossibleValues_AllPossible_
  commentId: Overload:SudokuSpice.Data.PossibleValues.AllPossible
  isSpec: "True"
  fullName: SudokuSpice.Data.PossibleValues.AllPossible
  nameWithType: PossibleValues.AllPossible
- uid: SudokuSpice.Data.PossibleValues.Intersect(SudokuSpice.Data.Coordinate@,SudokuSpice.Data.BitVector)
  name: Intersect(Coordinate, BitVector)
  href: api/SudokuSpice.Data.PossibleValues.html#SudokuSpice_Data_PossibleValues_Intersect_SudokuSpice_Data_Coordinate__SudokuSpice_Data_BitVector_
  commentId: M:SudokuSpice.Data.PossibleValues.Intersect(SudokuSpice.Data.Coordinate@,SudokuSpice.Data.BitVector)
  name.vb: Intersect(ByRef Coordinate, BitVector)
  fullName: SudokuSpice.Data.PossibleValues.Intersect(SudokuSpice.Data.Coordinate, SudokuSpice.Data.BitVector)
  fullName.vb: SudokuSpice.Data.PossibleValues.Intersect(ByRef SudokuSpice.Data.Coordinate, SudokuSpice.Data.BitVector)
  nameWithType: PossibleValues.Intersect(Coordinate, BitVector)
  nameWithType.vb: PossibleValues.Intersect(ByRef Coordinate, BitVector)
- uid: SudokuSpice.Data.PossibleValues.Intersect*
  name: Intersect
  href: api/SudokuSpice.Data.PossibleValues.html#SudokuSpice_Data_PossibleValues_Intersect_
  commentId: Overload:SudokuSpice.Data.PossibleValues.Intersect
  isSpec: "True"
  fullName: SudokuSpice.Data.PossibleValues.Intersect
  nameWithType: PossibleValues.Intersect
- uid: SudokuSpice.Data.PossibleValues.Item(SudokuSpice.Data.Coordinate@)
  name: Item[Coordinate]
  href: api/SudokuSpice.Data.PossibleValues.html#SudokuSpice_Data_PossibleValues_Item_SudokuSpice_Data_Coordinate__
  commentId: P:SudokuSpice.Data.PossibleValues.Item(SudokuSpice.Data.Coordinate@)
  name.vb: Item(ByRef Coordinate)
  fullName: SudokuSpice.Data.PossibleValues.Item[SudokuSpice.Data.Coordinate]
  fullName.vb: SudokuSpice.Data.PossibleValues.Item(ByRef SudokuSpice.Data.Coordinate)
  nameWithType: PossibleValues.Item[Coordinate]
  nameWithType.vb: PossibleValues.Item(ByRef Coordinate)
- uid: SudokuSpice.Data.PossibleValues.Item*
  name: Item
  href: api/SudokuSpice.Data.PossibleValues.html#SudokuSpice_Data_PossibleValues_Item_
  commentId: Overload:SudokuSpice.Data.PossibleValues.Item
  isSpec: "True"
  fullName: SudokuSpice.Data.PossibleValues.Item
  nameWithType: PossibleValues.Item
- uid: SudokuSpice.Data.PossibleValues.Reset(SudokuSpice.Data.Coordinate@)
  name: Reset(Coordinate)
  href: api/SudokuSpice.Data.PossibleValues.html#SudokuSpice_Data_PossibleValues_Reset_SudokuSpice_Data_Coordinate__
  commentId: M:SudokuSpice.Data.PossibleValues.Reset(SudokuSpice.Data.Coordinate@)
  name.vb: Reset(ByRef Coordinate)
  fullName: SudokuSpice.Data.PossibleValues.Reset(SudokuSpice.Data.Coordinate)
  fullName.vb: SudokuSpice.Data.PossibleValues.Reset(ByRef SudokuSpice.Data.Coordinate)
  nameWithType: PossibleValues.Reset(Coordinate)
  nameWithType.vb: PossibleValues.Reset(ByRef Coordinate)
- uid: SudokuSpice.Data.PossibleValues.Reset*
  name: Reset
  href: api/SudokuSpice.Data.PossibleValues.html#SudokuSpice_Data_PossibleValues_Reset_
  commentId: Overload:SudokuSpice.Data.PossibleValues.Reset
  isSpec: "True"
  fullName: SudokuSpice.Data.PossibleValues.Reset
  nameWithType: PossibleValues.Reset
- uid: SudokuSpice.Data.SolveStats
  name: SolveStats
  href: api/SudokuSpice.Data.SolveStats.html
  commentId: T:SudokuSpice.Data.SolveStats
  fullName: SudokuSpice.Data.SolveStats
  nameWithType: SolveStats
- uid: SudokuSpice.Data.SolveStats.Equals(SudokuSpice.Data.SolveStats)
  name: Equals(SolveStats)
  href: api/SudokuSpice.Data.SolveStats.html#SudokuSpice_Data_SolveStats_Equals_SudokuSpice_Data_SolveStats_
  commentId: M:SudokuSpice.Data.SolveStats.Equals(SudokuSpice.Data.SolveStats)
  fullName: SudokuSpice.Data.SolveStats.Equals(SudokuSpice.Data.SolveStats)
  nameWithType: SolveStats.Equals(SolveStats)
- uid: SudokuSpice.Data.SolveStats.Equals(System.Object)
  name: Equals(Object)
  href: api/SudokuSpice.Data.SolveStats.html#SudokuSpice_Data_SolveStats_Equals_System_Object_
  commentId: M:SudokuSpice.Data.SolveStats.Equals(System.Object)
  fullName: SudokuSpice.Data.SolveStats.Equals(System.Object)
  nameWithType: SolveStats.Equals(Object)
- uid: SudokuSpice.Data.SolveStats.Equals*
  name: Equals
  href: api/SudokuSpice.Data.SolveStats.html#SudokuSpice_Data_SolveStats_Equals_
  commentId: Overload:SudokuSpice.Data.SolveStats.Equals
  isSpec: "True"
  fullName: SudokuSpice.Data.SolveStats.Equals
  nameWithType: SolveStats.Equals
- uid: SudokuSpice.Data.SolveStats.GetHashCode
  name: GetHashCode()
  href: api/SudokuSpice.Data.SolveStats.html#SudokuSpice_Data_SolveStats_GetHashCode
  commentId: M:SudokuSpice.Data.SolveStats.GetHashCode
  fullName: SudokuSpice.Data.SolveStats.GetHashCode()
  nameWithType: SolveStats.GetHashCode()
- uid: SudokuSpice.Data.SolveStats.GetHashCode*
  name: GetHashCode
  href: api/SudokuSpice.Data.SolveStats.html#SudokuSpice_Data_SolveStats_GetHashCode_
  commentId: Overload:SudokuSpice.Data.SolveStats.GetHashCode
  isSpec: "True"
  fullName: SudokuSpice.Data.SolveStats.GetHashCode
  nameWithType: SolveStats.GetHashCode
- uid: SudokuSpice.Data.SolveStats.NumSolutionsFound
  name: NumSolutionsFound
  href: api/SudokuSpice.Data.SolveStats.html#SudokuSpice_Data_SolveStats_NumSolutionsFound
  commentId: P:SudokuSpice.Data.SolveStats.NumSolutionsFound
  fullName: SudokuSpice.Data.SolveStats.NumSolutionsFound
  nameWithType: SolveStats.NumSolutionsFound
- uid: SudokuSpice.Data.SolveStats.NumSolutionsFound*
  name: NumSolutionsFound
  href: api/SudokuSpice.Data.SolveStats.html#SudokuSpice_Data_SolveStats_NumSolutionsFound_
  commentId: Overload:SudokuSpice.Data.SolveStats.NumSolutionsFound
  isSpec: "True"
  fullName: SudokuSpice.Data.SolveStats.NumSolutionsFound
  nameWithType: SolveStats.NumSolutionsFound
- uid: SudokuSpice.Data.SolveStats.NumSquaresGuessed
  name: NumSquaresGuessed
  href: api/SudokuSpice.Data.SolveStats.html#SudokuSpice_Data_SolveStats_NumSquaresGuessed
  commentId: P:SudokuSpice.Data.SolveStats.NumSquaresGuessed
  fullName: SudokuSpice.Data.SolveStats.NumSquaresGuessed
  nameWithType: SolveStats.NumSquaresGuessed
- uid: SudokuSpice.Data.SolveStats.NumSquaresGuessed*
  name: NumSquaresGuessed
  href: api/SudokuSpice.Data.SolveStats.html#SudokuSpice_Data_SolveStats_NumSquaresGuessed_
  commentId: Overload:SudokuSpice.Data.SolveStats.NumSquaresGuessed
  isSpec: "True"
  fullName: SudokuSpice.Data.SolveStats.NumSquaresGuessed
  nameWithType: SolveStats.NumSquaresGuessed
- uid: SudokuSpice.Data.SolveStats.NumTotalGuesses
  name: NumTotalGuesses
  href: api/SudokuSpice.Data.SolveStats.html#SudokuSpice_Data_SolveStats_NumTotalGuesses
  commentId: P:SudokuSpice.Data.SolveStats.NumTotalGuesses
  fullName: SudokuSpice.Data.SolveStats.NumTotalGuesses
  nameWithType: SolveStats.NumTotalGuesses
- uid: SudokuSpice.Data.SolveStats.NumTotalGuesses*
  name: NumTotalGuesses
  href: api/SudokuSpice.Data.SolveStats.html#SudokuSpice_Data_SolveStats_NumTotalGuesses_
  commentId: Overload:SudokuSpice.Data.SolveStats.NumTotalGuesses
  isSpec: "True"
  fullName: SudokuSpice.Data.SolveStats.NumTotalGuesses
  nameWithType: SolveStats.NumTotalGuesses
- uid: SudokuSpice.Data.SolveStats.op_Equality(SudokuSpice.Data.SolveStats,SudokuSpice.Data.SolveStats)
  name: Equality(SolveStats, SolveStats)
  href: api/SudokuSpice.Data.SolveStats.html#SudokuSpice_Data_SolveStats_op_Equality_SudokuSpice_Data_SolveStats_SudokuSpice_Data_SolveStats_
  commentId: M:SudokuSpice.Data.SolveStats.op_Equality(SudokuSpice.Data.SolveStats,SudokuSpice.Data.SolveStats)
  fullName: SudokuSpice.Data.SolveStats.Equality(SudokuSpice.Data.SolveStats, SudokuSpice.Data.SolveStats)
  nameWithType: SolveStats.Equality(SolveStats, SolveStats)
- uid: SudokuSpice.Data.SolveStats.op_Equality*
  name: Equality
  href: api/SudokuSpice.Data.SolveStats.html#SudokuSpice_Data_SolveStats_op_Equality_
  commentId: Overload:SudokuSpice.Data.SolveStats.op_Equality
  isSpec: "True"
  fullName: SudokuSpice.Data.SolveStats.Equality
  nameWithType: SolveStats.Equality
- uid: SudokuSpice.Data.SolveStats.op_Inequality(SudokuSpice.Data.SolveStats,SudokuSpice.Data.SolveStats)
  name: Inequality(SolveStats, SolveStats)
  href: api/SudokuSpice.Data.SolveStats.html#SudokuSpice_Data_SolveStats_op_Inequality_SudokuSpice_Data_SolveStats_SudokuSpice_Data_SolveStats_
  commentId: M:SudokuSpice.Data.SolveStats.op_Inequality(SudokuSpice.Data.SolveStats,SudokuSpice.Data.SolveStats)
  fullName: SudokuSpice.Data.SolveStats.Inequality(SudokuSpice.Data.SolveStats, SudokuSpice.Data.SolveStats)
  nameWithType: SolveStats.Inequality(SolveStats, SolveStats)
- uid: SudokuSpice.Data.SolveStats.op_Inequality*
  name: Inequality
  href: api/SudokuSpice.Data.SolveStats.html#SudokuSpice_Data_SolveStats_op_Inequality_
  commentId: Overload:SudokuSpice.Data.SolveStats.op_Inequality
  isSpec: "True"
  fullName: SudokuSpice.Data.SolveStats.Inequality
  nameWithType: SolveStats.Inequality
- uid: SudokuSpice.Data.SolveStats.ToString
  name: ToString()
  href: api/SudokuSpice.Data.SolveStats.html#SudokuSpice_Data_SolveStats_ToString
  commentId: M:SudokuSpice.Data.SolveStats.ToString
  fullName: SudokuSpice.Data.SolveStats.ToString()
  nameWithType: SolveStats.ToString()
- uid: SudokuSpice.Data.SolveStats.ToString*
  name: ToString
  href: api/SudokuSpice.Data.SolveStats.html#SudokuSpice_Data_SolveStats_ToString_
  commentId: Overload:SudokuSpice.Data.SolveStats.ToString
  isSpec: "True"
  fullName: SudokuSpice.Data.SolveStats.ToString
  nameWithType: SolveStats.ToString
- uid: SudokuSpice.Data.Square`1
  name: Square<TPuzzle>
  href: api/SudokuSpice.Data.Square-1.html
  commentId: T:SudokuSpice.Data.Square`1
  name.vb: Square(Of TPuzzle)
  fullName: SudokuSpice.Data.Square<TPuzzle>
  fullName.vb: SudokuSpice.Data.Square(Of TPuzzle)
  nameWithType: Square<TPuzzle>
  nameWithType.vb: Square(Of TPuzzle)
- uid: SudokuSpice.Data.Square`1.Coordinate
  name: Coordinate
  href: api/SudokuSpice.Data.Square-1.html#SudokuSpice_Data_Square_1_Coordinate
  commentId: P:SudokuSpice.Data.Square`1.Coordinate
  fullName: SudokuSpice.Data.Square<TPuzzle>.Coordinate
  fullName.vb: SudokuSpice.Data.Square(Of TPuzzle).Coordinate
  nameWithType: Square<TPuzzle>.Coordinate
  nameWithType.vb: Square(Of TPuzzle).Coordinate
- uid: SudokuSpice.Data.Square`1.Coordinate*
  name: Coordinate
  href: api/SudokuSpice.Data.Square-1.html#SudokuSpice_Data_Square_1_Coordinate_
  commentId: Overload:SudokuSpice.Data.Square`1.Coordinate
  isSpec: "True"
  fullName: SudokuSpice.Data.Square<TPuzzle>.Coordinate
  fullName.vb: SudokuSpice.Data.Square(Of TPuzzle).Coordinate
  nameWithType: Square<TPuzzle>.Coordinate
  nameWithType.vb: Square(Of TPuzzle).Coordinate
- uid: SudokuSpice.Data.Square`1.GetPossibleValue(System.Int32)
  name: GetPossibleValue(Int32)
  href: api/SudokuSpice.Data.Square-1.html#SudokuSpice_Data_Square_1_GetPossibleValue_System_Int32_
  commentId: M:SudokuSpice.Data.Square`1.GetPossibleValue(System.Int32)
  fullName: SudokuSpice.Data.Square<TPuzzle>.GetPossibleValue(System.Int32)
  fullName.vb: SudokuSpice.Data.Square(Of TPuzzle).GetPossibleValue(System.Int32)
  nameWithType: Square<TPuzzle>.GetPossibleValue(Int32)
  nameWithType.vb: Square(Of TPuzzle).GetPossibleValue(Int32)
- uid: SudokuSpice.Data.Square`1.GetPossibleValue*
  name: GetPossibleValue
  href: api/SudokuSpice.Data.Square-1.html#SudokuSpice_Data_Square_1_GetPossibleValue_
  commentId: Overload:SudokuSpice.Data.Square`1.GetPossibleValue
  isSpec: "True"
  fullName: SudokuSpice.Data.Square<TPuzzle>.GetPossibleValue
  fullName.vb: SudokuSpice.Data.Square(Of TPuzzle).GetPossibleValue
  nameWithType: Square<TPuzzle>.GetPossibleValue
  nameWithType.vb: Square(Of TPuzzle).GetPossibleValue
- uid: SudokuSpice.Data.Square`1.IsSet
  name: IsSet
  href: api/SudokuSpice.Data.Square-1.html#SudokuSpice_Data_Square_1_IsSet
  commentId: P:SudokuSpice.Data.Square`1.IsSet
  fullName: SudokuSpice.Data.Square<TPuzzle>.IsSet
  fullName.vb: SudokuSpice.Data.Square(Of TPuzzle).IsSet
  nameWithType: Square<TPuzzle>.IsSet
  nameWithType.vb: Square(Of TPuzzle).IsSet
- uid: SudokuSpice.Data.Square`1.IsSet*
  name: IsSet
  href: api/SudokuSpice.Data.Square-1.html#SudokuSpice_Data_Square_1_IsSet_
  commentId: Overload:SudokuSpice.Data.Square`1.IsSet
  isSpec: "True"
  fullName: SudokuSpice.Data.Square<TPuzzle>.IsSet
  fullName.vb: SudokuSpice.Data.Square(Of TPuzzle).IsSet
  nameWithType: Square<TPuzzle>.IsSet
  nameWithType.vb: Square(Of TPuzzle).IsSet
- uid: SudokuSpice.Data.Square`1.NumPossibleValues
  name: NumPossibleValues
  href: api/SudokuSpice.Data.Square-1.html#SudokuSpice_Data_Square_1_NumPossibleValues
  commentId: P:SudokuSpice.Data.Square`1.NumPossibleValues
  fullName: SudokuSpice.Data.Square<TPuzzle>.NumPossibleValues
  fullName.vb: SudokuSpice.Data.Square(Of TPuzzle).NumPossibleValues
  nameWithType: Square<TPuzzle>.NumPossibleValues
  nameWithType.vb: Square(Of TPuzzle).NumPossibleValues
- uid: SudokuSpice.Data.Square`1.NumPossibleValues*
  name: NumPossibleValues
  href: api/SudokuSpice.Data.Square-1.html#SudokuSpice_Data_Square_1_NumPossibleValues_
  commentId: Overload:SudokuSpice.Data.Square`1.NumPossibleValues
  isSpec: "True"
  fullName: SudokuSpice.Data.Square<TPuzzle>.NumPossibleValues
  fullName.vb: SudokuSpice.Data.Square(Of TPuzzle).NumPossibleValues
  nameWithType: Square<TPuzzle>.NumPossibleValues
  nameWithType.vb: Square(Of TPuzzle).NumPossibleValues
- uid: SudokuSpice.Heuristics
  name: SudokuSpice.Heuristics
  href: api/SudokuSpice.Heuristics.html
  commentId: N:SudokuSpice.Heuristics
  fullName: SudokuSpice.Heuristics
  nameWithType: SudokuSpice.Heuristics
- uid: SudokuSpice.Heuristics.ISudokuHeuristic
  name: ISudokuHeuristic
  href: api/SudokuSpice.Heuristics.ISudokuHeuristic.html
  commentId: T:SudokuSpice.Heuristics.ISudokuHeuristic
  fullName: SudokuSpice.Heuristics.ISudokuHeuristic
  nameWithType: ISudokuHeuristic
- uid: SudokuSpice.Heuristics.ISudokuHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.Data.PossibleValues,System.Collections.Generic.IReadOnlyList{SudokuSpice.Rules.ISudokuRule})
  name: CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues, IReadOnlyList<ISudokuRule>)
  href: api/SudokuSpice.Heuristics.ISudokuHeuristic.html#SudokuSpice_Heuristics_ISudokuHeuristic_CopyWithNewReferences_SudokuSpice_IReadOnlyPuzzle_SudokuSpice_Data_PossibleValues_System_Collections_Generic_IReadOnlyList_SudokuSpice_Rules_ISudokuRule__
  commentId: M:SudokuSpice.Heuristics.ISudokuHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.Data.PossibleValues,System.Collections.Generic.IReadOnlyList{SudokuSpice.Rules.ISudokuRule})
  name.vb: CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues, IReadOnlyList(Of ISudokuRule))
  fullName: SudokuSpice.Heuristics.ISudokuHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.Data.PossibleValues, System.Collections.Generic.IReadOnlyList<SudokuSpice.Rules.ISudokuRule>)
  fullName.vb: SudokuSpice.Heuristics.ISudokuHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.Data.PossibleValues, System.Collections.Generic.IReadOnlyList(Of SudokuSpice.Rules.ISudokuRule))
  nameWithType: ISudokuHeuristic.CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues, IReadOnlyList<ISudokuRule>)
  nameWithType.vb: ISudokuHeuristic.CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues, IReadOnlyList(Of ISudokuRule))
- uid: SudokuSpice.Heuristics.ISudokuHeuristic.CopyWithNewReferences*
  name: CopyWithNewReferences
  href: api/SudokuSpice.Heuristics.ISudokuHeuristic.html#SudokuSpice_Heuristics_ISudokuHeuristic_CopyWithNewReferences_
  commentId: Overload:SudokuSpice.Heuristics.ISudokuHeuristic.CopyWithNewReferences
  isSpec: "True"
  fullName: SudokuSpice.Heuristics.ISudokuHeuristic.CopyWithNewReferences
  nameWithType: ISudokuHeuristic.CopyWithNewReferences
- uid: SudokuSpice.Heuristics.ISudokuHeuristic.UndoLastUpdate
  name: UndoLastUpdate()
  href: api/SudokuSpice.Heuristics.ISudokuHeuristic.html#SudokuSpice_Heuristics_ISudokuHeuristic_UndoLastUpdate
  commentId: M:SudokuSpice.Heuristics.ISudokuHeuristic.UndoLastUpdate
  fullName: SudokuSpice.Heuristics.ISudokuHeuristic.UndoLastUpdate()
  nameWithType: ISudokuHeuristic.UndoLastUpdate()
- uid: SudokuSpice.Heuristics.ISudokuHeuristic.UndoLastUpdate*
  name: UndoLastUpdate
  href: api/SudokuSpice.Heuristics.ISudokuHeuristic.html#SudokuSpice_Heuristics_ISudokuHeuristic_UndoLastUpdate_
  commentId: Overload:SudokuSpice.Heuristics.ISudokuHeuristic.UndoLastUpdate
  isSpec: "True"
  fullName: SudokuSpice.Heuristics.ISudokuHeuristic.UndoLastUpdate
  nameWithType: ISudokuHeuristic.UndoLastUpdate
- uid: SudokuSpice.Heuristics.ISudokuHeuristic.UpdateAll
  name: UpdateAll()
  href: api/SudokuSpice.Heuristics.ISudokuHeuristic.html#SudokuSpice_Heuristics_ISudokuHeuristic_UpdateAll
  commentId: M:SudokuSpice.Heuristics.ISudokuHeuristic.UpdateAll
  fullName: SudokuSpice.Heuristics.ISudokuHeuristic.UpdateAll()
  nameWithType: ISudokuHeuristic.UpdateAll()
- uid: SudokuSpice.Heuristics.ISudokuHeuristic.UpdateAll*
  name: UpdateAll
  href: api/SudokuSpice.Heuristics.ISudokuHeuristic.html#SudokuSpice_Heuristics_ISudokuHeuristic_UpdateAll_
  commentId: Overload:SudokuSpice.Heuristics.ISudokuHeuristic.UpdateAll
  isSpec: "True"
  fullName: SudokuSpice.Heuristics.ISudokuHeuristic.UpdateAll
  nameWithType: ISudokuHeuristic.UpdateAll
- uid: SudokuSpice.Heuristics.StandardHeuristic
  name: StandardHeuristic
  href: api/SudokuSpice.Heuristics.StandardHeuristic.html
  commentId: T:SudokuSpice.Heuristics.StandardHeuristic
  fullName: SudokuSpice.Heuristics.StandardHeuristic
  nameWithType: StandardHeuristic
- uid: SudokuSpice.Heuristics.StandardHeuristic.#ctor(SudokuSpice.IReadOnlyBoxPuzzle,SudokuSpice.Data.PossibleValues,SudokuSpice.Rules.IMissingRowValuesTracker,SudokuSpice.Rules.IMissingColumnValuesTracker,SudokuSpice.Rules.IMissingBoxValuesTracker)
  name: StandardHeuristic(IReadOnlyBoxPuzzle, PossibleValues, IMissingRowValuesTracker, IMissingColumnValuesTracker, IMissingBoxValuesTracker)
  href: api/SudokuSpice.Heuristics.StandardHeuristic.html#SudokuSpice_Heuristics_StandardHeuristic__ctor_SudokuSpice_IReadOnlyBoxPuzzle_SudokuSpice_Data_PossibleValues_SudokuSpice_Rules_IMissingRowValuesTracker_SudokuSpice_Rules_IMissingColumnValuesTracker_SudokuSpice_Rules_IMissingBoxValuesTracker_
  commentId: M:SudokuSpice.Heuristics.StandardHeuristic.#ctor(SudokuSpice.IReadOnlyBoxPuzzle,SudokuSpice.Data.PossibleValues,SudokuSpice.Rules.IMissingRowValuesTracker,SudokuSpice.Rules.IMissingColumnValuesTracker,SudokuSpice.Rules.IMissingBoxValuesTracker)
  fullName: SudokuSpice.Heuristics.StandardHeuristic.StandardHeuristic(SudokuSpice.IReadOnlyBoxPuzzle, SudokuSpice.Data.PossibleValues, SudokuSpice.Rules.IMissingRowValuesTracker, SudokuSpice.Rules.IMissingColumnValuesTracker, SudokuSpice.Rules.IMissingBoxValuesTracker)
  nameWithType: StandardHeuristic.StandardHeuristic(IReadOnlyBoxPuzzle, PossibleValues, IMissingRowValuesTracker, IMissingColumnValuesTracker, IMissingBoxValuesTracker)
- uid: SudokuSpice.Heuristics.StandardHeuristic.#ctor*
  name: StandardHeuristic
  href: api/SudokuSpice.Heuristics.StandardHeuristic.html#SudokuSpice_Heuristics_StandardHeuristic__ctor_
  commentId: Overload:SudokuSpice.Heuristics.StandardHeuristic.#ctor
  isSpec: "True"
  fullName: SudokuSpice.Heuristics.StandardHeuristic.StandardHeuristic
  nameWithType: StandardHeuristic.StandardHeuristic
- uid: SudokuSpice.Heuristics.StandardHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.Data.PossibleValues,System.Collections.Generic.IReadOnlyList{SudokuSpice.Rules.ISudokuRule})
  name: CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues, IReadOnlyList<ISudokuRule>)
  href: api/SudokuSpice.Heuristics.StandardHeuristic.html#SudokuSpice_Heuristics_StandardHeuristic_CopyWithNewReferences_SudokuSpice_IReadOnlyPuzzle_SudokuSpice_Data_PossibleValues_System_Collections_Generic_IReadOnlyList_SudokuSpice_Rules_ISudokuRule__
  commentId: M:SudokuSpice.Heuristics.StandardHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.Data.PossibleValues,System.Collections.Generic.IReadOnlyList{SudokuSpice.Rules.ISudokuRule})
  name.vb: CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues, IReadOnlyList(Of ISudokuRule))
  fullName: SudokuSpice.Heuristics.StandardHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.Data.PossibleValues, System.Collections.Generic.IReadOnlyList<SudokuSpice.Rules.ISudokuRule>)
  fullName.vb: SudokuSpice.Heuristics.StandardHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.Data.PossibleValues, System.Collections.Generic.IReadOnlyList(Of SudokuSpice.Rules.ISudokuRule))
  nameWithType: StandardHeuristic.CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues, IReadOnlyList<ISudokuRule>)
  nameWithType.vb: StandardHeuristic.CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues, IReadOnlyList(Of ISudokuRule))
- uid: SudokuSpice.Heuristics.StandardHeuristic.CopyWithNewReferences*
  name: CopyWithNewReferences
  href: api/SudokuSpice.Heuristics.StandardHeuristic.html#SudokuSpice_Heuristics_StandardHeuristic_CopyWithNewReferences_
  commentId: Overload:SudokuSpice.Heuristics.StandardHeuristic.CopyWithNewReferences
  isSpec: "True"
  fullName: SudokuSpice.Heuristics.StandardHeuristic.CopyWithNewReferences
  nameWithType: StandardHeuristic.CopyWithNewReferences
- uid: SudokuSpice.Heuristics.StandardHeuristic.UndoLastUpdate
  name: UndoLastUpdate()
  href: api/SudokuSpice.Heuristics.StandardHeuristic.html#SudokuSpice_Heuristics_StandardHeuristic_UndoLastUpdate
  commentId: M:SudokuSpice.Heuristics.StandardHeuristic.UndoLastUpdate
  fullName: SudokuSpice.Heuristics.StandardHeuristic.UndoLastUpdate()
  nameWithType: StandardHeuristic.UndoLastUpdate()
- uid: SudokuSpice.Heuristics.StandardHeuristic.UndoLastUpdate*
  name: UndoLastUpdate
  href: api/SudokuSpice.Heuristics.StandardHeuristic.html#SudokuSpice_Heuristics_StandardHeuristic_UndoLastUpdate_
  commentId: Overload:SudokuSpice.Heuristics.StandardHeuristic.UndoLastUpdate
  isSpec: "True"
  fullName: SudokuSpice.Heuristics.StandardHeuristic.UndoLastUpdate
  nameWithType: StandardHeuristic.UndoLastUpdate
- uid: SudokuSpice.Heuristics.StandardHeuristic.UpdateAll
  name: UpdateAll()
  href: api/SudokuSpice.Heuristics.StandardHeuristic.html#SudokuSpice_Heuristics_StandardHeuristic_UpdateAll
  commentId: M:SudokuSpice.Heuristics.StandardHeuristic.UpdateAll
  fullName: SudokuSpice.Heuristics.StandardHeuristic.UpdateAll()
  nameWithType: StandardHeuristic.UpdateAll()
- uid: SudokuSpice.Heuristics.StandardHeuristic.UpdateAll*
  name: UpdateAll
  href: api/SudokuSpice.Heuristics.StandardHeuristic.html#SudokuSpice_Heuristics_StandardHeuristic_UpdateAll_
  commentId: Overload:SudokuSpice.Heuristics.StandardHeuristic.UpdateAll
  isSpec: "True"
  fullName: SudokuSpice.Heuristics.StandardHeuristic.UpdateAll
  nameWithType: StandardHeuristic.UpdateAll
- uid: SudokuSpice.Heuristics.UniqueInBoxHeuristic
  name: UniqueInBoxHeuristic
  href: api/SudokuSpice.Heuristics.UniqueInBoxHeuristic.html
  commentId: T:SudokuSpice.Heuristics.UniqueInBoxHeuristic
  fullName: SudokuSpice.Heuristics.UniqueInBoxHeuristic
  nameWithType: UniqueInBoxHeuristic
- uid: SudokuSpice.Heuristics.UniqueInBoxHeuristic.#ctor(SudokuSpice.IReadOnlyBoxPuzzle,SudokuSpice.Data.PossibleValues,SudokuSpice.Rules.IMissingBoxValuesTracker)
  name: UniqueInBoxHeuristic(IReadOnlyBoxPuzzle, PossibleValues, IMissingBoxValuesTracker)
  href: api/SudokuSpice.Heuristics.UniqueInBoxHeuristic.html#SudokuSpice_Heuristics_UniqueInBoxHeuristic__ctor_SudokuSpice_IReadOnlyBoxPuzzle_SudokuSpice_Data_PossibleValues_SudokuSpice_Rules_IMissingBoxValuesTracker_
  commentId: M:SudokuSpice.Heuristics.UniqueInBoxHeuristic.#ctor(SudokuSpice.IReadOnlyBoxPuzzle,SudokuSpice.Data.PossibleValues,SudokuSpice.Rules.IMissingBoxValuesTracker)
  fullName: SudokuSpice.Heuristics.UniqueInBoxHeuristic.UniqueInBoxHeuristic(SudokuSpice.IReadOnlyBoxPuzzle, SudokuSpice.Data.PossibleValues, SudokuSpice.Rules.IMissingBoxValuesTracker)
  nameWithType: UniqueInBoxHeuristic.UniqueInBoxHeuristic(IReadOnlyBoxPuzzle, PossibleValues, IMissingBoxValuesTracker)
- uid: SudokuSpice.Heuristics.UniqueInBoxHeuristic.#ctor*
  name: UniqueInBoxHeuristic
  href: api/SudokuSpice.Heuristics.UniqueInBoxHeuristic.html#SudokuSpice_Heuristics_UniqueInBoxHeuristic__ctor_
  commentId: Overload:SudokuSpice.Heuristics.UniqueInBoxHeuristic.#ctor
  isSpec: "True"
  fullName: SudokuSpice.Heuristics.UniqueInBoxHeuristic.UniqueInBoxHeuristic
  nameWithType: UniqueInBoxHeuristic.UniqueInBoxHeuristic
- uid: SudokuSpice.Heuristics.UniqueInBoxHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.Data.PossibleValues,System.Collections.Generic.IReadOnlyList{SudokuSpice.Rules.ISudokuRule})
  name: CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues, IReadOnlyList<ISudokuRule>)
  href: api/SudokuSpice.Heuristics.UniqueInBoxHeuristic.html#SudokuSpice_Heuristics_UniqueInBoxHeuristic_CopyWithNewReferences_SudokuSpice_IReadOnlyPuzzle_SudokuSpice_Data_PossibleValues_System_Collections_Generic_IReadOnlyList_SudokuSpice_Rules_ISudokuRule__
  commentId: M:SudokuSpice.Heuristics.UniqueInBoxHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.Data.PossibleValues,System.Collections.Generic.IReadOnlyList{SudokuSpice.Rules.ISudokuRule})
  name.vb: CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues, IReadOnlyList(Of ISudokuRule))
  fullName: SudokuSpice.Heuristics.UniqueInBoxHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.Data.PossibleValues, System.Collections.Generic.IReadOnlyList<SudokuSpice.Rules.ISudokuRule>)
  fullName.vb: SudokuSpice.Heuristics.UniqueInBoxHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.Data.PossibleValues, System.Collections.Generic.IReadOnlyList(Of SudokuSpice.Rules.ISudokuRule))
  nameWithType: UniqueInBoxHeuristic.CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues, IReadOnlyList<ISudokuRule>)
  nameWithType.vb: UniqueInBoxHeuristic.CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues, IReadOnlyList(Of ISudokuRule))
- uid: SudokuSpice.Heuristics.UniqueInBoxHeuristic.CopyWithNewReferences*
  name: CopyWithNewReferences
  href: api/SudokuSpice.Heuristics.UniqueInBoxHeuristic.html#SudokuSpice_Heuristics_UniqueInBoxHeuristic_CopyWithNewReferences_
  commentId: Overload:SudokuSpice.Heuristics.UniqueInBoxHeuristic.CopyWithNewReferences
  isSpec: "True"
  fullName: SudokuSpice.Heuristics.UniqueInBoxHeuristic.CopyWithNewReferences
  nameWithType: UniqueInBoxHeuristic.CopyWithNewReferences
- uid: SudokuSpice.Heuristics.UniqueInBoxHeuristic.UndoLastUpdate
  name: UndoLastUpdate()
  href: api/SudokuSpice.Heuristics.UniqueInBoxHeuristic.html#SudokuSpice_Heuristics_UniqueInBoxHeuristic_UndoLastUpdate
  commentId: M:SudokuSpice.Heuristics.UniqueInBoxHeuristic.UndoLastUpdate
  fullName: SudokuSpice.Heuristics.UniqueInBoxHeuristic.UndoLastUpdate()
  nameWithType: UniqueInBoxHeuristic.UndoLastUpdate()
- uid: SudokuSpice.Heuristics.UniqueInBoxHeuristic.UndoLastUpdate*
  name: UndoLastUpdate
  href: api/SudokuSpice.Heuristics.UniqueInBoxHeuristic.html#SudokuSpice_Heuristics_UniqueInBoxHeuristic_UndoLastUpdate_
  commentId: Overload:SudokuSpice.Heuristics.UniqueInBoxHeuristic.UndoLastUpdate
  isSpec: "True"
  fullName: SudokuSpice.Heuristics.UniqueInBoxHeuristic.UndoLastUpdate
  nameWithType: UniqueInBoxHeuristic.UndoLastUpdate
- uid: SudokuSpice.Heuristics.UniqueInBoxHeuristic.UpdateAll
  name: UpdateAll()
  href: api/SudokuSpice.Heuristics.UniqueInBoxHeuristic.html#SudokuSpice_Heuristics_UniqueInBoxHeuristic_UpdateAll
  commentId: M:SudokuSpice.Heuristics.UniqueInBoxHeuristic.UpdateAll
  fullName: SudokuSpice.Heuristics.UniqueInBoxHeuristic.UpdateAll()
  nameWithType: UniqueInBoxHeuristic.UpdateAll()
- uid: SudokuSpice.Heuristics.UniqueInBoxHeuristic.UpdateAll*
  name: UpdateAll
  href: api/SudokuSpice.Heuristics.UniqueInBoxHeuristic.html#SudokuSpice_Heuristics_UniqueInBoxHeuristic_UpdateAll_
  commentId: Overload:SudokuSpice.Heuristics.UniqueInBoxHeuristic.UpdateAll
  isSpec: "True"
  fullName: SudokuSpice.Heuristics.UniqueInBoxHeuristic.UpdateAll
  nameWithType: UniqueInBoxHeuristic.UpdateAll
- uid: SudokuSpice.Heuristics.UniqueInColumnHeuristic
  name: UniqueInColumnHeuristic
  href: api/SudokuSpice.Heuristics.UniqueInColumnHeuristic.html
  commentId: T:SudokuSpice.Heuristics.UniqueInColumnHeuristic
  fullName: SudokuSpice.Heuristics.UniqueInColumnHeuristic
  nameWithType: UniqueInColumnHeuristic
- uid: SudokuSpice.Heuristics.UniqueInColumnHeuristic.#ctor(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.Data.PossibleValues,SudokuSpice.Rules.IMissingColumnValuesTracker)
  name: UniqueInColumnHeuristic(IReadOnlyPuzzle, PossibleValues, IMissingColumnValuesTracker)
  href: api/SudokuSpice.Heuristics.UniqueInColumnHeuristic.html#SudokuSpice_Heuristics_UniqueInColumnHeuristic__ctor_SudokuSpice_IReadOnlyPuzzle_SudokuSpice_Data_PossibleValues_SudokuSpice_Rules_IMissingColumnValuesTracker_
  commentId: M:SudokuSpice.Heuristics.UniqueInColumnHeuristic.#ctor(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.Data.PossibleValues,SudokuSpice.Rules.IMissingColumnValuesTracker)
  fullName: SudokuSpice.Heuristics.UniqueInColumnHeuristic.UniqueInColumnHeuristic(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.Data.PossibleValues, SudokuSpice.Rules.IMissingColumnValuesTracker)
  nameWithType: UniqueInColumnHeuristic.UniqueInColumnHeuristic(IReadOnlyPuzzle, PossibleValues, IMissingColumnValuesTracker)
- uid: SudokuSpice.Heuristics.UniqueInColumnHeuristic.#ctor*
  name: UniqueInColumnHeuristic
  href: api/SudokuSpice.Heuristics.UniqueInColumnHeuristic.html#SudokuSpice_Heuristics_UniqueInColumnHeuristic__ctor_
  commentId: Overload:SudokuSpice.Heuristics.UniqueInColumnHeuristic.#ctor
  isSpec: "True"
  fullName: SudokuSpice.Heuristics.UniqueInColumnHeuristic.UniqueInColumnHeuristic
  nameWithType: UniqueInColumnHeuristic.UniqueInColumnHeuristic
- uid: SudokuSpice.Heuristics.UniqueInColumnHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.Data.PossibleValues,System.Collections.Generic.IReadOnlyList{SudokuSpice.Rules.ISudokuRule})
  name: CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues, IReadOnlyList<ISudokuRule>)
  href: api/SudokuSpice.Heuristics.UniqueInColumnHeuristic.html#SudokuSpice_Heuristics_UniqueInColumnHeuristic_CopyWithNewReferences_SudokuSpice_IReadOnlyPuzzle_SudokuSpice_Data_PossibleValues_System_Collections_Generic_IReadOnlyList_SudokuSpice_Rules_ISudokuRule__
  commentId: M:SudokuSpice.Heuristics.UniqueInColumnHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.Data.PossibleValues,System.Collections.Generic.IReadOnlyList{SudokuSpice.Rules.ISudokuRule})
  name.vb: CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues, IReadOnlyList(Of ISudokuRule))
  fullName: SudokuSpice.Heuristics.UniqueInColumnHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.Data.PossibleValues, System.Collections.Generic.IReadOnlyList<SudokuSpice.Rules.ISudokuRule>)
  fullName.vb: SudokuSpice.Heuristics.UniqueInColumnHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.Data.PossibleValues, System.Collections.Generic.IReadOnlyList(Of SudokuSpice.Rules.ISudokuRule))
  nameWithType: UniqueInColumnHeuristic.CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues, IReadOnlyList<ISudokuRule>)
  nameWithType.vb: UniqueInColumnHeuristic.CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues, IReadOnlyList(Of ISudokuRule))
- uid: SudokuSpice.Heuristics.UniqueInColumnHeuristic.CopyWithNewReferences*
  name: CopyWithNewReferences
  href: api/SudokuSpice.Heuristics.UniqueInColumnHeuristic.html#SudokuSpice_Heuristics_UniqueInColumnHeuristic_CopyWithNewReferences_
  commentId: Overload:SudokuSpice.Heuristics.UniqueInColumnHeuristic.CopyWithNewReferences
  isSpec: "True"
  fullName: SudokuSpice.Heuristics.UniqueInColumnHeuristic.CopyWithNewReferences
  nameWithType: UniqueInColumnHeuristic.CopyWithNewReferences
- uid: SudokuSpice.Heuristics.UniqueInColumnHeuristic.UndoLastUpdate
  name: UndoLastUpdate()
  href: api/SudokuSpice.Heuristics.UniqueInColumnHeuristic.html#SudokuSpice_Heuristics_UniqueInColumnHeuristic_UndoLastUpdate
  commentId: M:SudokuSpice.Heuristics.UniqueInColumnHeuristic.UndoLastUpdate
  fullName: SudokuSpice.Heuristics.UniqueInColumnHeuristic.UndoLastUpdate()
  nameWithType: UniqueInColumnHeuristic.UndoLastUpdate()
- uid: SudokuSpice.Heuristics.UniqueInColumnHeuristic.UndoLastUpdate*
  name: UndoLastUpdate
  href: api/SudokuSpice.Heuristics.UniqueInColumnHeuristic.html#SudokuSpice_Heuristics_UniqueInColumnHeuristic_UndoLastUpdate_
  commentId: Overload:SudokuSpice.Heuristics.UniqueInColumnHeuristic.UndoLastUpdate
  isSpec: "True"
  fullName: SudokuSpice.Heuristics.UniqueInColumnHeuristic.UndoLastUpdate
  nameWithType: UniqueInColumnHeuristic.UndoLastUpdate
- uid: SudokuSpice.Heuristics.UniqueInColumnHeuristic.UpdateAll
  name: UpdateAll()
  href: api/SudokuSpice.Heuristics.UniqueInColumnHeuristic.html#SudokuSpice_Heuristics_UniqueInColumnHeuristic_UpdateAll
  commentId: M:SudokuSpice.Heuristics.UniqueInColumnHeuristic.UpdateAll
  fullName: SudokuSpice.Heuristics.UniqueInColumnHeuristic.UpdateAll()
  nameWithType: UniqueInColumnHeuristic.UpdateAll()
- uid: SudokuSpice.Heuristics.UniqueInColumnHeuristic.UpdateAll*
  name: UpdateAll
  href: api/SudokuSpice.Heuristics.UniqueInColumnHeuristic.html#SudokuSpice_Heuristics_UniqueInColumnHeuristic_UpdateAll_
  commentId: Overload:SudokuSpice.Heuristics.UniqueInColumnHeuristic.UpdateAll
  isSpec: "True"
  fullName: SudokuSpice.Heuristics.UniqueInColumnHeuristic.UpdateAll
  nameWithType: UniqueInColumnHeuristic.UpdateAll
- uid: SudokuSpice.Heuristics.UniqueInRowHeuristic
  name: UniqueInRowHeuristic
  href: api/SudokuSpice.Heuristics.UniqueInRowHeuristic.html
  commentId: T:SudokuSpice.Heuristics.UniqueInRowHeuristic
  fullName: SudokuSpice.Heuristics.UniqueInRowHeuristic
  nameWithType: UniqueInRowHeuristic
- uid: SudokuSpice.Heuristics.UniqueInRowHeuristic.#ctor(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.Data.PossibleValues,SudokuSpice.Rules.IMissingRowValuesTracker)
  name: UniqueInRowHeuristic(IReadOnlyPuzzle, PossibleValues, IMissingRowValuesTracker)
  href: api/SudokuSpice.Heuristics.UniqueInRowHeuristic.html#SudokuSpice_Heuristics_UniqueInRowHeuristic__ctor_SudokuSpice_IReadOnlyPuzzle_SudokuSpice_Data_PossibleValues_SudokuSpice_Rules_IMissingRowValuesTracker_
  commentId: M:SudokuSpice.Heuristics.UniqueInRowHeuristic.#ctor(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.Data.PossibleValues,SudokuSpice.Rules.IMissingRowValuesTracker)
  fullName: SudokuSpice.Heuristics.UniqueInRowHeuristic.UniqueInRowHeuristic(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.Data.PossibleValues, SudokuSpice.Rules.IMissingRowValuesTracker)
  nameWithType: UniqueInRowHeuristic.UniqueInRowHeuristic(IReadOnlyPuzzle, PossibleValues, IMissingRowValuesTracker)
- uid: SudokuSpice.Heuristics.UniqueInRowHeuristic.#ctor*
  name: UniqueInRowHeuristic
  href: api/SudokuSpice.Heuristics.UniqueInRowHeuristic.html#SudokuSpice_Heuristics_UniqueInRowHeuristic__ctor_
  commentId: Overload:SudokuSpice.Heuristics.UniqueInRowHeuristic.#ctor
  isSpec: "True"
  fullName: SudokuSpice.Heuristics.UniqueInRowHeuristic.UniqueInRowHeuristic
  nameWithType: UniqueInRowHeuristic.UniqueInRowHeuristic
- uid: SudokuSpice.Heuristics.UniqueInRowHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.Data.PossibleValues,System.Collections.Generic.IReadOnlyList{SudokuSpice.Rules.ISudokuRule})
  name: CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues, IReadOnlyList<ISudokuRule>)
  href: api/SudokuSpice.Heuristics.UniqueInRowHeuristic.html#SudokuSpice_Heuristics_UniqueInRowHeuristic_CopyWithNewReferences_SudokuSpice_IReadOnlyPuzzle_SudokuSpice_Data_PossibleValues_System_Collections_Generic_IReadOnlyList_SudokuSpice_Rules_ISudokuRule__
  commentId: M:SudokuSpice.Heuristics.UniqueInRowHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.Data.PossibleValues,System.Collections.Generic.IReadOnlyList{SudokuSpice.Rules.ISudokuRule})
  name.vb: CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues, IReadOnlyList(Of ISudokuRule))
  fullName: SudokuSpice.Heuristics.UniqueInRowHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.Data.PossibleValues, System.Collections.Generic.IReadOnlyList<SudokuSpice.Rules.ISudokuRule>)
  fullName.vb: SudokuSpice.Heuristics.UniqueInRowHeuristic.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.Data.PossibleValues, System.Collections.Generic.IReadOnlyList(Of SudokuSpice.Rules.ISudokuRule))
  nameWithType: UniqueInRowHeuristic.CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues, IReadOnlyList<ISudokuRule>)
  nameWithType.vb: UniqueInRowHeuristic.CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues, IReadOnlyList(Of ISudokuRule))
- uid: SudokuSpice.Heuristics.UniqueInRowHeuristic.CopyWithNewReferences*
  name: CopyWithNewReferences
  href: api/SudokuSpice.Heuristics.UniqueInRowHeuristic.html#SudokuSpice_Heuristics_UniqueInRowHeuristic_CopyWithNewReferences_
  commentId: Overload:SudokuSpice.Heuristics.UniqueInRowHeuristic.CopyWithNewReferences
  isSpec: "True"
  fullName: SudokuSpice.Heuristics.UniqueInRowHeuristic.CopyWithNewReferences
  nameWithType: UniqueInRowHeuristic.CopyWithNewReferences
- uid: SudokuSpice.Heuristics.UniqueInRowHeuristic.UndoLastUpdate
  name: UndoLastUpdate()
  href: api/SudokuSpice.Heuristics.UniqueInRowHeuristic.html#SudokuSpice_Heuristics_UniqueInRowHeuristic_UndoLastUpdate
  commentId: M:SudokuSpice.Heuristics.UniqueInRowHeuristic.UndoLastUpdate
  fullName: SudokuSpice.Heuristics.UniqueInRowHeuristic.UndoLastUpdate()
  nameWithType: UniqueInRowHeuristic.UndoLastUpdate()
- uid: SudokuSpice.Heuristics.UniqueInRowHeuristic.UndoLastUpdate*
  name: UndoLastUpdate
  href: api/SudokuSpice.Heuristics.UniqueInRowHeuristic.html#SudokuSpice_Heuristics_UniqueInRowHeuristic_UndoLastUpdate_
  commentId: Overload:SudokuSpice.Heuristics.UniqueInRowHeuristic.UndoLastUpdate
  isSpec: "True"
  fullName: SudokuSpice.Heuristics.UniqueInRowHeuristic.UndoLastUpdate
  nameWithType: UniqueInRowHeuristic.UndoLastUpdate
- uid: SudokuSpice.Heuristics.UniqueInRowHeuristic.UpdateAll
  name: UpdateAll()
  href: api/SudokuSpice.Heuristics.UniqueInRowHeuristic.html#SudokuSpice_Heuristics_UniqueInRowHeuristic_UpdateAll
  commentId: M:SudokuSpice.Heuristics.UniqueInRowHeuristic.UpdateAll
  fullName: SudokuSpice.Heuristics.UniqueInRowHeuristic.UpdateAll()
  nameWithType: UniqueInRowHeuristic.UpdateAll()
- uid: SudokuSpice.Heuristics.UniqueInRowHeuristic.UpdateAll*
  name: UpdateAll
  href: api/SudokuSpice.Heuristics.UniqueInRowHeuristic.html#SudokuSpice_Heuristics_UniqueInRowHeuristic_UpdateAll_
  commentId: Overload:SudokuSpice.Heuristics.UniqueInRowHeuristic.UpdateAll
  isSpec: "True"
  fullName: SudokuSpice.Heuristics.UniqueInRowHeuristic.UpdateAll
  nameWithType: UniqueInRowHeuristic.UpdateAll
- uid: SudokuSpice.IPuzzle
  name: IPuzzle
  href: api/SudokuSpice.IPuzzle.html
  commentId: T:SudokuSpice.IPuzzle
  fullName: SudokuSpice.IPuzzle
  nameWithType: IPuzzle
- uid: SudokuSpice.IPuzzle.DeepCopy
  name: DeepCopy()
  href: api/SudokuSpice.IPuzzle.html#SudokuSpice_IPuzzle_DeepCopy
  commentId: M:SudokuSpice.IPuzzle.DeepCopy
  fullName: SudokuSpice.IPuzzle.DeepCopy()
  nameWithType: IPuzzle.DeepCopy()
- uid: SudokuSpice.IPuzzle.DeepCopy*
  name: DeepCopy
  href: api/SudokuSpice.IPuzzle.html#SudokuSpice_IPuzzle_DeepCopy_
  commentId: Overload:SudokuSpice.IPuzzle.DeepCopy
  isSpec: "True"
  fullName: SudokuSpice.IPuzzle.DeepCopy
  nameWithType: IPuzzle.DeepCopy
- uid: SudokuSpice.IPuzzle.Item(SudokuSpice.Data.Coordinate@)
  name: Item[Coordinate]
  href: api/SudokuSpice.IPuzzle.html#SudokuSpice_IPuzzle_Item_SudokuSpice_Data_Coordinate__
  commentId: P:SudokuSpice.IPuzzle.Item(SudokuSpice.Data.Coordinate@)
  name.vb: Item(ByRef Coordinate)
  fullName: SudokuSpice.IPuzzle.Item[SudokuSpice.Data.Coordinate]
  fullName.vb: SudokuSpice.IPuzzle.Item(ByRef SudokuSpice.Data.Coordinate)
  nameWithType: IPuzzle.Item[Coordinate]
  nameWithType.vb: IPuzzle.Item(ByRef Coordinate)
- uid: SudokuSpice.IPuzzle.Item(System.Int32,System.Int32)
  name: Item[Int32, Int32]
  href: api/SudokuSpice.IPuzzle.html#SudokuSpice_IPuzzle_Item_System_Int32_System_Int32_
  commentId: P:SudokuSpice.IPuzzle.Item(System.Int32,System.Int32)
  name.vb: Item(Int32, Int32)
  fullName: SudokuSpice.IPuzzle.Item[System.Int32, System.Int32]
  fullName.vb: SudokuSpice.IPuzzle.Item(System.Int32, System.Int32)
  nameWithType: IPuzzle.Item[Int32, Int32]
  nameWithType.vb: IPuzzle.Item(Int32, Int32)
- uid: SudokuSpice.IPuzzle.Item*
  name: Item
  href: api/SudokuSpice.IPuzzle.html#SudokuSpice_IPuzzle_Item_
  commentId: Overload:SudokuSpice.IPuzzle.Item
  isSpec: "True"
  fullName: SudokuSpice.IPuzzle.Item
  nameWithType: IPuzzle.Item
- uid: SudokuSpice.IReadOnlyBoxPuzzle
  name: IReadOnlyBoxPuzzle
  href: api/SudokuSpice.IReadOnlyBoxPuzzle.html
  commentId: T:SudokuSpice.IReadOnlyBoxPuzzle
  fullName: SudokuSpice.IReadOnlyBoxPuzzle
  nameWithType: IReadOnlyBoxPuzzle
- uid: SudokuSpice.IReadOnlyBoxPuzzle.BoxSize
  name: BoxSize
  href: api/SudokuSpice.IReadOnlyBoxPuzzle.html#SudokuSpice_IReadOnlyBoxPuzzle_BoxSize
  commentId: P:SudokuSpice.IReadOnlyBoxPuzzle.BoxSize
  fullName: SudokuSpice.IReadOnlyBoxPuzzle.BoxSize
  nameWithType: IReadOnlyBoxPuzzle.BoxSize
- uid: SudokuSpice.IReadOnlyBoxPuzzle.BoxSize*
  name: BoxSize
  href: api/SudokuSpice.IReadOnlyBoxPuzzle.html#SudokuSpice_IReadOnlyBoxPuzzle_BoxSize_
  commentId: Overload:SudokuSpice.IReadOnlyBoxPuzzle.BoxSize
  isSpec: "True"
  fullName: SudokuSpice.IReadOnlyBoxPuzzle.BoxSize
  nameWithType: IReadOnlyBoxPuzzle.BoxSize
- uid: SudokuSpice.IReadOnlyBoxPuzzle.GetBoxIndex(System.Int32,System.Int32)
  name: GetBoxIndex(Int32, Int32)
  href: api/SudokuSpice.IReadOnlyBoxPuzzle.html#SudokuSpice_IReadOnlyBoxPuzzle_GetBoxIndex_System_Int32_System_Int32_
  commentId: M:SudokuSpice.IReadOnlyBoxPuzzle.GetBoxIndex(System.Int32,System.Int32)
  fullName: SudokuSpice.IReadOnlyBoxPuzzle.GetBoxIndex(System.Int32, System.Int32)
  nameWithType: IReadOnlyBoxPuzzle.GetBoxIndex(Int32, Int32)
- uid: SudokuSpice.IReadOnlyBoxPuzzle.GetBoxIndex*
  name: GetBoxIndex
  href: api/SudokuSpice.IReadOnlyBoxPuzzle.html#SudokuSpice_IReadOnlyBoxPuzzle_GetBoxIndex_
  commentId: Overload:SudokuSpice.IReadOnlyBoxPuzzle.GetBoxIndex
  isSpec: "True"
  fullName: SudokuSpice.IReadOnlyBoxPuzzle.GetBoxIndex
  nameWithType: IReadOnlyBoxPuzzle.GetBoxIndex
- uid: SudokuSpice.IReadOnlyBoxPuzzle.GetStartingBoxCoordinate(System.Int32)
  name: GetStartingBoxCoordinate(Int32)
  href: api/SudokuSpice.IReadOnlyBoxPuzzle.html#SudokuSpice_IReadOnlyBoxPuzzle_GetStartingBoxCoordinate_System_Int32_
  commentId: M:SudokuSpice.IReadOnlyBoxPuzzle.GetStartingBoxCoordinate(System.Int32)
  fullName: SudokuSpice.IReadOnlyBoxPuzzle.GetStartingBoxCoordinate(System.Int32)
  nameWithType: IReadOnlyBoxPuzzle.GetStartingBoxCoordinate(Int32)
- uid: SudokuSpice.IReadOnlyBoxPuzzle.GetStartingBoxCoordinate*
  name: GetStartingBoxCoordinate
  href: api/SudokuSpice.IReadOnlyBoxPuzzle.html#SudokuSpice_IReadOnlyBoxPuzzle_GetStartingBoxCoordinate_
  commentId: Overload:SudokuSpice.IReadOnlyBoxPuzzle.GetStartingBoxCoordinate
  isSpec: "True"
  fullName: SudokuSpice.IReadOnlyBoxPuzzle.GetStartingBoxCoordinate
  nameWithType: IReadOnlyBoxPuzzle.GetStartingBoxCoordinate
- uid: SudokuSpice.IReadOnlyBoxPuzzle.YieldUnsetCoordsForBox(System.Int32)
  name: YieldUnsetCoordsForBox(Int32)
  href: api/SudokuSpice.IReadOnlyBoxPuzzle.html#SudokuSpice_IReadOnlyBoxPuzzle_YieldUnsetCoordsForBox_System_Int32_
  commentId: M:SudokuSpice.IReadOnlyBoxPuzzle.YieldUnsetCoordsForBox(System.Int32)
  fullName: SudokuSpice.IReadOnlyBoxPuzzle.YieldUnsetCoordsForBox(System.Int32)
  nameWithType: IReadOnlyBoxPuzzle.YieldUnsetCoordsForBox(Int32)
- uid: SudokuSpice.IReadOnlyBoxPuzzle.YieldUnsetCoordsForBox*
  name: YieldUnsetCoordsForBox
  href: api/SudokuSpice.IReadOnlyBoxPuzzle.html#SudokuSpice_IReadOnlyBoxPuzzle_YieldUnsetCoordsForBox_
  commentId: Overload:SudokuSpice.IReadOnlyBoxPuzzle.YieldUnsetCoordsForBox
  isSpec: "True"
  fullName: SudokuSpice.IReadOnlyBoxPuzzle.YieldUnsetCoordsForBox
  nameWithType: IReadOnlyBoxPuzzle.YieldUnsetCoordsForBox
- uid: SudokuSpice.IReadOnlyPuzzle
  name: IReadOnlyPuzzle
  href: api/SudokuSpice.IReadOnlyPuzzle.html
  commentId: T:SudokuSpice.IReadOnlyPuzzle
  fullName: SudokuSpice.IReadOnlyPuzzle
  nameWithType: IReadOnlyPuzzle
- uid: SudokuSpice.IReadOnlyPuzzle.AllPossibleValues
  name: AllPossibleValues
  href: api/SudokuSpice.IReadOnlyPuzzle.html#SudokuSpice_IReadOnlyPuzzle_AllPossibleValues
  commentId: P:SudokuSpice.IReadOnlyPuzzle.AllPossibleValues
  fullName: SudokuSpice.IReadOnlyPuzzle.AllPossibleValues
  nameWithType: IReadOnlyPuzzle.AllPossibleValues
- uid: SudokuSpice.IReadOnlyPuzzle.AllPossibleValues*
  name: AllPossibleValues
  href: api/SudokuSpice.IReadOnlyPuzzle.html#SudokuSpice_IReadOnlyPuzzle_AllPossibleValues_
  commentId: Overload:SudokuSpice.IReadOnlyPuzzle.AllPossibleValues
  isSpec: "True"
  fullName: SudokuSpice.IReadOnlyPuzzle.AllPossibleValues
  nameWithType: IReadOnlyPuzzle.AllPossibleValues
- uid: SudokuSpice.IReadOnlyPuzzle.GetUnsetCoords
  name: GetUnsetCoords()
  href: api/SudokuSpice.IReadOnlyPuzzle.html#SudokuSpice_IReadOnlyPuzzle_GetUnsetCoords
  commentId: M:SudokuSpice.IReadOnlyPuzzle.GetUnsetCoords
  fullName: SudokuSpice.IReadOnlyPuzzle.GetUnsetCoords()
  nameWithType: IReadOnlyPuzzle.GetUnsetCoords()
- uid: SudokuSpice.IReadOnlyPuzzle.GetUnsetCoords*
  name: GetUnsetCoords
  href: api/SudokuSpice.IReadOnlyPuzzle.html#SudokuSpice_IReadOnlyPuzzle_GetUnsetCoords_
  commentId: Overload:SudokuSpice.IReadOnlyPuzzle.GetUnsetCoords
  isSpec: "True"
  fullName: SudokuSpice.IReadOnlyPuzzle.GetUnsetCoords
  nameWithType: IReadOnlyPuzzle.GetUnsetCoords
- uid: SudokuSpice.IReadOnlyPuzzle.Item(SudokuSpice.Data.Coordinate@)
  name: Item[Coordinate]
  href: api/SudokuSpice.IReadOnlyPuzzle.html#SudokuSpice_IReadOnlyPuzzle_Item_SudokuSpice_Data_Coordinate__
  commentId: P:SudokuSpice.IReadOnlyPuzzle.Item(SudokuSpice.Data.Coordinate@)
  name.vb: Item(ByRef Coordinate)
  fullName: SudokuSpice.IReadOnlyPuzzle.Item[SudokuSpice.Data.Coordinate]
  fullName.vb: SudokuSpice.IReadOnlyPuzzle.Item(ByRef SudokuSpice.Data.Coordinate)
  nameWithType: IReadOnlyPuzzle.Item[Coordinate]
  nameWithType.vb: IReadOnlyPuzzle.Item(ByRef Coordinate)
- uid: SudokuSpice.IReadOnlyPuzzle.Item(System.Int32,System.Int32)
  name: Item[Int32, Int32]
  href: api/SudokuSpice.IReadOnlyPuzzle.html#SudokuSpice_IReadOnlyPuzzle_Item_System_Int32_System_Int32_
  commentId: P:SudokuSpice.IReadOnlyPuzzle.Item(System.Int32,System.Int32)
  name.vb: Item(Int32, Int32)
  fullName: SudokuSpice.IReadOnlyPuzzle.Item[System.Int32, System.Int32]
  fullName.vb: SudokuSpice.IReadOnlyPuzzle.Item(System.Int32, System.Int32)
  nameWithType: IReadOnlyPuzzle.Item[Int32, Int32]
  nameWithType.vb: IReadOnlyPuzzle.Item(Int32, Int32)
- uid: SudokuSpice.IReadOnlyPuzzle.Item*
  name: Item
  href: api/SudokuSpice.IReadOnlyPuzzle.html#SudokuSpice_IReadOnlyPuzzle_Item_
  commentId: Overload:SudokuSpice.IReadOnlyPuzzle.Item
  isSpec: "True"
  fullName: SudokuSpice.IReadOnlyPuzzle.Item
  nameWithType: IReadOnlyPuzzle.Item
- uid: SudokuSpice.IReadOnlyPuzzle.NumEmptySquares
  name: NumEmptySquares
  href: api/SudokuSpice.IReadOnlyPuzzle.html#SudokuSpice_IReadOnlyPuzzle_NumEmptySquares
  commentId: P:SudokuSpice.IReadOnlyPuzzle.NumEmptySquares
  fullName: SudokuSpice.IReadOnlyPuzzle.NumEmptySquares
  nameWithType: IReadOnlyPuzzle.NumEmptySquares
- uid: SudokuSpice.IReadOnlyPuzzle.NumEmptySquares*
  name: NumEmptySquares
  href: api/SudokuSpice.IReadOnlyPuzzle.html#SudokuSpice_IReadOnlyPuzzle_NumEmptySquares_
  commentId: Overload:SudokuSpice.IReadOnlyPuzzle.NumEmptySquares
  isSpec: "True"
  fullName: SudokuSpice.IReadOnlyPuzzle.NumEmptySquares
  nameWithType: IReadOnlyPuzzle.NumEmptySquares
- uid: SudokuSpice.IReadOnlyPuzzle.NumSetSquares
  name: NumSetSquares
  href: api/SudokuSpice.IReadOnlyPuzzle.html#SudokuSpice_IReadOnlyPuzzle_NumSetSquares
  commentId: P:SudokuSpice.IReadOnlyPuzzle.NumSetSquares
  fullName: SudokuSpice.IReadOnlyPuzzle.NumSetSquares
  nameWithType: IReadOnlyPuzzle.NumSetSquares
- uid: SudokuSpice.IReadOnlyPuzzle.NumSetSquares*
  name: NumSetSquares
  href: api/SudokuSpice.IReadOnlyPuzzle.html#SudokuSpice_IReadOnlyPuzzle_NumSetSquares_
  commentId: Overload:SudokuSpice.IReadOnlyPuzzle.NumSetSquares
  isSpec: "True"
  fullName: SudokuSpice.IReadOnlyPuzzle.NumSetSquares
  nameWithType: IReadOnlyPuzzle.NumSetSquares
- uid: SudokuSpice.IReadOnlyPuzzle.NumSquares
  name: NumSquares
  href: api/SudokuSpice.IReadOnlyPuzzle.html#SudokuSpice_IReadOnlyPuzzle_NumSquares
  commentId: P:SudokuSpice.IReadOnlyPuzzle.NumSquares
  fullName: SudokuSpice.IReadOnlyPuzzle.NumSquares
  nameWithType: IReadOnlyPuzzle.NumSquares
- uid: SudokuSpice.IReadOnlyPuzzle.NumSquares*
  name: NumSquares
  href: api/SudokuSpice.IReadOnlyPuzzle.html#SudokuSpice_IReadOnlyPuzzle_NumSquares_
  commentId: Overload:SudokuSpice.IReadOnlyPuzzle.NumSquares
  isSpec: "True"
  fullName: SudokuSpice.IReadOnlyPuzzle.NumSquares
  nameWithType: IReadOnlyPuzzle.NumSquares
- uid: SudokuSpice.IReadOnlyPuzzle.Size
  name: Size
  href: api/SudokuSpice.IReadOnlyPuzzle.html#SudokuSpice_IReadOnlyPuzzle_Size
  commentId: P:SudokuSpice.IReadOnlyPuzzle.Size
  fullName: SudokuSpice.IReadOnlyPuzzle.Size
  nameWithType: IReadOnlyPuzzle.Size
- uid: SudokuSpice.IReadOnlyPuzzle.Size*
  name: Size
  href: api/SudokuSpice.IReadOnlyPuzzle.html#SudokuSpice_IReadOnlyPuzzle_Size_
  commentId: Overload:SudokuSpice.IReadOnlyPuzzle.Size
  isSpec: "True"
  fullName: SudokuSpice.IReadOnlyPuzzle.Size
  nameWithType: IReadOnlyPuzzle.Size
- uid: SudokuSpice.Puzzle
  name: Puzzle
  href: api/SudokuSpice.Puzzle.html
  commentId: T:SudokuSpice.Puzzle
  fullName: SudokuSpice.Puzzle
  nameWithType: Puzzle
- uid: SudokuSpice.Puzzle.#ctor(SudokuSpice.Puzzle)
  name: Puzzle(Puzzle)
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle__ctor_SudokuSpice_Puzzle_
  commentId: M:SudokuSpice.Puzzle.#ctor(SudokuSpice.Puzzle)
  fullName: SudokuSpice.Puzzle.Puzzle(SudokuSpice.Puzzle)
  nameWithType: Puzzle.Puzzle(Puzzle)
- uid: SudokuSpice.Puzzle.#ctor(System.Int32)
  name: Puzzle(Int32)
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle__ctor_System_Int32_
  commentId: M:SudokuSpice.Puzzle.#ctor(System.Int32)
  fullName: SudokuSpice.Puzzle.Puzzle(System.Int32)
  nameWithType: Puzzle.Puzzle(Int32)
- uid: SudokuSpice.Puzzle.#ctor(System.Nullable{System.Int32}[0:,0:])
  name: Puzzle(Nullable<Int32>[,])
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle__ctor_System_Nullable_System_Int32__0__0___
  commentId: M:SudokuSpice.Puzzle.#ctor(System.Nullable{System.Int32}[0:,0:])
  name.vb: Puzzle(Nullable(Of Int32)(,))
  fullName: SudokuSpice.Puzzle.Puzzle(System.Nullable<System.Int32>[,])
  fullName.vb: SudokuSpice.Puzzle.Puzzle(System.Nullable(Of System.Int32)(,))
  nameWithType: Puzzle.Puzzle(Nullable<Int32>[,])
  nameWithType.vb: Puzzle.Puzzle(Nullable(Of Int32)(,))
- uid: SudokuSpice.Puzzle.#ctor*
  name: Puzzle
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle__ctor_
  commentId: Overload:SudokuSpice.Puzzle.#ctor
  isSpec: "True"
  fullName: SudokuSpice.Puzzle.Puzzle
  nameWithType: Puzzle.Puzzle
- uid: SudokuSpice.Puzzle.AllPossibleValues
  name: AllPossibleValues
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle_AllPossibleValues
  commentId: P:SudokuSpice.Puzzle.AllPossibleValues
  fullName: SudokuSpice.Puzzle.AllPossibleValues
  nameWithType: Puzzle.AllPossibleValues
- uid: SudokuSpice.Puzzle.AllPossibleValues*
  name: AllPossibleValues
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle_AllPossibleValues_
  commentId: Overload:SudokuSpice.Puzzle.AllPossibleValues
  isSpec: "True"
  fullName: SudokuSpice.Puzzle.AllPossibleValues
  nameWithType: Puzzle.AllPossibleValues
- uid: SudokuSpice.Puzzle.BoxSize
  name: BoxSize
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle_BoxSize
  commentId: P:SudokuSpice.Puzzle.BoxSize
  fullName: SudokuSpice.Puzzle.BoxSize
  nameWithType: Puzzle.BoxSize
- uid: SudokuSpice.Puzzle.BoxSize*
  name: BoxSize
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle_BoxSize_
  commentId: Overload:SudokuSpice.Puzzle.BoxSize
  isSpec: "True"
  fullName: SudokuSpice.Puzzle.BoxSize
  nameWithType: Puzzle.BoxSize
- uid: SudokuSpice.Puzzle.DeepCopy
  name: DeepCopy()
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle_DeepCopy
  commentId: M:SudokuSpice.Puzzle.DeepCopy
  fullName: SudokuSpice.Puzzle.DeepCopy()
  nameWithType: Puzzle.DeepCopy()
- uid: SudokuSpice.Puzzle.DeepCopy*
  name: DeepCopy
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle_DeepCopy_
  commentId: Overload:SudokuSpice.Puzzle.DeepCopy
  isSpec: "True"
  fullName: SudokuSpice.Puzzle.DeepCopy
  nameWithType: Puzzle.DeepCopy
- uid: SudokuSpice.Puzzle.GetBoxIndex(System.Int32,System.Int32)
  name: GetBoxIndex(Int32, Int32)
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle_GetBoxIndex_System_Int32_System_Int32_
  commentId: M:SudokuSpice.Puzzle.GetBoxIndex(System.Int32,System.Int32)
  fullName: SudokuSpice.Puzzle.GetBoxIndex(System.Int32, System.Int32)
  nameWithType: Puzzle.GetBoxIndex(Int32, Int32)
- uid: SudokuSpice.Puzzle.GetBoxIndex*
  name: GetBoxIndex
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle_GetBoxIndex_
  commentId: Overload:SudokuSpice.Puzzle.GetBoxIndex
  isSpec: "True"
  fullName: SudokuSpice.Puzzle.GetBoxIndex
  nameWithType: Puzzle.GetBoxIndex
- uid: SudokuSpice.Puzzle.GetStartingBoxCoordinate(System.Int32)
  name: GetStartingBoxCoordinate(Int32)
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle_GetStartingBoxCoordinate_System_Int32_
  commentId: M:SudokuSpice.Puzzle.GetStartingBoxCoordinate(System.Int32)
  fullName: SudokuSpice.Puzzle.GetStartingBoxCoordinate(System.Int32)
  nameWithType: Puzzle.GetStartingBoxCoordinate(Int32)
- uid: SudokuSpice.Puzzle.GetStartingBoxCoordinate*
  name: GetStartingBoxCoordinate
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle_GetStartingBoxCoordinate_
  commentId: Overload:SudokuSpice.Puzzle.GetStartingBoxCoordinate
  isSpec: "True"
  fullName: SudokuSpice.Puzzle.GetStartingBoxCoordinate
  nameWithType: Puzzle.GetStartingBoxCoordinate
- uid: SudokuSpice.Puzzle.GetUnsetCoords
  name: GetUnsetCoords()
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle_GetUnsetCoords
  commentId: M:SudokuSpice.Puzzle.GetUnsetCoords
  fullName: SudokuSpice.Puzzle.GetUnsetCoords()
  nameWithType: Puzzle.GetUnsetCoords()
- uid: SudokuSpice.Puzzle.GetUnsetCoords*
  name: GetUnsetCoords
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle_GetUnsetCoords_
  commentId: Overload:SudokuSpice.Puzzle.GetUnsetCoords
  isSpec: "True"
  fullName: SudokuSpice.Puzzle.GetUnsetCoords
  nameWithType: Puzzle.GetUnsetCoords
- uid: SudokuSpice.Puzzle.Item(SudokuSpice.Data.Coordinate@)
  name: Item[Coordinate]
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle_Item_SudokuSpice_Data_Coordinate__
  commentId: P:SudokuSpice.Puzzle.Item(SudokuSpice.Data.Coordinate@)
  name.vb: Item(ByRef Coordinate)
  fullName: SudokuSpice.Puzzle.Item[SudokuSpice.Data.Coordinate]
  fullName.vb: SudokuSpice.Puzzle.Item(ByRef SudokuSpice.Data.Coordinate)
  nameWithType: Puzzle.Item[Coordinate]
  nameWithType.vb: Puzzle.Item(ByRef Coordinate)
- uid: SudokuSpice.Puzzle.Item(System.Int32,System.Int32)
  name: Item[Int32, Int32]
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle_Item_System_Int32_System_Int32_
  commentId: P:SudokuSpice.Puzzle.Item(System.Int32,System.Int32)
  name.vb: Item(Int32, Int32)
  fullName: SudokuSpice.Puzzle.Item[System.Int32, System.Int32]
  fullName.vb: SudokuSpice.Puzzle.Item(System.Int32, System.Int32)
  nameWithType: Puzzle.Item[Int32, Int32]
  nameWithType.vb: Puzzle.Item(Int32, Int32)
- uid: SudokuSpice.Puzzle.Item*
  name: Item
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle_Item_
  commentId: Overload:SudokuSpice.Puzzle.Item
  isSpec: "True"
  fullName: SudokuSpice.Puzzle.Item
  nameWithType: Puzzle.Item
- uid: SudokuSpice.Puzzle.NumEmptySquares
  name: NumEmptySquares
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle_NumEmptySquares
  commentId: P:SudokuSpice.Puzzle.NumEmptySquares
  fullName: SudokuSpice.Puzzle.NumEmptySquares
  nameWithType: Puzzle.NumEmptySquares
- uid: SudokuSpice.Puzzle.NumEmptySquares*
  name: NumEmptySquares
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle_NumEmptySquares_
  commentId: Overload:SudokuSpice.Puzzle.NumEmptySquares
  isSpec: "True"
  fullName: SudokuSpice.Puzzle.NumEmptySquares
  nameWithType: Puzzle.NumEmptySquares
- uid: SudokuSpice.Puzzle.NumSetSquares
  name: NumSetSquares
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle_NumSetSquares
  commentId: P:SudokuSpice.Puzzle.NumSetSquares
  fullName: SudokuSpice.Puzzle.NumSetSquares
  nameWithType: Puzzle.NumSetSquares
- uid: SudokuSpice.Puzzle.NumSetSquares*
  name: NumSetSquares
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle_NumSetSquares_
  commentId: Overload:SudokuSpice.Puzzle.NumSetSquares
  isSpec: "True"
  fullName: SudokuSpice.Puzzle.NumSetSquares
  nameWithType: Puzzle.NumSetSquares
- uid: SudokuSpice.Puzzle.NumSquares
  name: NumSquares
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle_NumSquares
  commentId: P:SudokuSpice.Puzzle.NumSquares
  fullName: SudokuSpice.Puzzle.NumSquares
  nameWithType: Puzzle.NumSquares
- uid: SudokuSpice.Puzzle.NumSquares*
  name: NumSquares
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle_NumSquares_
  commentId: Overload:SudokuSpice.Puzzle.NumSquares
  isSpec: "True"
  fullName: SudokuSpice.Puzzle.NumSquares
  nameWithType: Puzzle.NumSquares
- uid: SudokuSpice.Puzzle.Size
  name: Size
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle_Size
  commentId: P:SudokuSpice.Puzzle.Size
  fullName: SudokuSpice.Puzzle.Size
  nameWithType: Puzzle.Size
- uid: SudokuSpice.Puzzle.Size*
  name: Size
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle_Size_
  commentId: Overload:SudokuSpice.Puzzle.Size
  isSpec: "True"
  fullName: SudokuSpice.Puzzle.Size
  nameWithType: Puzzle.Size
- uid: SudokuSpice.Puzzle.ToString
  name: ToString()
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle_ToString
  commentId: M:SudokuSpice.Puzzle.ToString
  fullName: SudokuSpice.Puzzle.ToString()
  nameWithType: Puzzle.ToString()
- uid: SudokuSpice.Puzzle.ToString*
  name: ToString
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle_ToString_
  commentId: Overload:SudokuSpice.Puzzle.ToString
  isSpec: "True"
  fullName: SudokuSpice.Puzzle.ToString
  nameWithType: Puzzle.ToString
- uid: SudokuSpice.Puzzle.YieldUnsetCoordsForBox(System.Int32)
  name: YieldUnsetCoordsForBox(Int32)
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle_YieldUnsetCoordsForBox_System_Int32_
  commentId: M:SudokuSpice.Puzzle.YieldUnsetCoordsForBox(System.Int32)
  fullName: SudokuSpice.Puzzle.YieldUnsetCoordsForBox(System.Int32)
  nameWithType: Puzzle.YieldUnsetCoordsForBox(Int32)
- uid: SudokuSpice.Puzzle.YieldUnsetCoordsForBox*
  name: YieldUnsetCoordsForBox
  href: api/SudokuSpice.Puzzle.html#SudokuSpice_Puzzle_YieldUnsetCoordsForBox_
  commentId: Overload:SudokuSpice.Puzzle.YieldUnsetCoordsForBox
  isSpec: "True"
  fullName: SudokuSpice.Puzzle.YieldUnsetCoordsForBox
  nameWithType: Puzzle.YieldUnsetCoordsForBox
- uid: SudokuSpice.PuzzleGenerator`1
  name: PuzzleGenerator<TPuzzle>
  href: api/SudokuSpice.PuzzleGenerator-1.html
  commentId: T:SudokuSpice.PuzzleGenerator`1
  name.vb: PuzzleGenerator(Of TPuzzle)
  fullName: SudokuSpice.PuzzleGenerator<TPuzzle>
  fullName.vb: SudokuSpice.PuzzleGenerator(Of TPuzzle)
  nameWithType: PuzzleGenerator<TPuzzle>
  nameWithType.vb: PuzzleGenerator(Of TPuzzle)
- uid: SudokuSpice.PuzzleGenerator`1.#ctor(System.Func{`0},System.Func{`0,SudokuSpice.Solver})
  name: PuzzleGenerator(Func<TPuzzle>, Func<TPuzzle, Solver>)
  href: api/SudokuSpice.PuzzleGenerator-1.html#SudokuSpice_PuzzleGenerator_1__ctor_System_Func__0__System_Func__0_SudokuSpice_Solver__
  commentId: M:SudokuSpice.PuzzleGenerator`1.#ctor(System.Func{`0},System.Func{`0,SudokuSpice.Solver})
  name.vb: PuzzleGenerator(Func(Of TPuzzle), Func(Of TPuzzle, Solver))
  fullName: SudokuSpice.PuzzleGenerator<TPuzzle>.PuzzleGenerator(System.Func<TPuzzle>, System.Func<TPuzzle, SudokuSpice.Solver>)
  fullName.vb: SudokuSpice.PuzzleGenerator(Of TPuzzle).PuzzleGenerator(System.Func(Of TPuzzle), System.Func(Of TPuzzle, SudokuSpice.Solver))
  nameWithType: PuzzleGenerator<TPuzzle>.PuzzleGenerator(Func<TPuzzle>, Func<TPuzzle, Solver>)
  nameWithType.vb: PuzzleGenerator(Of TPuzzle).PuzzleGenerator(Func(Of TPuzzle), Func(Of TPuzzle, Solver))
- uid: SudokuSpice.PuzzleGenerator`1.#ctor*
  name: PuzzleGenerator
  href: api/SudokuSpice.PuzzleGenerator-1.html#SudokuSpice_PuzzleGenerator_1__ctor_
  commentId: Overload:SudokuSpice.PuzzleGenerator`1.#ctor
  isSpec: "True"
  fullName: SudokuSpice.PuzzleGenerator<TPuzzle>.PuzzleGenerator
  fullName.vb: SudokuSpice.PuzzleGenerator(Of TPuzzle).PuzzleGenerator
  nameWithType: PuzzleGenerator<TPuzzle>.PuzzleGenerator
  nameWithType.vb: PuzzleGenerator(Of TPuzzle).PuzzleGenerator
- uid: SudokuSpice.PuzzleGenerator`1.Generate(System.Int32,System.TimeSpan)
  name: Generate(Int32, TimeSpan)
  href: api/SudokuSpice.PuzzleGenerator-1.html#SudokuSpice_PuzzleGenerator_1_Generate_System_Int32_System_TimeSpan_
  commentId: M:SudokuSpice.PuzzleGenerator`1.Generate(System.Int32,System.TimeSpan)
  fullName: SudokuSpice.PuzzleGenerator<TPuzzle>.Generate(System.Int32, System.TimeSpan)
  fullName.vb: SudokuSpice.PuzzleGenerator(Of TPuzzle).Generate(System.Int32, System.TimeSpan)
  nameWithType: PuzzleGenerator<TPuzzle>.Generate(Int32, TimeSpan)
  nameWithType.vb: PuzzleGenerator(Of TPuzzle).Generate(Int32, TimeSpan)
- uid: SudokuSpice.PuzzleGenerator`1.Generate*
  name: Generate
  href: api/SudokuSpice.PuzzleGenerator-1.html#SudokuSpice_PuzzleGenerator_1_Generate_
  commentId: Overload:SudokuSpice.PuzzleGenerator`1.Generate
  isSpec: "True"
  fullName: SudokuSpice.PuzzleGenerator<TPuzzle>.Generate
  fullName.vb: SudokuSpice.PuzzleGenerator(Of TPuzzle).Generate
  nameWithType: PuzzleGenerator<TPuzzle>.Generate
  nameWithType.vb: PuzzleGenerator(Of TPuzzle).Generate
- uid: SudokuSpice.Rules
  name: SudokuSpice.Rules
  href: api/SudokuSpice.Rules.html
  commentId: N:SudokuSpice.Rules
  fullName: SudokuSpice.Rules
  nameWithType: SudokuSpice.Rules
- uid: SudokuSpice.Rules.BoxUniquenessRule
  name: BoxUniquenessRule
  href: api/SudokuSpice.Rules.BoxUniquenessRule.html
  commentId: T:SudokuSpice.Rules.BoxUniquenessRule
  fullName: SudokuSpice.Rules.BoxUniquenessRule
  nameWithType: BoxUniquenessRule
- uid: SudokuSpice.Rules.BoxUniquenessRule.#ctor(SudokuSpice.IReadOnlyBoxPuzzle,SudokuSpice.Data.BitVector,System.Boolean)
  name: BoxUniquenessRule(IReadOnlyBoxPuzzle, BitVector, Boolean)
  href: api/SudokuSpice.Rules.BoxUniquenessRule.html#SudokuSpice_Rules_BoxUniquenessRule__ctor_SudokuSpice_IReadOnlyBoxPuzzle_SudokuSpice_Data_BitVector_System_Boolean_
  commentId: M:SudokuSpice.Rules.BoxUniquenessRule.#ctor(SudokuSpice.IReadOnlyBoxPuzzle,SudokuSpice.Data.BitVector,System.Boolean)
  fullName: SudokuSpice.Rules.BoxUniquenessRule.BoxUniquenessRule(SudokuSpice.IReadOnlyBoxPuzzle, SudokuSpice.Data.BitVector, System.Boolean)
  nameWithType: BoxUniquenessRule.BoxUniquenessRule(IReadOnlyBoxPuzzle, BitVector, Boolean)
- uid: SudokuSpice.Rules.BoxUniquenessRule.#ctor*
  name: BoxUniquenessRule
  href: api/SudokuSpice.Rules.BoxUniquenessRule.html#SudokuSpice_Rules_BoxUniquenessRule__ctor_
  commentId: Overload:SudokuSpice.Rules.BoxUniquenessRule.#ctor
  isSpec: "True"
  fullName: SudokuSpice.Rules.BoxUniquenessRule.BoxUniquenessRule
  nameWithType: BoxUniquenessRule.BoxUniquenessRule
- uid: SudokuSpice.Rules.BoxUniquenessRule.CopyWithNewReference(SudokuSpice.IReadOnlyPuzzle)
  name: CopyWithNewReference(IReadOnlyPuzzle)
  href: api/SudokuSpice.Rules.BoxUniquenessRule.html#SudokuSpice_Rules_BoxUniquenessRule_CopyWithNewReference_SudokuSpice_IReadOnlyPuzzle_
  commentId: M:SudokuSpice.Rules.BoxUniquenessRule.CopyWithNewReference(SudokuSpice.IReadOnlyPuzzle)
  fullName: SudokuSpice.Rules.BoxUniquenessRule.CopyWithNewReference(SudokuSpice.IReadOnlyPuzzle)
  nameWithType: BoxUniquenessRule.CopyWithNewReference(IReadOnlyPuzzle)
- uid: SudokuSpice.Rules.BoxUniquenessRule.CopyWithNewReference*
  name: CopyWithNewReference
  href: api/SudokuSpice.Rules.BoxUniquenessRule.html#SudokuSpice_Rules_BoxUniquenessRule_CopyWithNewReference_
  commentId: Overload:SudokuSpice.Rules.BoxUniquenessRule.CopyWithNewReference
  isSpec: "True"
  fullName: SudokuSpice.Rules.BoxUniquenessRule.CopyWithNewReference
  nameWithType: BoxUniquenessRule.CopyWithNewReference
- uid: SudokuSpice.Rules.BoxUniquenessRule.GetMissingValuesForBox(System.Int32)
  name: GetMissingValuesForBox(Int32)
  href: api/SudokuSpice.Rules.BoxUniquenessRule.html#SudokuSpice_Rules_BoxUniquenessRule_GetMissingValuesForBox_System_Int32_
  commentId: M:SudokuSpice.Rules.BoxUniquenessRule.GetMissingValuesForBox(System.Int32)
  fullName: SudokuSpice.Rules.BoxUniquenessRule.GetMissingValuesForBox(System.Int32)
  nameWithType: BoxUniquenessRule.GetMissingValuesForBox(Int32)
- uid: SudokuSpice.Rules.BoxUniquenessRule.GetMissingValuesForBox*
  name: GetMissingValuesForBox
  href: api/SudokuSpice.Rules.BoxUniquenessRule.html#SudokuSpice_Rules_BoxUniquenessRule_GetMissingValuesForBox_
  commentId: Overload:SudokuSpice.Rules.BoxUniquenessRule.GetMissingValuesForBox
  isSpec: "True"
  fullName: SudokuSpice.Rules.BoxUniquenessRule.GetMissingValuesForBox
  nameWithType: BoxUniquenessRule.GetMissingValuesForBox
- uid: SudokuSpice.Rules.BoxUniquenessRule.GetPossibleValues(SudokuSpice.Data.Coordinate@)
  name: GetPossibleValues(Coordinate)
  href: api/SudokuSpice.Rules.BoxUniquenessRule.html#SudokuSpice_Rules_BoxUniquenessRule_GetPossibleValues_SudokuSpice_Data_Coordinate__
  commentId: M:SudokuSpice.Rules.BoxUniquenessRule.GetPossibleValues(SudokuSpice.Data.Coordinate@)
  name.vb: GetPossibleValues(ByRef Coordinate)
  fullName: SudokuSpice.Rules.BoxUniquenessRule.GetPossibleValues(SudokuSpice.Data.Coordinate)
  fullName.vb: SudokuSpice.Rules.BoxUniquenessRule.GetPossibleValues(ByRef SudokuSpice.Data.Coordinate)
  nameWithType: BoxUniquenessRule.GetPossibleValues(Coordinate)
  nameWithType.vb: BoxUniquenessRule.GetPossibleValues(ByRef Coordinate)
- uid: SudokuSpice.Rules.BoxUniquenessRule.GetPossibleValues*
  name: GetPossibleValues
  href: api/SudokuSpice.Rules.BoxUniquenessRule.html#SudokuSpice_Rules_BoxUniquenessRule_GetPossibleValues_
  commentId: Overload:SudokuSpice.Rules.BoxUniquenessRule.GetPossibleValues
  isSpec: "True"
  fullName: SudokuSpice.Rules.BoxUniquenessRule.GetPossibleValues
  nameWithType: BoxUniquenessRule.GetPossibleValues
- uid: SudokuSpice.Rules.BoxUniquenessRule.Revert(SudokuSpice.Data.Coordinate@,System.Int32)
  name: Revert(Coordinate, Int32)
  href: api/SudokuSpice.Rules.BoxUniquenessRule.html#SudokuSpice_Rules_BoxUniquenessRule_Revert_SudokuSpice_Data_Coordinate__System_Int32_
  commentId: M:SudokuSpice.Rules.BoxUniquenessRule.Revert(SudokuSpice.Data.Coordinate@,System.Int32)
  name.vb: Revert(ByRef Coordinate, Int32)
  fullName: SudokuSpice.Rules.BoxUniquenessRule.Revert(SudokuSpice.Data.Coordinate, System.Int32)
  fullName.vb: SudokuSpice.Rules.BoxUniquenessRule.Revert(ByRef SudokuSpice.Data.Coordinate, System.Int32)
  nameWithType: BoxUniquenessRule.Revert(Coordinate, Int32)
  nameWithType.vb: BoxUniquenessRule.Revert(ByRef Coordinate, Int32)
- uid: SudokuSpice.Rules.BoxUniquenessRule.Revert(SudokuSpice.Data.Coordinate@,System.Int32,SudokuSpice.Data.CoordinateTracker)
  name: Revert(Coordinate, Int32, CoordinateTracker)
  href: api/SudokuSpice.Rules.BoxUniquenessRule.html#SudokuSpice_Rules_BoxUniquenessRule_Revert_SudokuSpice_Data_Coordinate__System_Int32_SudokuSpice_Data_CoordinateTracker_
  commentId: M:SudokuSpice.Rules.BoxUniquenessRule.Revert(SudokuSpice.Data.Coordinate@,System.Int32,SudokuSpice.Data.CoordinateTracker)
  name.vb: Revert(ByRef Coordinate, Int32, CoordinateTracker)
  fullName: SudokuSpice.Rules.BoxUniquenessRule.Revert(SudokuSpice.Data.Coordinate, System.Int32, SudokuSpice.Data.CoordinateTracker)
  fullName.vb: SudokuSpice.Rules.BoxUniquenessRule.Revert(ByRef SudokuSpice.Data.Coordinate, System.Int32, SudokuSpice.Data.CoordinateTracker)
  nameWithType: BoxUniquenessRule.Revert(Coordinate, Int32, CoordinateTracker)
  nameWithType.vb: BoxUniquenessRule.Revert(ByRef Coordinate, Int32, CoordinateTracker)
- uid: SudokuSpice.Rules.BoxUniquenessRule.Revert*
  name: Revert
  href: api/SudokuSpice.Rules.BoxUniquenessRule.html#SudokuSpice_Rules_BoxUniquenessRule_Revert_
  commentId: Overload:SudokuSpice.Rules.BoxUniquenessRule.Revert
  isSpec: "True"
  fullName: SudokuSpice.Rules.BoxUniquenessRule.Revert
  nameWithType: BoxUniquenessRule.Revert
- uid: SudokuSpice.Rules.BoxUniquenessRule.Update(SudokuSpice.Data.Coordinate@,System.Int32,SudokuSpice.Data.CoordinateTracker)
  name: Update(Coordinate, Int32, CoordinateTracker)
  href: api/SudokuSpice.Rules.BoxUniquenessRule.html#SudokuSpice_Rules_BoxUniquenessRule_Update_SudokuSpice_Data_Coordinate__System_Int32_SudokuSpice_Data_CoordinateTracker_
  commentId: M:SudokuSpice.Rules.BoxUniquenessRule.Update(SudokuSpice.Data.Coordinate@,System.Int32,SudokuSpice.Data.CoordinateTracker)
  name.vb: Update(ByRef Coordinate, Int32, CoordinateTracker)
  fullName: SudokuSpice.Rules.BoxUniquenessRule.Update(SudokuSpice.Data.Coordinate, System.Int32, SudokuSpice.Data.CoordinateTracker)
  fullName.vb: SudokuSpice.Rules.BoxUniquenessRule.Update(ByRef SudokuSpice.Data.Coordinate, System.Int32, SudokuSpice.Data.CoordinateTracker)
  nameWithType: BoxUniquenessRule.Update(Coordinate, Int32, CoordinateTracker)
  nameWithType.vb: BoxUniquenessRule.Update(ByRef Coordinate, Int32, CoordinateTracker)
- uid: SudokuSpice.Rules.BoxUniquenessRule.Update*
  name: Update
  href: api/SudokuSpice.Rules.BoxUniquenessRule.html#SudokuSpice_Rules_BoxUniquenessRule_Update_
  commentId: Overload:SudokuSpice.Rules.BoxUniquenessRule.Update
  isSpec: "True"
  fullName: SudokuSpice.Rules.BoxUniquenessRule.Update
  nameWithType: BoxUniquenessRule.Update
- uid: SudokuSpice.Rules.ColumnUniquenessRule
  name: ColumnUniquenessRule
  href: api/SudokuSpice.Rules.ColumnUniquenessRule.html
  commentId: T:SudokuSpice.Rules.ColumnUniquenessRule
  fullName: SudokuSpice.Rules.ColumnUniquenessRule
  nameWithType: ColumnUniquenessRule
- uid: SudokuSpice.Rules.ColumnUniquenessRule.#ctor(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.Data.BitVector)
  name: ColumnUniquenessRule(IReadOnlyPuzzle, BitVector)
  href: api/SudokuSpice.Rules.ColumnUniquenessRule.html#SudokuSpice_Rules_ColumnUniquenessRule__ctor_SudokuSpice_IReadOnlyPuzzle_SudokuSpice_Data_BitVector_
  commentId: M:SudokuSpice.Rules.ColumnUniquenessRule.#ctor(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.Data.BitVector)
  fullName: SudokuSpice.Rules.ColumnUniquenessRule.ColumnUniquenessRule(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.Data.BitVector)
  nameWithType: ColumnUniquenessRule.ColumnUniquenessRule(IReadOnlyPuzzle, BitVector)
- uid: SudokuSpice.Rules.ColumnUniquenessRule.#ctor*
  name: ColumnUniquenessRule
  href: api/SudokuSpice.Rules.ColumnUniquenessRule.html#SudokuSpice_Rules_ColumnUniquenessRule__ctor_
  commentId: Overload:SudokuSpice.Rules.ColumnUniquenessRule.#ctor
  isSpec: "True"
  fullName: SudokuSpice.Rules.ColumnUniquenessRule.ColumnUniquenessRule
  nameWithType: ColumnUniquenessRule.ColumnUniquenessRule
- uid: SudokuSpice.Rules.ColumnUniquenessRule.CopyWithNewReference(SudokuSpice.IReadOnlyPuzzle)
  name: CopyWithNewReference(IReadOnlyPuzzle)
  href: api/SudokuSpice.Rules.ColumnUniquenessRule.html#SudokuSpice_Rules_ColumnUniquenessRule_CopyWithNewReference_SudokuSpice_IReadOnlyPuzzle_
  commentId: M:SudokuSpice.Rules.ColumnUniquenessRule.CopyWithNewReference(SudokuSpice.IReadOnlyPuzzle)
  fullName: SudokuSpice.Rules.ColumnUniquenessRule.CopyWithNewReference(SudokuSpice.IReadOnlyPuzzle)
  nameWithType: ColumnUniquenessRule.CopyWithNewReference(IReadOnlyPuzzle)
- uid: SudokuSpice.Rules.ColumnUniquenessRule.CopyWithNewReference*
  name: CopyWithNewReference
  href: api/SudokuSpice.Rules.ColumnUniquenessRule.html#SudokuSpice_Rules_ColumnUniquenessRule_CopyWithNewReference_
  commentId: Overload:SudokuSpice.Rules.ColumnUniquenessRule.CopyWithNewReference
  isSpec: "True"
  fullName: SudokuSpice.Rules.ColumnUniquenessRule.CopyWithNewReference
  nameWithType: ColumnUniquenessRule.CopyWithNewReference
- uid: SudokuSpice.Rules.ColumnUniquenessRule.GetMissingValuesForColumn(System.Int32)
  name: GetMissingValuesForColumn(Int32)
  href: api/SudokuSpice.Rules.ColumnUniquenessRule.html#SudokuSpice_Rules_ColumnUniquenessRule_GetMissingValuesForColumn_System_Int32_
  commentId: M:SudokuSpice.Rules.ColumnUniquenessRule.GetMissingValuesForColumn(System.Int32)
  fullName: SudokuSpice.Rules.ColumnUniquenessRule.GetMissingValuesForColumn(System.Int32)
  nameWithType: ColumnUniquenessRule.GetMissingValuesForColumn(Int32)
- uid: SudokuSpice.Rules.ColumnUniquenessRule.GetMissingValuesForColumn*
  name: GetMissingValuesForColumn
  href: api/SudokuSpice.Rules.ColumnUniquenessRule.html#SudokuSpice_Rules_ColumnUniquenessRule_GetMissingValuesForColumn_
  commentId: Overload:SudokuSpice.Rules.ColumnUniquenessRule.GetMissingValuesForColumn
  isSpec: "True"
  fullName: SudokuSpice.Rules.ColumnUniquenessRule.GetMissingValuesForColumn
  nameWithType: ColumnUniquenessRule.GetMissingValuesForColumn
- uid: SudokuSpice.Rules.ColumnUniquenessRule.GetPossibleValues(SudokuSpice.Data.Coordinate@)
  name: GetPossibleValues(Coordinate)
  href: api/SudokuSpice.Rules.ColumnUniquenessRule.html#SudokuSpice_Rules_ColumnUniquenessRule_GetPossibleValues_SudokuSpice_Data_Coordinate__
  commentId: M:SudokuSpice.Rules.ColumnUniquenessRule.GetPossibleValues(SudokuSpice.Data.Coordinate@)
  name.vb: GetPossibleValues(ByRef Coordinate)
  fullName: SudokuSpice.Rules.ColumnUniquenessRule.GetPossibleValues(SudokuSpice.Data.Coordinate)
  fullName.vb: SudokuSpice.Rules.ColumnUniquenessRule.GetPossibleValues(ByRef SudokuSpice.Data.Coordinate)
  nameWithType: ColumnUniquenessRule.GetPossibleValues(Coordinate)
  nameWithType.vb: ColumnUniquenessRule.GetPossibleValues(ByRef Coordinate)
- uid: SudokuSpice.Rules.ColumnUniquenessRule.GetPossibleValues*
  name: GetPossibleValues
  href: api/SudokuSpice.Rules.ColumnUniquenessRule.html#SudokuSpice_Rules_ColumnUniquenessRule_GetPossibleValues_
  commentId: Overload:SudokuSpice.Rules.ColumnUniquenessRule.GetPossibleValues
  isSpec: "True"
  fullName: SudokuSpice.Rules.ColumnUniquenessRule.GetPossibleValues
  nameWithType: ColumnUniquenessRule.GetPossibleValues
- uid: SudokuSpice.Rules.ColumnUniquenessRule.Revert(SudokuSpice.Data.Coordinate@,System.Int32)
  name: Revert(Coordinate, Int32)
  href: api/SudokuSpice.Rules.ColumnUniquenessRule.html#SudokuSpice_Rules_ColumnUniquenessRule_Revert_SudokuSpice_Data_Coordinate__System_Int32_
  commentId: M:SudokuSpice.Rules.ColumnUniquenessRule.Revert(SudokuSpice.Data.Coordinate@,System.Int32)
  name.vb: Revert(ByRef Coordinate, Int32)
  fullName: SudokuSpice.Rules.ColumnUniquenessRule.Revert(SudokuSpice.Data.Coordinate, System.Int32)
  fullName.vb: SudokuSpice.Rules.ColumnUniquenessRule.Revert(ByRef SudokuSpice.Data.Coordinate, System.Int32)
  nameWithType: ColumnUniquenessRule.Revert(Coordinate, Int32)
  nameWithType.vb: ColumnUniquenessRule.Revert(ByRef Coordinate, Int32)
- uid: SudokuSpice.Rules.ColumnUniquenessRule.Revert(SudokuSpice.Data.Coordinate@,System.Int32,SudokuSpice.Data.CoordinateTracker)
  name: Revert(Coordinate, Int32, CoordinateTracker)
  href: api/SudokuSpice.Rules.ColumnUniquenessRule.html#SudokuSpice_Rules_ColumnUniquenessRule_Revert_SudokuSpice_Data_Coordinate__System_Int32_SudokuSpice_Data_CoordinateTracker_
  commentId: M:SudokuSpice.Rules.ColumnUniquenessRule.Revert(SudokuSpice.Data.Coordinate@,System.Int32,SudokuSpice.Data.CoordinateTracker)
  name.vb: Revert(ByRef Coordinate, Int32, CoordinateTracker)
  fullName: SudokuSpice.Rules.ColumnUniquenessRule.Revert(SudokuSpice.Data.Coordinate, System.Int32, SudokuSpice.Data.CoordinateTracker)
  fullName.vb: SudokuSpice.Rules.ColumnUniquenessRule.Revert(ByRef SudokuSpice.Data.Coordinate, System.Int32, SudokuSpice.Data.CoordinateTracker)
  nameWithType: ColumnUniquenessRule.Revert(Coordinate, Int32, CoordinateTracker)
  nameWithType.vb: ColumnUniquenessRule.Revert(ByRef Coordinate, Int32, CoordinateTracker)
- uid: SudokuSpice.Rules.ColumnUniquenessRule.Revert*
  name: Revert
  href: api/SudokuSpice.Rules.ColumnUniquenessRule.html#SudokuSpice_Rules_ColumnUniquenessRule_Revert_
  commentId: Overload:SudokuSpice.Rules.ColumnUniquenessRule.Revert
  isSpec: "True"
  fullName: SudokuSpice.Rules.ColumnUniquenessRule.Revert
  nameWithType: ColumnUniquenessRule.Revert
- uid: SudokuSpice.Rules.ColumnUniquenessRule.Update(SudokuSpice.Data.Coordinate@,System.Int32,SudokuSpice.Data.CoordinateTracker)
  name: Update(Coordinate, Int32, CoordinateTracker)
  href: api/SudokuSpice.Rules.ColumnUniquenessRule.html#SudokuSpice_Rules_ColumnUniquenessRule_Update_SudokuSpice_Data_Coordinate__System_Int32_SudokuSpice_Data_CoordinateTracker_
  commentId: M:SudokuSpice.Rules.ColumnUniquenessRule.Update(SudokuSpice.Data.Coordinate@,System.Int32,SudokuSpice.Data.CoordinateTracker)
  name.vb: Update(ByRef Coordinate, Int32, CoordinateTracker)
  fullName: SudokuSpice.Rules.ColumnUniquenessRule.Update(SudokuSpice.Data.Coordinate, System.Int32, SudokuSpice.Data.CoordinateTracker)
  fullName.vb: SudokuSpice.Rules.ColumnUniquenessRule.Update(ByRef SudokuSpice.Data.Coordinate, System.Int32, SudokuSpice.Data.CoordinateTracker)
  nameWithType: ColumnUniquenessRule.Update(Coordinate, Int32, CoordinateTracker)
  nameWithType.vb: ColumnUniquenessRule.Update(ByRef Coordinate, Int32, CoordinateTracker)
- uid: SudokuSpice.Rules.ColumnUniquenessRule.Update*
  name: Update
  href: api/SudokuSpice.Rules.ColumnUniquenessRule.html#SudokuSpice_Rules_ColumnUniquenessRule_Update_
  commentId: Overload:SudokuSpice.Rules.ColumnUniquenessRule.Update
  isSpec: "True"
  fullName: SudokuSpice.Rules.ColumnUniquenessRule.Update
  nameWithType: ColumnUniquenessRule.Update
- uid: SudokuSpice.Rules.DiagonalUniquenessRule
  name: DiagonalUniquenessRule
  href: api/SudokuSpice.Rules.DiagonalUniquenessRule.html
  commentId: T:SudokuSpice.Rules.DiagonalUniquenessRule
  fullName: SudokuSpice.Rules.DiagonalUniquenessRule
  nameWithType: DiagonalUniquenessRule
- uid: SudokuSpice.Rules.DiagonalUniquenessRule.#ctor(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.Data.BitVector)
  name: DiagonalUniquenessRule(IReadOnlyPuzzle, BitVector)
  href: api/SudokuSpice.Rules.DiagonalUniquenessRule.html#SudokuSpice_Rules_DiagonalUniquenessRule__ctor_SudokuSpice_IReadOnlyPuzzle_SudokuSpice_Data_BitVector_
  commentId: M:SudokuSpice.Rules.DiagonalUniquenessRule.#ctor(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.Data.BitVector)
  fullName: SudokuSpice.Rules.DiagonalUniquenessRule.DiagonalUniquenessRule(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.Data.BitVector)
  nameWithType: DiagonalUniquenessRule.DiagonalUniquenessRule(IReadOnlyPuzzle, BitVector)
- uid: SudokuSpice.Rules.DiagonalUniquenessRule.#ctor*
  name: DiagonalUniquenessRule
  href: api/SudokuSpice.Rules.DiagonalUniquenessRule.html#SudokuSpice_Rules_DiagonalUniquenessRule__ctor_
  commentId: Overload:SudokuSpice.Rules.DiagonalUniquenessRule.#ctor
  isSpec: "True"
  fullName: SudokuSpice.Rules.DiagonalUniquenessRule.DiagonalUniquenessRule
  nameWithType: DiagonalUniquenessRule.DiagonalUniquenessRule
- uid: SudokuSpice.Rules.DiagonalUniquenessRule.CopyWithNewReference(SudokuSpice.IReadOnlyPuzzle)
  name: CopyWithNewReference(IReadOnlyPuzzle)
  href: api/SudokuSpice.Rules.DiagonalUniquenessRule.html#SudokuSpice_Rules_DiagonalUniquenessRule_CopyWithNewReference_SudokuSpice_IReadOnlyPuzzle_
  commentId: M:SudokuSpice.Rules.DiagonalUniquenessRule.CopyWithNewReference(SudokuSpice.IReadOnlyPuzzle)
  fullName: SudokuSpice.Rules.DiagonalUniquenessRule.CopyWithNewReference(SudokuSpice.IReadOnlyPuzzle)
  nameWithType: DiagonalUniquenessRule.CopyWithNewReference(IReadOnlyPuzzle)
- uid: SudokuSpice.Rules.DiagonalUniquenessRule.CopyWithNewReference*
  name: CopyWithNewReference
  href: api/SudokuSpice.Rules.DiagonalUniquenessRule.html#SudokuSpice_Rules_DiagonalUniquenessRule_CopyWithNewReference_
  commentId: Overload:SudokuSpice.Rules.DiagonalUniquenessRule.CopyWithNewReference
  isSpec: "True"
  fullName: SudokuSpice.Rules.DiagonalUniquenessRule.CopyWithNewReference
  nameWithType: DiagonalUniquenessRule.CopyWithNewReference
- uid: SudokuSpice.Rules.DiagonalUniquenessRule.GetPossibleValues(SudokuSpice.Data.Coordinate@)
  name: GetPossibleValues(Coordinate)
  href: api/SudokuSpice.Rules.DiagonalUniquenessRule.html#SudokuSpice_Rules_DiagonalUniquenessRule_GetPossibleValues_SudokuSpice_Data_Coordinate__
  commentId: M:SudokuSpice.Rules.DiagonalUniquenessRule.GetPossibleValues(SudokuSpice.Data.Coordinate@)
  name.vb: GetPossibleValues(ByRef Coordinate)
  fullName: SudokuSpice.Rules.DiagonalUniquenessRule.GetPossibleValues(SudokuSpice.Data.Coordinate)
  fullName.vb: SudokuSpice.Rules.DiagonalUniquenessRule.GetPossibleValues(ByRef SudokuSpice.Data.Coordinate)
  nameWithType: DiagonalUniquenessRule.GetPossibleValues(Coordinate)
  nameWithType.vb: DiagonalUniquenessRule.GetPossibleValues(ByRef Coordinate)
- uid: SudokuSpice.Rules.DiagonalUniquenessRule.GetPossibleValues*
  name: GetPossibleValues
  href: api/SudokuSpice.Rules.DiagonalUniquenessRule.html#SudokuSpice_Rules_DiagonalUniquenessRule_GetPossibleValues_
  commentId: Overload:SudokuSpice.Rules.DiagonalUniquenessRule.GetPossibleValues
  isSpec: "True"
  fullName: SudokuSpice.Rules.DiagonalUniquenessRule.GetPossibleValues
  nameWithType: DiagonalUniquenessRule.GetPossibleValues
- uid: SudokuSpice.Rules.DiagonalUniquenessRule.Revert(SudokuSpice.Data.Coordinate@,System.Int32)
  name: Revert(Coordinate, Int32)
  href: api/SudokuSpice.Rules.DiagonalUniquenessRule.html#SudokuSpice_Rules_DiagonalUniquenessRule_Revert_SudokuSpice_Data_Coordinate__System_Int32_
  commentId: M:SudokuSpice.Rules.DiagonalUniquenessRule.Revert(SudokuSpice.Data.Coordinate@,System.Int32)
  name.vb: Revert(ByRef Coordinate, Int32)
  fullName: SudokuSpice.Rules.DiagonalUniquenessRule.Revert(SudokuSpice.Data.Coordinate, System.Int32)
  fullName.vb: SudokuSpice.Rules.DiagonalUniquenessRule.Revert(ByRef SudokuSpice.Data.Coordinate, System.Int32)
  nameWithType: DiagonalUniquenessRule.Revert(Coordinate, Int32)
  nameWithType.vb: DiagonalUniquenessRule.Revert(ByRef Coordinate, Int32)
- uid: SudokuSpice.Rules.DiagonalUniquenessRule.Revert(SudokuSpice.Data.Coordinate@,System.Int32,SudokuSpice.Data.CoordinateTracker)
  name: Revert(Coordinate, Int32, CoordinateTracker)
  href: api/SudokuSpice.Rules.DiagonalUniquenessRule.html#SudokuSpice_Rules_DiagonalUniquenessRule_Revert_SudokuSpice_Data_Coordinate__System_Int32_SudokuSpice_Data_CoordinateTracker_
  commentId: M:SudokuSpice.Rules.DiagonalUniquenessRule.Revert(SudokuSpice.Data.Coordinate@,System.Int32,SudokuSpice.Data.CoordinateTracker)
  name.vb: Revert(ByRef Coordinate, Int32, CoordinateTracker)
  fullName: SudokuSpice.Rules.DiagonalUniquenessRule.Revert(SudokuSpice.Data.Coordinate, System.Int32, SudokuSpice.Data.CoordinateTracker)
  fullName.vb: SudokuSpice.Rules.DiagonalUniquenessRule.Revert(ByRef SudokuSpice.Data.Coordinate, System.Int32, SudokuSpice.Data.CoordinateTracker)
  nameWithType: DiagonalUniquenessRule.Revert(Coordinate, Int32, CoordinateTracker)
  nameWithType.vb: DiagonalUniquenessRule.Revert(ByRef Coordinate, Int32, CoordinateTracker)
- uid: SudokuSpice.Rules.DiagonalUniquenessRule.Revert*
  name: Revert
  href: api/SudokuSpice.Rules.DiagonalUniquenessRule.html#SudokuSpice_Rules_DiagonalUniquenessRule_Revert_
  commentId: Overload:SudokuSpice.Rules.DiagonalUniquenessRule.Revert
  isSpec: "True"
  fullName: SudokuSpice.Rules.DiagonalUniquenessRule.Revert
  nameWithType: DiagonalUniquenessRule.Revert
- uid: SudokuSpice.Rules.DiagonalUniquenessRule.Update(SudokuSpice.Data.Coordinate@,System.Int32,SudokuSpice.Data.CoordinateTracker)
  name: Update(Coordinate, Int32, CoordinateTracker)
  href: api/SudokuSpice.Rules.DiagonalUniquenessRule.html#SudokuSpice_Rules_DiagonalUniquenessRule_Update_SudokuSpice_Data_Coordinate__System_Int32_SudokuSpice_Data_CoordinateTracker_
  commentId: M:SudokuSpice.Rules.DiagonalUniquenessRule.Update(SudokuSpice.Data.Coordinate@,System.Int32,SudokuSpice.Data.CoordinateTracker)
  name.vb: Update(ByRef Coordinate, Int32, CoordinateTracker)
  fullName: SudokuSpice.Rules.DiagonalUniquenessRule.Update(SudokuSpice.Data.Coordinate, System.Int32, SudokuSpice.Data.CoordinateTracker)
  fullName.vb: SudokuSpice.Rules.DiagonalUniquenessRule.Update(ByRef SudokuSpice.Data.Coordinate, System.Int32, SudokuSpice.Data.CoordinateTracker)
  nameWithType: DiagonalUniquenessRule.Update(Coordinate, Int32, CoordinateTracker)
  nameWithType.vb: DiagonalUniquenessRule.Update(ByRef Coordinate, Int32, CoordinateTracker)
- uid: SudokuSpice.Rules.DiagonalUniquenessRule.Update*
  name: Update
  href: api/SudokuSpice.Rules.DiagonalUniquenessRule.html#SudokuSpice_Rules_DiagonalUniquenessRule_Update_
  commentId: Overload:SudokuSpice.Rules.DiagonalUniquenessRule.Update
  isSpec: "True"
  fullName: SudokuSpice.Rules.DiagonalUniquenessRule.Update
  nameWithType: DiagonalUniquenessRule.Update
- uid: SudokuSpice.Rules.DynamicRuleKeeper
  name: DynamicRuleKeeper
  href: api/SudokuSpice.Rules.DynamicRuleKeeper.html
  commentId: T:SudokuSpice.Rules.DynamicRuleKeeper
  fullName: SudokuSpice.Rules.DynamicRuleKeeper
  nameWithType: DynamicRuleKeeper
- uid: SudokuSpice.Rules.DynamicRuleKeeper.#ctor(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.Data.PossibleValues,System.Collections.Generic.IReadOnlyList{SudokuSpice.Rules.ISudokuRule})
  name: DynamicRuleKeeper(IReadOnlyPuzzle, PossibleValues, IReadOnlyList<ISudokuRule>)
  href: api/SudokuSpice.Rules.DynamicRuleKeeper.html#SudokuSpice_Rules_DynamicRuleKeeper__ctor_SudokuSpice_IReadOnlyPuzzle_SudokuSpice_Data_PossibleValues_System_Collections_Generic_IReadOnlyList_SudokuSpice_Rules_ISudokuRule__
  commentId: M:SudokuSpice.Rules.DynamicRuleKeeper.#ctor(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.Data.PossibleValues,System.Collections.Generic.IReadOnlyList{SudokuSpice.Rules.ISudokuRule})
  name.vb: DynamicRuleKeeper(IReadOnlyPuzzle, PossibleValues, IReadOnlyList(Of ISudokuRule))
  fullName: SudokuSpice.Rules.DynamicRuleKeeper.DynamicRuleKeeper(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.Data.PossibleValues, System.Collections.Generic.IReadOnlyList<SudokuSpice.Rules.ISudokuRule>)
  fullName.vb: SudokuSpice.Rules.DynamicRuleKeeper.DynamicRuleKeeper(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.Data.PossibleValues, System.Collections.Generic.IReadOnlyList(Of SudokuSpice.Rules.ISudokuRule))
  nameWithType: DynamicRuleKeeper.DynamicRuleKeeper(IReadOnlyPuzzle, PossibleValues, IReadOnlyList<ISudokuRule>)
  nameWithType.vb: DynamicRuleKeeper.DynamicRuleKeeper(IReadOnlyPuzzle, PossibleValues, IReadOnlyList(Of ISudokuRule))
- uid: SudokuSpice.Rules.DynamicRuleKeeper.#ctor*
  name: DynamicRuleKeeper
  href: api/SudokuSpice.Rules.DynamicRuleKeeper.html#SudokuSpice_Rules_DynamicRuleKeeper__ctor_
  commentId: Overload:SudokuSpice.Rules.DynamicRuleKeeper.#ctor
  isSpec: "True"
  fullName: SudokuSpice.Rules.DynamicRuleKeeper.DynamicRuleKeeper
  nameWithType: DynamicRuleKeeper.DynamicRuleKeeper
- uid: SudokuSpice.Rules.DynamicRuleKeeper.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.Data.PossibleValues)
  name: CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues)
  href: api/SudokuSpice.Rules.DynamicRuleKeeper.html#SudokuSpice_Rules_DynamicRuleKeeper_CopyWithNewReferences_SudokuSpice_IReadOnlyPuzzle_SudokuSpice_Data_PossibleValues_
  commentId: M:SudokuSpice.Rules.DynamicRuleKeeper.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.Data.PossibleValues)
  fullName: SudokuSpice.Rules.DynamicRuleKeeper.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.Data.PossibleValues)
  nameWithType: DynamicRuleKeeper.CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues)
- uid: SudokuSpice.Rules.DynamicRuleKeeper.CopyWithNewReferences*
  name: CopyWithNewReferences
  href: api/SudokuSpice.Rules.DynamicRuleKeeper.html#SudokuSpice_Rules_DynamicRuleKeeper_CopyWithNewReferences_
  commentId: Overload:SudokuSpice.Rules.DynamicRuleKeeper.CopyWithNewReferences
  isSpec: "True"
  fullName: SudokuSpice.Rules.DynamicRuleKeeper.CopyWithNewReferences
  nameWithType: DynamicRuleKeeper.CopyWithNewReferences
- uid: SudokuSpice.Rules.DynamicRuleKeeper.GetRules
  name: GetRules()
  href: api/SudokuSpice.Rules.DynamicRuleKeeper.html#SudokuSpice_Rules_DynamicRuleKeeper_GetRules
  commentId: M:SudokuSpice.Rules.DynamicRuleKeeper.GetRules
  fullName: SudokuSpice.Rules.DynamicRuleKeeper.GetRules()
  nameWithType: DynamicRuleKeeper.GetRules()
- uid: SudokuSpice.Rules.DynamicRuleKeeper.GetRules*
  name: GetRules
  href: api/SudokuSpice.Rules.DynamicRuleKeeper.html#SudokuSpice_Rules_DynamicRuleKeeper_GetRules_
  commentId: Overload:SudokuSpice.Rules.DynamicRuleKeeper.GetRules
  isSpec: "True"
  fullName: SudokuSpice.Rules.DynamicRuleKeeper.GetRules
  nameWithType: DynamicRuleKeeper.GetRules
- uid: SudokuSpice.Rules.DynamicRuleKeeper.TrySet(SudokuSpice.Data.Coordinate@,System.Int32)
  name: TrySet(Coordinate, Int32)
  href: api/SudokuSpice.Rules.DynamicRuleKeeper.html#SudokuSpice_Rules_DynamicRuleKeeper_TrySet_SudokuSpice_Data_Coordinate__System_Int32_
  commentId: M:SudokuSpice.Rules.DynamicRuleKeeper.TrySet(SudokuSpice.Data.Coordinate@,System.Int32)
  name.vb: TrySet(ByRef Coordinate, Int32)
  fullName: SudokuSpice.Rules.DynamicRuleKeeper.TrySet(SudokuSpice.Data.Coordinate, System.Int32)
  fullName.vb: SudokuSpice.Rules.DynamicRuleKeeper.TrySet(ByRef SudokuSpice.Data.Coordinate, System.Int32)
  nameWithType: DynamicRuleKeeper.TrySet(Coordinate, Int32)
  nameWithType.vb: DynamicRuleKeeper.TrySet(ByRef Coordinate, Int32)
- uid: SudokuSpice.Rules.DynamicRuleKeeper.TrySet*
  name: TrySet
  href: api/SudokuSpice.Rules.DynamicRuleKeeper.html#SudokuSpice_Rules_DynamicRuleKeeper_TrySet_
  commentId: Overload:SudokuSpice.Rules.DynamicRuleKeeper.TrySet
  isSpec: "True"
  fullName: SudokuSpice.Rules.DynamicRuleKeeper.TrySet
  nameWithType: DynamicRuleKeeper.TrySet
- uid: SudokuSpice.Rules.DynamicRuleKeeper.Unset(SudokuSpice.Data.Coordinate@,System.Int32)
  name: Unset(Coordinate, Int32)
  href: api/SudokuSpice.Rules.DynamicRuleKeeper.html#SudokuSpice_Rules_DynamicRuleKeeper_Unset_SudokuSpice_Data_Coordinate__System_Int32_
  commentId: M:SudokuSpice.Rules.DynamicRuleKeeper.Unset(SudokuSpice.Data.Coordinate@,System.Int32)
  name.vb: Unset(ByRef Coordinate, Int32)
  fullName: SudokuSpice.Rules.DynamicRuleKeeper.Unset(SudokuSpice.Data.Coordinate, System.Int32)
  fullName.vb: SudokuSpice.Rules.DynamicRuleKeeper.Unset(ByRef SudokuSpice.Data.Coordinate, System.Int32)
  nameWithType: DynamicRuleKeeper.Unset(Coordinate, Int32)
  nameWithType.vb: DynamicRuleKeeper.Unset(ByRef Coordinate, Int32)
- uid: SudokuSpice.Rules.DynamicRuleKeeper.Unset*
  name: Unset
  href: api/SudokuSpice.Rules.DynamicRuleKeeper.html#SudokuSpice_Rules_DynamicRuleKeeper_Unset_
  commentId: Overload:SudokuSpice.Rules.DynamicRuleKeeper.Unset
  isSpec: "True"
  fullName: SudokuSpice.Rules.DynamicRuleKeeper.Unset
  nameWithType: DynamicRuleKeeper.Unset
- uid: SudokuSpice.Rules.IMissingBoxValuesTracker
  name: IMissingBoxValuesTracker
  href: api/SudokuSpice.Rules.IMissingBoxValuesTracker.html
  commentId: T:SudokuSpice.Rules.IMissingBoxValuesTracker
  fullName: SudokuSpice.Rules.IMissingBoxValuesTracker
  nameWithType: IMissingBoxValuesTracker
- uid: SudokuSpice.Rules.IMissingBoxValuesTracker.GetMissingValuesForBox(System.Int32)
  name: GetMissingValuesForBox(Int32)
  href: api/SudokuSpice.Rules.IMissingBoxValuesTracker.html#SudokuSpice_Rules_IMissingBoxValuesTracker_GetMissingValuesForBox_System_Int32_
  commentId: M:SudokuSpice.Rules.IMissingBoxValuesTracker.GetMissingValuesForBox(System.Int32)
  fullName: SudokuSpice.Rules.IMissingBoxValuesTracker.GetMissingValuesForBox(System.Int32)
  nameWithType: IMissingBoxValuesTracker.GetMissingValuesForBox(Int32)
- uid: SudokuSpice.Rules.IMissingBoxValuesTracker.GetMissingValuesForBox*
  name: GetMissingValuesForBox
  href: api/SudokuSpice.Rules.IMissingBoxValuesTracker.html#SudokuSpice_Rules_IMissingBoxValuesTracker_GetMissingValuesForBox_
  commentId: Overload:SudokuSpice.Rules.IMissingBoxValuesTracker.GetMissingValuesForBox
  isSpec: "True"
  fullName: SudokuSpice.Rules.IMissingBoxValuesTracker.GetMissingValuesForBox
  nameWithType: IMissingBoxValuesTracker.GetMissingValuesForBox
- uid: SudokuSpice.Rules.IMissingColumnValuesTracker
  name: IMissingColumnValuesTracker
  href: api/SudokuSpice.Rules.IMissingColumnValuesTracker.html
  commentId: T:SudokuSpice.Rules.IMissingColumnValuesTracker
  fullName: SudokuSpice.Rules.IMissingColumnValuesTracker
  nameWithType: IMissingColumnValuesTracker
- uid: SudokuSpice.Rules.IMissingColumnValuesTracker.GetMissingValuesForColumn(System.Int32)
  name: GetMissingValuesForColumn(Int32)
  href: api/SudokuSpice.Rules.IMissingColumnValuesTracker.html#SudokuSpice_Rules_IMissingColumnValuesTracker_GetMissingValuesForColumn_System_Int32_
  commentId: M:SudokuSpice.Rules.IMissingColumnValuesTracker.GetMissingValuesForColumn(System.Int32)
  fullName: SudokuSpice.Rules.IMissingColumnValuesTracker.GetMissingValuesForColumn(System.Int32)
  nameWithType: IMissingColumnValuesTracker.GetMissingValuesForColumn(Int32)
- uid: SudokuSpice.Rules.IMissingColumnValuesTracker.GetMissingValuesForColumn*
  name: GetMissingValuesForColumn
  href: api/SudokuSpice.Rules.IMissingColumnValuesTracker.html#SudokuSpice_Rules_IMissingColumnValuesTracker_GetMissingValuesForColumn_
  commentId: Overload:SudokuSpice.Rules.IMissingColumnValuesTracker.GetMissingValuesForColumn
  isSpec: "True"
  fullName: SudokuSpice.Rules.IMissingColumnValuesTracker.GetMissingValuesForColumn
  nameWithType: IMissingColumnValuesTracker.GetMissingValuesForColumn
- uid: SudokuSpice.Rules.IMissingRowValuesTracker
  name: IMissingRowValuesTracker
  href: api/SudokuSpice.Rules.IMissingRowValuesTracker.html
  commentId: T:SudokuSpice.Rules.IMissingRowValuesTracker
  fullName: SudokuSpice.Rules.IMissingRowValuesTracker
  nameWithType: IMissingRowValuesTracker
- uid: SudokuSpice.Rules.IMissingRowValuesTracker.GetMissingValuesForRow(System.Int32)
  name: GetMissingValuesForRow(Int32)
  href: api/SudokuSpice.Rules.IMissingRowValuesTracker.html#SudokuSpice_Rules_IMissingRowValuesTracker_GetMissingValuesForRow_System_Int32_
  commentId: M:SudokuSpice.Rules.IMissingRowValuesTracker.GetMissingValuesForRow(System.Int32)
  fullName: SudokuSpice.Rules.IMissingRowValuesTracker.GetMissingValuesForRow(System.Int32)
  nameWithType: IMissingRowValuesTracker.GetMissingValuesForRow(Int32)
- uid: SudokuSpice.Rules.IMissingRowValuesTracker.GetMissingValuesForRow*
  name: GetMissingValuesForRow
  href: api/SudokuSpice.Rules.IMissingRowValuesTracker.html#SudokuSpice_Rules_IMissingRowValuesTracker_GetMissingValuesForRow_
  commentId: Overload:SudokuSpice.Rules.IMissingRowValuesTracker.GetMissingValuesForRow
  isSpec: "True"
  fullName: SudokuSpice.Rules.IMissingRowValuesTracker.GetMissingValuesForRow
  nameWithType: IMissingRowValuesTracker.GetMissingValuesForRow
- uid: SudokuSpice.Rules.ISudokuRule
  name: ISudokuRule
  href: api/SudokuSpice.Rules.ISudokuRule.html
  commentId: T:SudokuSpice.Rules.ISudokuRule
  fullName: SudokuSpice.Rules.ISudokuRule
  nameWithType: ISudokuRule
- uid: SudokuSpice.Rules.ISudokuRule.CopyWithNewReference(SudokuSpice.IReadOnlyPuzzle)
  name: CopyWithNewReference(IReadOnlyPuzzle)
  href: api/SudokuSpice.Rules.ISudokuRule.html#SudokuSpice_Rules_ISudokuRule_CopyWithNewReference_SudokuSpice_IReadOnlyPuzzle_
  commentId: M:SudokuSpice.Rules.ISudokuRule.CopyWithNewReference(SudokuSpice.IReadOnlyPuzzle)
  fullName: SudokuSpice.Rules.ISudokuRule.CopyWithNewReference(SudokuSpice.IReadOnlyPuzzle)
  nameWithType: ISudokuRule.CopyWithNewReference(IReadOnlyPuzzle)
- uid: SudokuSpice.Rules.ISudokuRule.CopyWithNewReference*
  name: CopyWithNewReference
  href: api/SudokuSpice.Rules.ISudokuRule.html#SudokuSpice_Rules_ISudokuRule_CopyWithNewReference_
  commentId: Overload:SudokuSpice.Rules.ISudokuRule.CopyWithNewReference
  isSpec: "True"
  fullName: SudokuSpice.Rules.ISudokuRule.CopyWithNewReference
  nameWithType: ISudokuRule.CopyWithNewReference
- uid: SudokuSpice.Rules.ISudokuRule.GetPossibleValues(SudokuSpice.Data.Coordinate@)
  name: GetPossibleValues(Coordinate)
  href: api/SudokuSpice.Rules.ISudokuRule.html#SudokuSpice_Rules_ISudokuRule_GetPossibleValues_SudokuSpice_Data_Coordinate__
  commentId: M:SudokuSpice.Rules.ISudokuRule.GetPossibleValues(SudokuSpice.Data.Coordinate@)
  name.vb: GetPossibleValues(ByRef Coordinate)
  fullName: SudokuSpice.Rules.ISudokuRule.GetPossibleValues(SudokuSpice.Data.Coordinate)
  fullName.vb: SudokuSpice.Rules.ISudokuRule.GetPossibleValues(ByRef SudokuSpice.Data.Coordinate)
  nameWithType: ISudokuRule.GetPossibleValues(Coordinate)
  nameWithType.vb: ISudokuRule.GetPossibleValues(ByRef Coordinate)
- uid: SudokuSpice.Rules.ISudokuRule.GetPossibleValues*
  name: GetPossibleValues
  href: api/SudokuSpice.Rules.ISudokuRule.html#SudokuSpice_Rules_ISudokuRule_GetPossibleValues_
  commentId: Overload:SudokuSpice.Rules.ISudokuRule.GetPossibleValues
  isSpec: "True"
  fullName: SudokuSpice.Rules.ISudokuRule.GetPossibleValues
  nameWithType: ISudokuRule.GetPossibleValues
- uid: SudokuSpice.Rules.ISudokuRule.Revert(SudokuSpice.Data.Coordinate@,System.Int32)
  name: Revert(Coordinate, Int32)
  href: api/SudokuSpice.Rules.ISudokuRule.html#SudokuSpice_Rules_ISudokuRule_Revert_SudokuSpice_Data_Coordinate__System_Int32_
  commentId: M:SudokuSpice.Rules.ISudokuRule.Revert(SudokuSpice.Data.Coordinate@,System.Int32)
  name.vb: Revert(ByRef Coordinate, Int32)
  fullName: SudokuSpice.Rules.ISudokuRule.Revert(SudokuSpice.Data.Coordinate, System.Int32)
  fullName.vb: SudokuSpice.Rules.ISudokuRule.Revert(ByRef SudokuSpice.Data.Coordinate, System.Int32)
  nameWithType: ISudokuRule.Revert(Coordinate, Int32)
  nameWithType.vb: ISudokuRule.Revert(ByRef Coordinate, Int32)
- uid: SudokuSpice.Rules.ISudokuRule.Revert(SudokuSpice.Data.Coordinate@,System.Int32,SudokuSpice.Data.CoordinateTracker)
  name: Revert(Coordinate, Int32, CoordinateTracker)
  href: api/SudokuSpice.Rules.ISudokuRule.html#SudokuSpice_Rules_ISudokuRule_Revert_SudokuSpice_Data_Coordinate__System_Int32_SudokuSpice_Data_CoordinateTracker_
  commentId: M:SudokuSpice.Rules.ISudokuRule.Revert(SudokuSpice.Data.Coordinate@,System.Int32,SudokuSpice.Data.CoordinateTracker)
  name.vb: Revert(ByRef Coordinate, Int32, CoordinateTracker)
  fullName: SudokuSpice.Rules.ISudokuRule.Revert(SudokuSpice.Data.Coordinate, System.Int32, SudokuSpice.Data.CoordinateTracker)
  fullName.vb: SudokuSpice.Rules.ISudokuRule.Revert(ByRef SudokuSpice.Data.Coordinate, System.Int32, SudokuSpice.Data.CoordinateTracker)
  nameWithType: ISudokuRule.Revert(Coordinate, Int32, CoordinateTracker)
  nameWithType.vb: ISudokuRule.Revert(ByRef Coordinate, Int32, CoordinateTracker)
- uid: SudokuSpice.Rules.ISudokuRule.Revert*
  name: Revert
  href: api/SudokuSpice.Rules.ISudokuRule.html#SudokuSpice_Rules_ISudokuRule_Revert_
  commentId: Overload:SudokuSpice.Rules.ISudokuRule.Revert
  isSpec: "True"
  fullName: SudokuSpice.Rules.ISudokuRule.Revert
  nameWithType: ISudokuRule.Revert
- uid: SudokuSpice.Rules.ISudokuRule.Update(SudokuSpice.Data.Coordinate@,System.Int32,SudokuSpice.Data.CoordinateTracker)
  name: Update(Coordinate, Int32, CoordinateTracker)
  href: api/SudokuSpice.Rules.ISudokuRule.html#SudokuSpice_Rules_ISudokuRule_Update_SudokuSpice_Data_Coordinate__System_Int32_SudokuSpice_Data_CoordinateTracker_
  commentId: M:SudokuSpice.Rules.ISudokuRule.Update(SudokuSpice.Data.Coordinate@,System.Int32,SudokuSpice.Data.CoordinateTracker)
  name.vb: Update(ByRef Coordinate, Int32, CoordinateTracker)
  fullName: SudokuSpice.Rules.ISudokuRule.Update(SudokuSpice.Data.Coordinate, System.Int32, SudokuSpice.Data.CoordinateTracker)
  fullName.vb: SudokuSpice.Rules.ISudokuRule.Update(ByRef SudokuSpice.Data.Coordinate, System.Int32, SudokuSpice.Data.CoordinateTracker)
  nameWithType: ISudokuRule.Update(Coordinate, Int32, CoordinateTracker)
  nameWithType.vb: ISudokuRule.Update(ByRef Coordinate, Int32, CoordinateTracker)
- uid: SudokuSpice.Rules.ISudokuRule.Update*
  name: Update
  href: api/SudokuSpice.Rules.ISudokuRule.html#SudokuSpice_Rules_ISudokuRule_Update_
  commentId: Overload:SudokuSpice.Rules.ISudokuRule.Update
  isSpec: "True"
  fullName: SudokuSpice.Rules.ISudokuRule.Update
  nameWithType: ISudokuRule.Update
- uid: SudokuSpice.Rules.ISudokuRuleKeeper
  name: ISudokuRuleKeeper
  href: api/SudokuSpice.Rules.ISudokuRuleKeeper.html
  commentId: T:SudokuSpice.Rules.ISudokuRuleKeeper
  fullName: SudokuSpice.Rules.ISudokuRuleKeeper
  nameWithType: ISudokuRuleKeeper
- uid: SudokuSpice.Rules.ISudokuRuleKeeper.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.Data.PossibleValues)
  name: CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues)
  href: api/SudokuSpice.Rules.ISudokuRuleKeeper.html#SudokuSpice_Rules_ISudokuRuleKeeper_CopyWithNewReferences_SudokuSpice_IReadOnlyPuzzle_SudokuSpice_Data_PossibleValues_
  commentId: M:SudokuSpice.Rules.ISudokuRuleKeeper.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.Data.PossibleValues)
  fullName: SudokuSpice.Rules.ISudokuRuleKeeper.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.Data.PossibleValues)
  nameWithType: ISudokuRuleKeeper.CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues)
- uid: SudokuSpice.Rules.ISudokuRuleKeeper.CopyWithNewReferences*
  name: CopyWithNewReferences
  href: api/SudokuSpice.Rules.ISudokuRuleKeeper.html#SudokuSpice_Rules_ISudokuRuleKeeper_CopyWithNewReferences_
  commentId: Overload:SudokuSpice.Rules.ISudokuRuleKeeper.CopyWithNewReferences
  isSpec: "True"
  fullName: SudokuSpice.Rules.ISudokuRuleKeeper.CopyWithNewReferences
  nameWithType: ISudokuRuleKeeper.CopyWithNewReferences
- uid: SudokuSpice.Rules.ISudokuRuleKeeper.GetRules
  name: GetRules()
  href: api/SudokuSpice.Rules.ISudokuRuleKeeper.html#SudokuSpice_Rules_ISudokuRuleKeeper_GetRules
  commentId: M:SudokuSpice.Rules.ISudokuRuleKeeper.GetRules
  fullName: SudokuSpice.Rules.ISudokuRuleKeeper.GetRules()
  nameWithType: ISudokuRuleKeeper.GetRules()
- uid: SudokuSpice.Rules.ISudokuRuleKeeper.GetRules*
  name: GetRules
  href: api/SudokuSpice.Rules.ISudokuRuleKeeper.html#SudokuSpice_Rules_ISudokuRuleKeeper_GetRules_
  commentId: Overload:SudokuSpice.Rules.ISudokuRuleKeeper.GetRules
  isSpec: "True"
  fullName: SudokuSpice.Rules.ISudokuRuleKeeper.GetRules
  nameWithType: ISudokuRuleKeeper.GetRules
- uid: SudokuSpice.Rules.ISudokuRuleKeeper.TrySet(SudokuSpice.Data.Coordinate@,System.Int32)
  name: TrySet(Coordinate, Int32)
  href: api/SudokuSpice.Rules.ISudokuRuleKeeper.html#SudokuSpice_Rules_ISudokuRuleKeeper_TrySet_SudokuSpice_Data_Coordinate__System_Int32_
  commentId: M:SudokuSpice.Rules.ISudokuRuleKeeper.TrySet(SudokuSpice.Data.Coordinate@,System.Int32)
  name.vb: TrySet(ByRef Coordinate, Int32)
  fullName: SudokuSpice.Rules.ISudokuRuleKeeper.TrySet(SudokuSpice.Data.Coordinate, System.Int32)
  fullName.vb: SudokuSpice.Rules.ISudokuRuleKeeper.TrySet(ByRef SudokuSpice.Data.Coordinate, System.Int32)
  nameWithType: ISudokuRuleKeeper.TrySet(Coordinate, Int32)
  nameWithType.vb: ISudokuRuleKeeper.TrySet(ByRef Coordinate, Int32)
- uid: SudokuSpice.Rules.ISudokuRuleKeeper.TrySet*
  name: TrySet
  href: api/SudokuSpice.Rules.ISudokuRuleKeeper.html#SudokuSpice_Rules_ISudokuRuleKeeper_TrySet_
  commentId: Overload:SudokuSpice.Rules.ISudokuRuleKeeper.TrySet
  isSpec: "True"
  fullName: SudokuSpice.Rules.ISudokuRuleKeeper.TrySet
  nameWithType: ISudokuRuleKeeper.TrySet
- uid: SudokuSpice.Rules.ISudokuRuleKeeper.Unset(SudokuSpice.Data.Coordinate@,System.Int32)
  name: Unset(Coordinate, Int32)
  href: api/SudokuSpice.Rules.ISudokuRuleKeeper.html#SudokuSpice_Rules_ISudokuRuleKeeper_Unset_SudokuSpice_Data_Coordinate__System_Int32_
  commentId: M:SudokuSpice.Rules.ISudokuRuleKeeper.Unset(SudokuSpice.Data.Coordinate@,System.Int32)
  name.vb: Unset(ByRef Coordinate, Int32)
  fullName: SudokuSpice.Rules.ISudokuRuleKeeper.Unset(SudokuSpice.Data.Coordinate, System.Int32)
  fullName.vb: SudokuSpice.Rules.ISudokuRuleKeeper.Unset(ByRef SudokuSpice.Data.Coordinate, System.Int32)
  nameWithType: ISudokuRuleKeeper.Unset(Coordinate, Int32)
  nameWithType.vb: ISudokuRuleKeeper.Unset(ByRef Coordinate, Int32)
- uid: SudokuSpice.Rules.ISudokuRuleKeeper.Unset*
  name: Unset
  href: api/SudokuSpice.Rules.ISudokuRuleKeeper.html#SudokuSpice_Rules_ISudokuRuleKeeper_Unset_
  commentId: Overload:SudokuSpice.Rules.ISudokuRuleKeeper.Unset
  isSpec: "True"
  fullName: SudokuSpice.Rules.ISudokuRuleKeeper.Unset
  nameWithType: ISudokuRuleKeeper.Unset
- uid: SudokuSpice.Rules.RowUniquenessRule
  name: RowUniquenessRule
  href: api/SudokuSpice.Rules.RowUniquenessRule.html
  commentId: T:SudokuSpice.Rules.RowUniquenessRule
  fullName: SudokuSpice.Rules.RowUniquenessRule
  nameWithType: RowUniquenessRule
- uid: SudokuSpice.Rules.RowUniquenessRule.#ctor(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.Data.BitVector)
  name: RowUniquenessRule(IReadOnlyPuzzle, BitVector)
  href: api/SudokuSpice.Rules.RowUniquenessRule.html#SudokuSpice_Rules_RowUniquenessRule__ctor_SudokuSpice_IReadOnlyPuzzle_SudokuSpice_Data_BitVector_
  commentId: M:SudokuSpice.Rules.RowUniquenessRule.#ctor(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.Data.BitVector)
  fullName: SudokuSpice.Rules.RowUniquenessRule.RowUniquenessRule(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.Data.BitVector)
  nameWithType: RowUniquenessRule.RowUniquenessRule(IReadOnlyPuzzle, BitVector)
- uid: SudokuSpice.Rules.RowUniquenessRule.#ctor*
  name: RowUniquenessRule
  href: api/SudokuSpice.Rules.RowUniquenessRule.html#SudokuSpice_Rules_RowUniquenessRule__ctor_
  commentId: Overload:SudokuSpice.Rules.RowUniquenessRule.#ctor
  isSpec: "True"
  fullName: SudokuSpice.Rules.RowUniquenessRule.RowUniquenessRule
  nameWithType: RowUniquenessRule.RowUniquenessRule
- uid: SudokuSpice.Rules.RowUniquenessRule.CopyWithNewReference(SudokuSpice.IReadOnlyPuzzle)
  name: CopyWithNewReference(IReadOnlyPuzzle)
  href: api/SudokuSpice.Rules.RowUniquenessRule.html#SudokuSpice_Rules_RowUniquenessRule_CopyWithNewReference_SudokuSpice_IReadOnlyPuzzle_
  commentId: M:SudokuSpice.Rules.RowUniquenessRule.CopyWithNewReference(SudokuSpice.IReadOnlyPuzzle)
  fullName: SudokuSpice.Rules.RowUniquenessRule.CopyWithNewReference(SudokuSpice.IReadOnlyPuzzle)
  nameWithType: RowUniquenessRule.CopyWithNewReference(IReadOnlyPuzzle)
- uid: SudokuSpice.Rules.RowUniquenessRule.CopyWithNewReference*
  name: CopyWithNewReference
  href: api/SudokuSpice.Rules.RowUniquenessRule.html#SudokuSpice_Rules_RowUniquenessRule_CopyWithNewReference_
  commentId: Overload:SudokuSpice.Rules.RowUniquenessRule.CopyWithNewReference
  isSpec: "True"
  fullName: SudokuSpice.Rules.RowUniquenessRule.CopyWithNewReference
  nameWithType: RowUniquenessRule.CopyWithNewReference
- uid: SudokuSpice.Rules.RowUniquenessRule.GetMissingValuesForRow(System.Int32)
  name: GetMissingValuesForRow(Int32)
  href: api/SudokuSpice.Rules.RowUniquenessRule.html#SudokuSpice_Rules_RowUniquenessRule_GetMissingValuesForRow_System_Int32_
  commentId: M:SudokuSpice.Rules.RowUniquenessRule.GetMissingValuesForRow(System.Int32)
  fullName: SudokuSpice.Rules.RowUniquenessRule.GetMissingValuesForRow(System.Int32)
  nameWithType: RowUniquenessRule.GetMissingValuesForRow(Int32)
- uid: SudokuSpice.Rules.RowUniquenessRule.GetMissingValuesForRow*
  name: GetMissingValuesForRow
  href: api/SudokuSpice.Rules.RowUniquenessRule.html#SudokuSpice_Rules_RowUniquenessRule_GetMissingValuesForRow_
  commentId: Overload:SudokuSpice.Rules.RowUniquenessRule.GetMissingValuesForRow
  isSpec: "True"
  fullName: SudokuSpice.Rules.RowUniquenessRule.GetMissingValuesForRow
  nameWithType: RowUniquenessRule.GetMissingValuesForRow
- uid: SudokuSpice.Rules.RowUniquenessRule.GetPossibleValues(SudokuSpice.Data.Coordinate@)
  name: GetPossibleValues(Coordinate)
  href: api/SudokuSpice.Rules.RowUniquenessRule.html#SudokuSpice_Rules_RowUniquenessRule_GetPossibleValues_SudokuSpice_Data_Coordinate__
  commentId: M:SudokuSpice.Rules.RowUniquenessRule.GetPossibleValues(SudokuSpice.Data.Coordinate@)
  name.vb: GetPossibleValues(ByRef Coordinate)
  fullName: SudokuSpice.Rules.RowUniquenessRule.GetPossibleValues(SudokuSpice.Data.Coordinate)
  fullName.vb: SudokuSpice.Rules.RowUniquenessRule.GetPossibleValues(ByRef SudokuSpice.Data.Coordinate)
  nameWithType: RowUniquenessRule.GetPossibleValues(Coordinate)
  nameWithType.vb: RowUniquenessRule.GetPossibleValues(ByRef Coordinate)
- uid: SudokuSpice.Rules.RowUniquenessRule.GetPossibleValues*
  name: GetPossibleValues
  href: api/SudokuSpice.Rules.RowUniquenessRule.html#SudokuSpice_Rules_RowUniquenessRule_GetPossibleValues_
  commentId: Overload:SudokuSpice.Rules.RowUniquenessRule.GetPossibleValues
  isSpec: "True"
  fullName: SudokuSpice.Rules.RowUniquenessRule.GetPossibleValues
  nameWithType: RowUniquenessRule.GetPossibleValues
- uid: SudokuSpice.Rules.RowUniquenessRule.Revert(SudokuSpice.Data.Coordinate@,System.Int32)
  name: Revert(Coordinate, Int32)
  href: api/SudokuSpice.Rules.RowUniquenessRule.html#SudokuSpice_Rules_RowUniquenessRule_Revert_SudokuSpice_Data_Coordinate__System_Int32_
  commentId: M:SudokuSpice.Rules.RowUniquenessRule.Revert(SudokuSpice.Data.Coordinate@,System.Int32)
  name.vb: Revert(ByRef Coordinate, Int32)
  fullName: SudokuSpice.Rules.RowUniquenessRule.Revert(SudokuSpice.Data.Coordinate, System.Int32)
  fullName.vb: SudokuSpice.Rules.RowUniquenessRule.Revert(ByRef SudokuSpice.Data.Coordinate, System.Int32)
  nameWithType: RowUniquenessRule.Revert(Coordinate, Int32)
  nameWithType.vb: RowUniquenessRule.Revert(ByRef Coordinate, Int32)
- uid: SudokuSpice.Rules.RowUniquenessRule.Revert(SudokuSpice.Data.Coordinate@,System.Int32,SudokuSpice.Data.CoordinateTracker)
  name: Revert(Coordinate, Int32, CoordinateTracker)
  href: api/SudokuSpice.Rules.RowUniquenessRule.html#SudokuSpice_Rules_RowUniquenessRule_Revert_SudokuSpice_Data_Coordinate__System_Int32_SudokuSpice_Data_CoordinateTracker_
  commentId: M:SudokuSpice.Rules.RowUniquenessRule.Revert(SudokuSpice.Data.Coordinate@,System.Int32,SudokuSpice.Data.CoordinateTracker)
  name.vb: Revert(ByRef Coordinate, Int32, CoordinateTracker)
  fullName: SudokuSpice.Rules.RowUniquenessRule.Revert(SudokuSpice.Data.Coordinate, System.Int32, SudokuSpice.Data.CoordinateTracker)
  fullName.vb: SudokuSpice.Rules.RowUniquenessRule.Revert(ByRef SudokuSpice.Data.Coordinate, System.Int32, SudokuSpice.Data.CoordinateTracker)
  nameWithType: RowUniquenessRule.Revert(Coordinate, Int32, CoordinateTracker)
  nameWithType.vb: RowUniquenessRule.Revert(ByRef Coordinate, Int32, CoordinateTracker)
- uid: SudokuSpice.Rules.RowUniquenessRule.Revert*
  name: Revert
  href: api/SudokuSpice.Rules.RowUniquenessRule.html#SudokuSpice_Rules_RowUniquenessRule_Revert_
  commentId: Overload:SudokuSpice.Rules.RowUniquenessRule.Revert
  isSpec: "True"
  fullName: SudokuSpice.Rules.RowUniquenessRule.Revert
  nameWithType: RowUniquenessRule.Revert
- uid: SudokuSpice.Rules.RowUniquenessRule.Update(SudokuSpice.Data.Coordinate@,System.Int32,SudokuSpice.Data.CoordinateTracker)
  name: Update(Coordinate, Int32, CoordinateTracker)
  href: api/SudokuSpice.Rules.RowUniquenessRule.html#SudokuSpice_Rules_RowUniquenessRule_Update_SudokuSpice_Data_Coordinate__System_Int32_SudokuSpice_Data_CoordinateTracker_
  commentId: M:SudokuSpice.Rules.RowUniquenessRule.Update(SudokuSpice.Data.Coordinate@,System.Int32,SudokuSpice.Data.CoordinateTracker)
  name.vb: Update(ByRef Coordinate, Int32, CoordinateTracker)
  fullName: SudokuSpice.Rules.RowUniquenessRule.Update(SudokuSpice.Data.Coordinate, System.Int32, SudokuSpice.Data.CoordinateTracker)
  fullName.vb: SudokuSpice.Rules.RowUniquenessRule.Update(ByRef SudokuSpice.Data.Coordinate, System.Int32, SudokuSpice.Data.CoordinateTracker)
  nameWithType: RowUniquenessRule.Update(Coordinate, Int32, CoordinateTracker)
  nameWithType.vb: RowUniquenessRule.Update(ByRef Coordinate, Int32, CoordinateTracker)
- uid: SudokuSpice.Rules.RowUniquenessRule.Update*
  name: Update
  href: api/SudokuSpice.Rules.RowUniquenessRule.html#SudokuSpice_Rules_RowUniquenessRule_Update_
  commentId: Overload:SudokuSpice.Rules.RowUniquenessRule.Update
  isSpec: "True"
  fullName: SudokuSpice.Rules.RowUniquenessRule.Update
  nameWithType: RowUniquenessRule.Update
- uid: SudokuSpice.Rules.StandardRuleKeeper
  name: StandardRuleKeeper
  href: api/SudokuSpice.Rules.StandardRuleKeeper.html
  commentId: T:SudokuSpice.Rules.StandardRuleKeeper
  fullName: SudokuSpice.Rules.StandardRuleKeeper
  nameWithType: StandardRuleKeeper
- uid: SudokuSpice.Rules.StandardRuleKeeper.#ctor(SudokuSpice.IReadOnlyBoxPuzzle,SudokuSpice.Data.PossibleValues)
  name: StandardRuleKeeper(IReadOnlyBoxPuzzle, PossibleValues)
  href: api/SudokuSpice.Rules.StandardRuleKeeper.html#SudokuSpice_Rules_StandardRuleKeeper__ctor_SudokuSpice_IReadOnlyBoxPuzzle_SudokuSpice_Data_PossibleValues_
  commentId: M:SudokuSpice.Rules.StandardRuleKeeper.#ctor(SudokuSpice.IReadOnlyBoxPuzzle,SudokuSpice.Data.PossibleValues)
  fullName: SudokuSpice.Rules.StandardRuleKeeper.StandardRuleKeeper(SudokuSpice.IReadOnlyBoxPuzzle, SudokuSpice.Data.PossibleValues)
  nameWithType: StandardRuleKeeper.StandardRuleKeeper(IReadOnlyBoxPuzzle, PossibleValues)
- uid: SudokuSpice.Rules.StandardRuleKeeper.#ctor*
  name: StandardRuleKeeper
  href: api/SudokuSpice.Rules.StandardRuleKeeper.html#SudokuSpice_Rules_StandardRuleKeeper__ctor_
  commentId: Overload:SudokuSpice.Rules.StandardRuleKeeper.#ctor
  isSpec: "True"
  fullName: SudokuSpice.Rules.StandardRuleKeeper.StandardRuleKeeper
  nameWithType: StandardRuleKeeper.StandardRuleKeeper
- uid: SudokuSpice.Rules.StandardRuleKeeper.CopyWithNewReference(SudokuSpice.IReadOnlyPuzzle)
  name: CopyWithNewReference(IReadOnlyPuzzle)
  href: api/SudokuSpice.Rules.StandardRuleKeeper.html#SudokuSpice_Rules_StandardRuleKeeper_CopyWithNewReference_SudokuSpice_IReadOnlyPuzzle_
  commentId: M:SudokuSpice.Rules.StandardRuleKeeper.CopyWithNewReference(SudokuSpice.IReadOnlyPuzzle)
  fullName: SudokuSpice.Rules.StandardRuleKeeper.CopyWithNewReference(SudokuSpice.IReadOnlyPuzzle)
  nameWithType: StandardRuleKeeper.CopyWithNewReference(IReadOnlyPuzzle)
- uid: SudokuSpice.Rules.StandardRuleKeeper.CopyWithNewReference*
  name: CopyWithNewReference
  href: api/SudokuSpice.Rules.StandardRuleKeeper.html#SudokuSpice_Rules_StandardRuleKeeper_CopyWithNewReference_
  commentId: Overload:SudokuSpice.Rules.StandardRuleKeeper.CopyWithNewReference
  isSpec: "True"
  fullName: SudokuSpice.Rules.StandardRuleKeeper.CopyWithNewReference
  nameWithType: StandardRuleKeeper.CopyWithNewReference
- uid: SudokuSpice.Rules.StandardRuleKeeper.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.Data.PossibleValues)
  name: CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues)
  href: api/SudokuSpice.Rules.StandardRuleKeeper.html#SudokuSpice_Rules_StandardRuleKeeper_CopyWithNewReferences_SudokuSpice_IReadOnlyPuzzle_SudokuSpice_Data_PossibleValues_
  commentId: M:SudokuSpice.Rules.StandardRuleKeeper.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle,SudokuSpice.Data.PossibleValues)
  fullName: SudokuSpice.Rules.StandardRuleKeeper.CopyWithNewReferences(SudokuSpice.IReadOnlyPuzzle, SudokuSpice.Data.PossibleValues)
  nameWithType: StandardRuleKeeper.CopyWithNewReferences(IReadOnlyPuzzle, PossibleValues)
- uid: SudokuSpice.Rules.StandardRuleKeeper.CopyWithNewReferences*
  name: CopyWithNewReferences
  href: api/SudokuSpice.Rules.StandardRuleKeeper.html#SudokuSpice_Rules_StandardRuleKeeper_CopyWithNewReferences_
  commentId: Overload:SudokuSpice.Rules.StandardRuleKeeper.CopyWithNewReferences
  isSpec: "True"
  fullName: SudokuSpice.Rules.StandardRuleKeeper.CopyWithNewReferences
  nameWithType: StandardRuleKeeper.CopyWithNewReferences
- uid: SudokuSpice.Rules.StandardRuleKeeper.GetMissingValuesForBox(System.Int32)
  name: GetMissingValuesForBox(Int32)
  href: api/SudokuSpice.Rules.StandardRuleKeeper.html#SudokuSpice_Rules_StandardRuleKeeper_GetMissingValuesForBox_System_Int32_
  commentId: M:SudokuSpice.Rules.StandardRuleKeeper.GetMissingValuesForBox(System.Int32)
  fullName: SudokuSpice.Rules.StandardRuleKeeper.GetMissingValuesForBox(System.Int32)
  nameWithType: StandardRuleKeeper.GetMissingValuesForBox(Int32)
- uid: SudokuSpice.Rules.StandardRuleKeeper.GetMissingValuesForBox*
  name: GetMissingValuesForBox
  href: api/SudokuSpice.Rules.StandardRuleKeeper.html#SudokuSpice_Rules_StandardRuleKeeper_GetMissingValuesForBox_
  commentId: Overload:SudokuSpice.Rules.StandardRuleKeeper.GetMissingValuesForBox
  isSpec: "True"
  fullName: SudokuSpice.Rules.StandardRuleKeeper.GetMissingValuesForBox
  nameWithType: StandardRuleKeeper.GetMissingValuesForBox
- uid: SudokuSpice.Rules.StandardRuleKeeper.GetMissingValuesForColumn(System.Int32)
  name: GetMissingValuesForColumn(Int32)
  href: api/SudokuSpice.Rules.StandardRuleKeeper.html#SudokuSpice_Rules_StandardRuleKeeper_GetMissingValuesForColumn_System_Int32_
  commentId: M:SudokuSpice.Rules.StandardRuleKeeper.GetMissingValuesForColumn(System.Int32)
  fullName: SudokuSpice.Rules.StandardRuleKeeper.GetMissingValuesForColumn(System.Int32)
  nameWithType: StandardRuleKeeper.GetMissingValuesForColumn(Int32)
- uid: SudokuSpice.Rules.StandardRuleKeeper.GetMissingValuesForColumn*
  name: GetMissingValuesForColumn
  href: api/SudokuSpice.Rules.StandardRuleKeeper.html#SudokuSpice_Rules_StandardRuleKeeper_GetMissingValuesForColumn_
  commentId: Overload:SudokuSpice.Rules.StandardRuleKeeper.GetMissingValuesForColumn
  isSpec: "True"
  fullName: SudokuSpice.Rules.StandardRuleKeeper.GetMissingValuesForColumn
  nameWithType: StandardRuleKeeper.GetMissingValuesForColumn
- uid: SudokuSpice.Rules.StandardRuleKeeper.GetMissingValuesForRow(System.Int32)
  name: GetMissingValuesForRow(Int32)
  href: api/SudokuSpice.Rules.StandardRuleKeeper.html#SudokuSpice_Rules_StandardRuleKeeper_GetMissingValuesForRow_System_Int32_
  commentId: M:SudokuSpice.Rules.StandardRuleKeeper.GetMissingValuesForRow(System.Int32)
  fullName: SudokuSpice.Rules.StandardRuleKeeper.GetMissingValuesForRow(System.Int32)
  nameWithType: StandardRuleKeeper.GetMissingValuesForRow(Int32)
- uid: SudokuSpice.Rules.StandardRuleKeeper.GetMissingValuesForRow*
  name: GetMissingValuesForRow
  href: api/SudokuSpice.Rules.StandardRuleKeeper.html#SudokuSpice_Rules_StandardRuleKeeper_GetMissingValuesForRow_
  commentId: Overload:SudokuSpice.Rules.StandardRuleKeeper.GetMissingValuesForRow
  isSpec: "True"
  fullName: SudokuSpice.Rules.StandardRuleKeeper.GetMissingValuesForRow
  nameWithType: StandardRuleKeeper.GetMissingValuesForRow
- uid: SudokuSpice.Rules.StandardRuleKeeper.GetPossibleValues(SudokuSpice.Data.Coordinate@)
  name: GetPossibleValues(Coordinate)
  href: api/SudokuSpice.Rules.StandardRuleKeeper.html#SudokuSpice_Rules_StandardRuleKeeper_GetPossibleValues_SudokuSpice_Data_Coordinate__
  commentId: M:SudokuSpice.Rules.StandardRuleKeeper.GetPossibleValues(SudokuSpice.Data.Coordinate@)
  name.vb: GetPossibleValues(ByRef Coordinate)
  fullName: SudokuSpice.Rules.StandardRuleKeeper.GetPossibleValues(SudokuSpice.Data.Coordinate)
  fullName.vb: SudokuSpice.Rules.StandardRuleKeeper.GetPossibleValues(ByRef SudokuSpice.Data.Coordinate)
  nameWithType: StandardRuleKeeper.GetPossibleValues(Coordinate)
  nameWithType.vb: StandardRuleKeeper.GetPossibleValues(ByRef Coordinate)
- uid: SudokuSpice.Rules.StandardRuleKeeper.GetPossibleValues*
  name: GetPossibleValues
  href: api/SudokuSpice.Rules.StandardRuleKeeper.html#SudokuSpice_Rules_StandardRuleKeeper_GetPossibleValues_
  commentId: Overload:SudokuSpice.Rules.StandardRuleKeeper.GetPossibleValues
  isSpec: "True"
  fullName: SudokuSpice.Rules.StandardRuleKeeper.GetPossibleValues
  nameWithType: StandardRuleKeeper.GetPossibleValues
- uid: SudokuSpice.Rules.StandardRuleKeeper.GetRules
  name: GetRules()
  href: api/SudokuSpice.Rules.StandardRuleKeeper.html#SudokuSpice_Rules_StandardRuleKeeper_GetRules
  commentId: M:SudokuSpice.Rules.StandardRuleKeeper.GetRules
  fullName: SudokuSpice.Rules.StandardRuleKeeper.GetRules()
  nameWithType: StandardRuleKeeper.GetRules()
- uid: SudokuSpice.Rules.StandardRuleKeeper.GetRules*
  name: GetRules
  href: api/SudokuSpice.Rules.StandardRuleKeeper.html#SudokuSpice_Rules_StandardRuleKeeper_GetRules_
  commentId: Overload:SudokuSpice.Rules.StandardRuleKeeper.GetRules
  isSpec: "True"
  fullName: SudokuSpice.Rules.StandardRuleKeeper.GetRules
  nameWithType: StandardRuleKeeper.GetRules
- uid: SudokuSpice.Rules.StandardRuleKeeper.Revert(SudokuSpice.Data.Coordinate@,System.Int32)
  name: Revert(Coordinate, Int32)
  href: api/SudokuSpice.Rules.StandardRuleKeeper.html#SudokuSpice_Rules_StandardRuleKeeper_Revert_SudokuSpice_Data_Coordinate__System_Int32_
  commentId: M:SudokuSpice.Rules.StandardRuleKeeper.Revert(SudokuSpice.Data.Coordinate@,System.Int32)
  name.vb: Revert(ByRef Coordinate, Int32)
  fullName: SudokuSpice.Rules.StandardRuleKeeper.Revert(SudokuSpice.Data.Coordinate, System.Int32)
  fullName.vb: SudokuSpice.Rules.StandardRuleKeeper.Revert(ByRef SudokuSpice.Data.Coordinate, System.Int32)
  nameWithType: StandardRuleKeeper.Revert(Coordinate, Int32)
  nameWithType.vb: StandardRuleKeeper.Revert(ByRef Coordinate, Int32)
- uid: SudokuSpice.Rules.StandardRuleKeeper.Revert(SudokuSpice.Data.Coordinate@,System.Int32,SudokuSpice.Data.CoordinateTracker)
  name: Revert(Coordinate, Int32, CoordinateTracker)
  href: api/SudokuSpice.Rules.StandardRuleKeeper.html#SudokuSpice_Rules_StandardRuleKeeper_Revert_SudokuSpice_Data_Coordinate__System_Int32_SudokuSpice_Data_CoordinateTracker_
  commentId: M:SudokuSpice.Rules.StandardRuleKeeper.Revert(SudokuSpice.Data.Coordinate@,System.Int32,SudokuSpice.Data.CoordinateTracker)
  name.vb: Revert(ByRef Coordinate, Int32, CoordinateTracker)
  fullName: SudokuSpice.Rules.StandardRuleKeeper.Revert(SudokuSpice.Data.Coordinate, System.Int32, SudokuSpice.Data.CoordinateTracker)
  fullName.vb: SudokuSpice.Rules.StandardRuleKeeper.Revert(ByRef SudokuSpice.Data.Coordinate, System.Int32, SudokuSpice.Data.CoordinateTracker)
  nameWithType: StandardRuleKeeper.Revert(Coordinate, Int32, CoordinateTracker)
  nameWithType.vb: StandardRuleKeeper.Revert(ByRef Coordinate, Int32, CoordinateTracker)
- uid: SudokuSpice.Rules.StandardRuleKeeper.Revert*
  name: Revert
  href: api/SudokuSpice.Rules.StandardRuleKeeper.html#SudokuSpice_Rules_StandardRuleKeeper_Revert_
  commentId: Overload:SudokuSpice.Rules.StandardRuleKeeper.Revert
  isSpec: "True"
  fullName: SudokuSpice.Rules.StandardRuleKeeper.Revert
  nameWithType: StandardRuleKeeper.Revert
- uid: SudokuSpice.Rules.StandardRuleKeeper.TrySet(SudokuSpice.Data.Coordinate@,System.Int32)
  name: TrySet(Coordinate, Int32)
  href: api/SudokuSpice.Rules.StandardRuleKeeper.html#SudokuSpice_Rules_StandardRuleKeeper_TrySet_SudokuSpice_Data_Coordinate__System_Int32_
  commentId: M:SudokuSpice.Rules.StandardRuleKeeper.TrySet(SudokuSpice.Data.Coordinate@,System.Int32)
  name.vb: TrySet(ByRef Coordinate, Int32)
  fullName: SudokuSpice.Rules.StandardRuleKeeper.TrySet(SudokuSpice.Data.Coordinate, System.Int32)
  fullName.vb: SudokuSpice.Rules.StandardRuleKeeper.TrySet(ByRef SudokuSpice.Data.Coordinate, System.Int32)
  nameWithType: StandardRuleKeeper.TrySet(Coordinate, Int32)
  nameWithType.vb: StandardRuleKeeper.TrySet(ByRef Coordinate, Int32)
- uid: SudokuSpice.Rules.StandardRuleKeeper.TrySet*
  name: TrySet
  href: api/SudokuSpice.Rules.StandardRuleKeeper.html#SudokuSpice_Rules_StandardRuleKeeper_TrySet_
  commentId: Overload:SudokuSpice.Rules.StandardRuleKeeper.TrySet
  isSpec: "True"
  fullName: SudokuSpice.Rules.StandardRuleKeeper.TrySet
  nameWithType: StandardRuleKeeper.TrySet
- uid: SudokuSpice.Rules.StandardRuleKeeper.Unset(SudokuSpice.Data.Coordinate@,System.Int32)
  name: Unset(Coordinate, Int32)
  href: api/SudokuSpice.Rules.StandardRuleKeeper.html#SudokuSpice_Rules_StandardRuleKeeper_Unset_SudokuSpice_Data_Coordinate__System_Int32_
  commentId: M:SudokuSpice.Rules.StandardRuleKeeper.Unset(SudokuSpice.Data.Coordinate@,System.Int32)
  name.vb: Unset(ByRef Coordinate, Int32)
  fullName: SudokuSpice.Rules.StandardRuleKeeper.Unset(SudokuSpice.Data.Coordinate, System.Int32)
  fullName.vb: SudokuSpice.Rules.StandardRuleKeeper.Unset(ByRef SudokuSpice.Data.Coordinate, System.Int32)
  nameWithType: StandardRuleKeeper.Unset(Coordinate, Int32)
  nameWithType.vb: StandardRuleKeeper.Unset(ByRef Coordinate, Int32)
- uid: SudokuSpice.Rules.StandardRuleKeeper.Unset*
  name: Unset
  href: api/SudokuSpice.Rules.StandardRuleKeeper.html#SudokuSpice_Rules_StandardRuleKeeper_Unset_
  commentId: Overload:SudokuSpice.Rules.StandardRuleKeeper.Unset
  isSpec: "True"
  fullName: SudokuSpice.Rules.StandardRuleKeeper.Unset
  nameWithType: StandardRuleKeeper.Unset
- uid: SudokuSpice.Rules.StandardRuleKeeper.Update(SudokuSpice.Data.Coordinate@,System.Int32,SudokuSpice.Data.CoordinateTracker)
  name: Update(Coordinate, Int32, CoordinateTracker)
  href: api/SudokuSpice.Rules.StandardRuleKeeper.html#SudokuSpice_Rules_StandardRuleKeeper_Update_SudokuSpice_Data_Coordinate__System_Int32_SudokuSpice_Data_CoordinateTracker_
  commentId: M:SudokuSpice.Rules.StandardRuleKeeper.Update(SudokuSpice.Data.Coordinate@,System.Int32,SudokuSpice.Data.CoordinateTracker)
  name.vb: Update(ByRef Coordinate, Int32, CoordinateTracker)
  fullName: SudokuSpice.Rules.StandardRuleKeeper.Update(SudokuSpice.Data.Coordinate, System.Int32, SudokuSpice.Data.CoordinateTracker)
  fullName.vb: SudokuSpice.Rules.StandardRuleKeeper.Update(ByRef SudokuSpice.Data.Coordinate, System.Int32, SudokuSpice.Data.CoordinateTracker)
  nameWithType: StandardRuleKeeper.Update(Coordinate, Int32, CoordinateTracker)
  nameWithType.vb: StandardRuleKeeper.Update(ByRef Coordinate, Int32, CoordinateTracker)
- uid: SudokuSpice.Rules.StandardRuleKeeper.Update*
  name: Update
  href: api/SudokuSpice.Rules.StandardRuleKeeper.html#SudokuSpice_Rules_StandardRuleKeeper_Update_
  commentId: Overload:SudokuSpice.Rules.StandardRuleKeeper.Update
  isSpec: "True"
  fullName: SudokuSpice.Rules.StandardRuleKeeper.Update
  nameWithType: StandardRuleKeeper.Update
- uid: SudokuSpice.Rules.StandardRules
  name: StandardRules
  href: api/SudokuSpice.Rules.StandardRules.html
  commentId: T:SudokuSpice.Rules.StandardRules
  fullName: SudokuSpice.Rules.StandardRules
  nameWithType: StandardRules
- uid: SudokuSpice.Rules.StandardRules.#ctor(SudokuSpice.IReadOnlyBoxPuzzle,SudokuSpice.Data.BitVector)
  name: StandardRules(IReadOnlyBoxPuzzle, BitVector)
  href: api/SudokuSpice.Rules.StandardRules.html#SudokuSpice_Rules_StandardRules__ctor_SudokuSpice_IReadOnlyBoxPuzzle_SudokuSpice_Data_BitVector_
  commentId: M:SudokuSpice.Rules.StandardRules.#ctor(SudokuSpice.IReadOnlyBoxPuzzle,SudokuSpice.Data.BitVector)
  fullName: SudokuSpice.Rules.StandardRules.StandardRules(SudokuSpice.IReadOnlyBoxPuzzle, SudokuSpice.Data.BitVector)
  nameWithType: StandardRules.StandardRules(IReadOnlyBoxPuzzle, BitVector)
- uid: SudokuSpice.Rules.StandardRules.#ctor*
  name: StandardRules
  href: api/SudokuSpice.Rules.StandardRules.html#SudokuSpice_Rules_StandardRules__ctor_
  commentId: Overload:SudokuSpice.Rules.StandardRules.#ctor
  isSpec: "True"
  fullName: SudokuSpice.Rules.StandardRules.StandardRules
  nameWithType: StandardRules.StandardRules
- uid: SudokuSpice.Rules.StandardRules.CopyWithNewReference(SudokuSpice.IReadOnlyPuzzle)
  name: CopyWithNewReference(IReadOnlyPuzzle)
  href: api/SudokuSpice.Rules.StandardRules.html#SudokuSpice_Rules_StandardRules_CopyWithNewReference_SudokuSpice_IReadOnlyPuzzle_
  commentId: M:SudokuSpice.Rules.StandardRules.CopyWithNewReference(SudokuSpice.IReadOnlyPuzzle)
  fullName: SudokuSpice.Rules.StandardRules.CopyWithNewReference(SudokuSpice.IReadOnlyPuzzle)
  nameWithType: StandardRules.CopyWithNewReference(IReadOnlyPuzzle)
- uid: SudokuSpice.Rules.StandardRules.CopyWithNewReference*
  name: CopyWithNewReference
  href: api/SudokuSpice.Rules.StandardRules.html#SudokuSpice_Rules_StandardRules_CopyWithNewReference_
  commentId: Overload:SudokuSpice.Rules.StandardRules.CopyWithNewReference
  isSpec: "True"
  fullName: SudokuSpice.Rules.StandardRules.CopyWithNewReference
  nameWithType: StandardRules.CopyWithNewReference
- uid: SudokuSpice.Rules.StandardRules.GetMissingValuesForBox(System.Int32)
  name: GetMissingValuesForBox(Int32)
  href: api/SudokuSpice.Rules.StandardRules.html#SudokuSpice_Rules_StandardRules_GetMissingValuesForBox_System_Int32_
  commentId: M:SudokuSpice.Rules.StandardRules.GetMissingValuesForBox(System.Int32)
  fullName: SudokuSpice.Rules.StandardRules.GetMissingValuesForBox(System.Int32)
  nameWithType: StandardRules.GetMissingValuesForBox(Int32)
- uid: SudokuSpice.Rules.StandardRules.GetMissingValuesForBox*
  name: GetMissingValuesForBox
  href: api/SudokuSpice.Rules.StandardRules.html#SudokuSpice_Rules_StandardRules_GetMissingValuesForBox_
  commentId: Overload:SudokuSpice.Rules.StandardRules.GetMissingValuesForBox
  isSpec: "True"
  fullName: SudokuSpice.Rules.StandardRules.GetMissingValuesForBox
  nameWithType: StandardRules.GetMissingValuesForBox
- uid: SudokuSpice.Rules.StandardRules.GetMissingValuesForColumn(System.Int32)
  name: GetMissingValuesForColumn(Int32)
  href: api/SudokuSpice.Rules.StandardRules.html#SudokuSpice_Rules_StandardRules_GetMissingValuesForColumn_System_Int32_
  commentId: M:SudokuSpice.Rules.StandardRules.GetMissingValuesForColumn(System.Int32)
  fullName: SudokuSpice.Rules.StandardRules.GetMissingValuesForColumn(System.Int32)
  nameWithType: StandardRules.GetMissingValuesForColumn(Int32)
- uid: SudokuSpice.Rules.StandardRules.GetMissingValuesForColumn*
  name: GetMissingValuesForColumn
  href: api/SudokuSpice.Rules.StandardRules.html#SudokuSpice_Rules_StandardRules_GetMissingValuesForColumn_
  commentId: Overload:SudokuSpice.Rules.StandardRules.GetMissingValuesForColumn
  isSpec: "True"
  fullName: SudokuSpice.Rules.StandardRules.GetMissingValuesForColumn
  nameWithType: StandardRules.GetMissingValuesForColumn
- uid: SudokuSpice.Rules.StandardRules.GetMissingValuesForRow(System.Int32)
  name: GetMissingValuesForRow(Int32)
  href: api/SudokuSpice.Rules.StandardRules.html#SudokuSpice_Rules_StandardRules_GetMissingValuesForRow_System_Int32_
  commentId: M:SudokuSpice.Rules.StandardRules.GetMissingValuesForRow(System.Int32)
  fullName: SudokuSpice.Rules.StandardRules.GetMissingValuesForRow(System.Int32)
  nameWithType: StandardRules.GetMissingValuesForRow(Int32)
- uid: SudokuSpice.Rules.StandardRules.GetMissingValuesForRow*
  name: GetMissingValuesForRow
  href: api/SudokuSpice.Rules.StandardRules.html#SudokuSpice_Rules_StandardRules_GetMissingValuesForRow_
  commentId: Overload:SudokuSpice.Rules.StandardRules.GetMissingValuesForRow
  isSpec: "True"
  fullName: SudokuSpice.Rules.StandardRules.GetMissingValuesForRow
  nameWithType: StandardRules.GetMissingValuesForRow
- uid: SudokuSpice.Rules.StandardRules.GetPossibleValues(SudokuSpice.Data.Coordinate@)
  name: GetPossibleValues(Coordinate)
  href: api/SudokuSpice.Rules.StandardRules.html#SudokuSpice_Rules_StandardRules_GetPossibleValues_SudokuSpice_Data_Coordinate__
  commentId: M:SudokuSpice.Rules.StandardRules.GetPossibleValues(SudokuSpice.Data.Coordinate@)
  name.vb: GetPossibleValues(ByRef Coordinate)
  fullName: SudokuSpice.Rules.StandardRules.GetPossibleValues(SudokuSpice.Data.Coordinate)
  fullName.vb: SudokuSpice.Rules.StandardRules.GetPossibleValues(ByRef SudokuSpice.Data.Coordinate)
  nameWithType: StandardRules.GetPossibleValues(Coordinate)
  nameWithType.vb: StandardRules.GetPossibleValues(ByRef Coordinate)
- uid: SudokuSpice.Rules.StandardRules.GetPossibleValues*
  name: GetPossibleValues
  href: api/SudokuSpice.Rules.StandardRules.html#SudokuSpice_Rules_StandardRules_GetPossibleValues_
  commentId: Overload:SudokuSpice.Rules.StandardRules.GetPossibleValues
  isSpec: "True"
  fullName: SudokuSpice.Rules.StandardRules.GetPossibleValues
  nameWithType: StandardRules.GetPossibleValues
- uid: SudokuSpice.Rules.StandardRules.Revert(SudokuSpice.Data.Coordinate@,System.Int32)
  name: Revert(Coordinate, Int32)
  href: api/SudokuSpice.Rules.StandardRules.html#SudokuSpice_Rules_StandardRules_Revert_SudokuSpice_Data_Coordinate__System_Int32_
  commentId: M:SudokuSpice.Rules.StandardRules.Revert(SudokuSpice.Data.Coordinate@,System.Int32)
  name.vb: Revert(ByRef Coordinate, Int32)
  fullName: SudokuSpice.Rules.StandardRules.Revert(SudokuSpice.Data.Coordinate, System.Int32)
  fullName.vb: SudokuSpice.Rules.StandardRules.Revert(ByRef SudokuSpice.Data.Coordinate, System.Int32)
  nameWithType: StandardRules.Revert(Coordinate, Int32)
  nameWithType.vb: StandardRules.Revert(ByRef Coordinate, Int32)
- uid: SudokuSpice.Rules.StandardRules.Revert(SudokuSpice.Data.Coordinate@,System.Int32,SudokuSpice.Data.CoordinateTracker)
  name: Revert(Coordinate, Int32, CoordinateTracker)
  href: api/SudokuSpice.Rules.StandardRules.html#SudokuSpice_Rules_StandardRules_Revert_SudokuSpice_Data_Coordinate__System_Int32_SudokuSpice_Data_CoordinateTracker_
  commentId: M:SudokuSpice.Rules.StandardRules.Revert(SudokuSpice.Data.Coordinate@,System.Int32,SudokuSpice.Data.CoordinateTracker)
  name.vb: Revert(ByRef Coordinate, Int32, CoordinateTracker)
  fullName: SudokuSpice.Rules.StandardRules.Revert(SudokuSpice.Data.Coordinate, System.Int32, SudokuSpice.Data.CoordinateTracker)
  fullName.vb: SudokuSpice.Rules.StandardRules.Revert(ByRef SudokuSpice.Data.Coordinate, System.Int32, SudokuSpice.Data.CoordinateTracker)
  nameWithType: StandardRules.Revert(Coordinate, Int32, CoordinateTracker)
  nameWithType.vb: StandardRules.Revert(ByRef Coordinate, Int32, CoordinateTracker)
- uid: SudokuSpice.Rules.StandardRules.Revert*
  name: Revert
  href: api/SudokuSpice.Rules.StandardRules.html#SudokuSpice_Rules_StandardRules_Revert_
  commentId: Overload:SudokuSpice.Rules.StandardRules.Revert
  isSpec: "True"
  fullName: SudokuSpice.Rules.StandardRules.Revert
  nameWithType: StandardRules.Revert
- uid: SudokuSpice.Rules.StandardRules.Update(SudokuSpice.Data.Coordinate@,System.Int32,SudokuSpice.Data.CoordinateTracker)
  name: Update(Coordinate, Int32, CoordinateTracker)
  href: api/SudokuSpice.Rules.StandardRules.html#SudokuSpice_Rules_StandardRules_Update_SudokuSpice_Data_Coordinate__System_Int32_SudokuSpice_Data_CoordinateTracker_
  commentId: M:SudokuSpice.Rules.StandardRules.Update(SudokuSpice.Data.Coordinate@,System.Int32,SudokuSpice.Data.CoordinateTracker)
  name.vb: Update(ByRef Coordinate, Int32, CoordinateTracker)
  fullName: SudokuSpice.Rules.StandardRules.Update(SudokuSpice.Data.Coordinate, System.Int32, SudokuSpice.Data.CoordinateTracker)
  fullName.vb: SudokuSpice.Rules.StandardRules.Update(ByRef SudokuSpice.Data.Coordinate, System.Int32, SudokuSpice.Data.CoordinateTracker)
  nameWithType: StandardRules.Update(Coordinate, Int32, CoordinateTracker)
  nameWithType.vb: StandardRules.Update(ByRef Coordinate, Int32, CoordinateTracker)
- uid: SudokuSpice.Rules.StandardRules.Update*
  name: Update
  href: api/SudokuSpice.Rules.StandardRules.html#SudokuSpice_Rules_StandardRules_Update_
  commentId: Overload:SudokuSpice.Rules.StandardRules.Update
  isSpec: "True"
  fullName: SudokuSpice.Rules.StandardRules.Update
  nameWithType: StandardRules.Update
- uid: SudokuSpice.Solver
  name: Solver
  href: api/SudokuSpice.Solver.html
  commentId: T:SudokuSpice.Solver
  fullName: SudokuSpice.Solver
  nameWithType: Solver
- uid: SudokuSpice.Solver.#ctor(SudokuSpice.IPuzzle,SudokuSpice.Data.PossibleValues,SudokuSpice.Rules.ISudokuRuleKeeper,SudokuSpice.Heuristics.ISudokuHeuristic)
  name: Solver(IPuzzle, PossibleValues, ISudokuRuleKeeper, ISudokuHeuristic)
  href: api/SudokuSpice.Solver.html#SudokuSpice_Solver__ctor_SudokuSpice_IPuzzle_SudokuSpice_Data_PossibleValues_SudokuSpice_Rules_ISudokuRuleKeeper_SudokuSpice_Heuristics_ISudokuHeuristic_
  commentId: M:SudokuSpice.Solver.#ctor(SudokuSpice.IPuzzle,SudokuSpice.Data.PossibleValues,SudokuSpice.Rules.ISudokuRuleKeeper,SudokuSpice.Heuristics.ISudokuHeuristic)
  fullName: SudokuSpice.Solver.Solver(SudokuSpice.IPuzzle, SudokuSpice.Data.PossibleValues, SudokuSpice.Rules.ISudokuRuleKeeper, SudokuSpice.Heuristics.ISudokuHeuristic)
  nameWithType: Solver.Solver(IPuzzle, PossibleValues, ISudokuRuleKeeper, ISudokuHeuristic)
- uid: SudokuSpice.Solver.#ctor(SudokuSpice.Puzzle)
  name: Solver(Puzzle)
  href: api/SudokuSpice.Solver.html#SudokuSpice_Solver__ctor_SudokuSpice_Puzzle_
  commentId: M:SudokuSpice.Solver.#ctor(SudokuSpice.Puzzle)
  fullName: SudokuSpice.Solver.Solver(SudokuSpice.Puzzle)
  nameWithType: Solver.Solver(Puzzle)
- uid: SudokuSpice.Solver.#ctor*
  name: Solver
  href: api/SudokuSpice.Solver.html#SudokuSpice_Solver__ctor_
  commentId: Overload:SudokuSpice.Solver.#ctor
  isSpec: "True"
  fullName: SudokuSpice.Solver.Solver
  nameWithType: Solver.Solver
- uid: SudokuSpice.Solver.GetStatsForAllSolutions
  name: GetStatsForAllSolutions()
  href: api/SudokuSpice.Solver.html#SudokuSpice_Solver_GetStatsForAllSolutions
  commentId: M:SudokuSpice.Solver.GetStatsForAllSolutions
  fullName: SudokuSpice.Solver.GetStatsForAllSolutions()
  nameWithType: Solver.GetStatsForAllSolutions()
- uid: SudokuSpice.Solver.GetStatsForAllSolutions*
  name: GetStatsForAllSolutions
  href: api/SudokuSpice.Solver.html#SudokuSpice_Solver_GetStatsForAllSolutions_
  commentId: Overload:SudokuSpice.Solver.GetStatsForAllSolutions
  isSpec: "True"
  fullName: SudokuSpice.Solver.GetStatsForAllSolutions
  nameWithType: Solver.GetStatsForAllSolutions
- uid: SudokuSpice.Solver.Solve
  name: Solve()
  href: api/SudokuSpice.Solver.html#SudokuSpice_Solver_Solve
  commentId: M:SudokuSpice.Solver.Solve
  fullName: SudokuSpice.Solver.Solve()
  nameWithType: Solver.Solve()
- uid: SudokuSpice.Solver.Solve*
  name: Solve
  href: api/SudokuSpice.Solver.html#SudokuSpice_Solver_Solve_
  commentId: Overload:SudokuSpice.Solver.Solve
  isSpec: "True"
  fullName: SudokuSpice.Solver.Solve
  nameWithType: Solver.Solve
- uid: SudokuSpice.Solver.SolveRandomly
  name: SolveRandomly()
  href: api/SudokuSpice.Solver.html#SudokuSpice_Solver_SolveRandomly
  commentId: M:SudokuSpice.Solver.SolveRandomly
  fullName: SudokuSpice.Solver.SolveRandomly()
  nameWithType: Solver.SolveRandomly()
- uid: SudokuSpice.Solver.SolveRandomly*
  name: SolveRandomly
  href: api/SudokuSpice.Solver.html#SudokuSpice_Solver_SolveRandomly_
  commentId: Overload:SudokuSpice.Solver.SolveRandomly
  isSpec: "True"
  fullName: SudokuSpice.Solver.SolveRandomly
  nameWithType: Solver.SolveRandomly
- uid: SudokuSpice.StandardPuzzleGenerator
  name: StandardPuzzleGenerator
  href: api/SudokuSpice.StandardPuzzleGenerator.html
  commentId: T:SudokuSpice.StandardPuzzleGenerator
  fullName: SudokuSpice.StandardPuzzleGenerator
  nameWithType: StandardPuzzleGenerator
- uid: SudokuSpice.StandardPuzzleGenerator.#ctor(System.Int32)
  name: StandardPuzzleGenerator(Int32)
  href: api/SudokuSpice.StandardPuzzleGenerator.html#SudokuSpice_StandardPuzzleGenerator__ctor_System_Int32_
  commentId: M:SudokuSpice.StandardPuzzleGenerator.#ctor(System.Int32)
  fullName: SudokuSpice.StandardPuzzleGenerator.StandardPuzzleGenerator(System.Int32)
  nameWithType: StandardPuzzleGenerator.StandardPuzzleGenerator(Int32)
- uid: SudokuSpice.StandardPuzzleGenerator.#ctor*
  name: StandardPuzzleGenerator
  href: api/SudokuSpice.StandardPuzzleGenerator.html#SudokuSpice_StandardPuzzleGenerator__ctor_
  commentId: Overload:SudokuSpice.StandardPuzzleGenerator.#ctor
  isSpec: "True"
  fullName: SudokuSpice.StandardPuzzleGenerator.StandardPuzzleGenerator
  nameWithType: StandardPuzzleGenerator.StandardPuzzleGenerator
- uid: SudokuSpice.StandardPuzzleGenerator.Generate(System.Int32,System.TimeSpan)
  name: Generate(Int32, TimeSpan)
  href: api/SudokuSpice.StandardPuzzleGenerator.html#SudokuSpice_StandardPuzzleGenerator_Generate_System_Int32_System_TimeSpan_
  commentId: M:SudokuSpice.StandardPuzzleGenerator.Generate(System.Int32,System.TimeSpan)
  fullName: SudokuSpice.StandardPuzzleGenerator.Generate(System.Int32, System.TimeSpan)
  nameWithType: StandardPuzzleGenerator.Generate(Int32, TimeSpan)
- uid: SudokuSpice.StandardPuzzleGenerator.Generate*
  name: Generate
  href: api/SudokuSpice.StandardPuzzleGenerator.html#SudokuSpice_StandardPuzzleGenerator_Generate_
  commentId: Overload:SudokuSpice.StandardPuzzleGenerator.Generate
  isSpec: "True"
  fullName: SudokuSpice.StandardPuzzleGenerator.Generate
  nameWithType: StandardPuzzleGenerator.Generate
